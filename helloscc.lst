                                                                ; -----------------------------------------------------------
                                                                ; Small C Compiler for TRDOS 386 (v2.0.9 and later)
                                                                ; Erdogan Tan - 2024
                                                                ; Beginning: 05/09/2024
                                                                ; Last Update: 22/09/2024
                                                                ; -----------------------------------------------------------
                                                                ; Derived from 'scc.asm' file of KolibriOS SCC source code
                                                                ; 2024
                                                                
                                                                ;B+ System header
                                                                use32
                                                                org 0x0
00000000: E9 95 19 00 00                                          jmp START	; TRDOS 386 PRG file doesn't contain header
                                                                
00000005: 00 00 00 00                                             dd  0
                                                                
                                                                ;B+ Include C files
                                                                  ; Compiler tools
                                                                  include "INTRINS.ASM"
                                                                ; -----------------------------------------------------------
                                                                ; Small C Compiler for TRDOS 386 (v2.0.9 and later)
                                                                ; Erdogan Tan - 2024
                                                                ; Beginning: 05/09/2024
                                                                ; Last Update: 11/09/2024
                                                                ; -----------------------------------------------------------
                                                                ; Derived from 'intrins.asm' file of KolibriOS SCC source code
                                                                ; 2024
                                                                
                                                                ;
                                                                ; Small-C Run Time Library for Win NT
                                                                ;
                                                                ; Nasm version  17/Nov/98  H T Walheim
                                                                ; Revised:	20/Nov/98  HTW [Bugs in switch]
                                                                ;
                                                                
                                                                _CCARGC:
                                                                ;B+ Ellipses arguments ( ,...)
                                                                  ;cl - argument count
                                                                
00000009: 31 C0                                                   xor  eax,eax
0000000B: 0F B6 C1                                                movzx eax,cl  ; No sign-extension
0000000E: C3                                                      ret
                                                                ;E:.
                                                                
                                                                ;B+ Compare
                                                                
                                                                __ult:
                                                                ;B+ ???
0000000F: 39 D8                                                   cmp  eax,ebx
00000011: 77 46                                                   ja   true
00000013: 31 C0                                                   xor  eax,eax
00000015: C3                                                      ret
                                                                ;E:.
                                                                
                                                                __ugt:
                                                                ;B+ ???
00000016: 39 D8                                                   cmp  eax,ebx
00000018: 72 3F                                                   jb   true
0000001A: 31 C0                                                   xor  eax,eax
0000001C: C3                                                      ret
                                                                ;E:.
                                                                
                                                                __ule:
                                                                ;B+ ???
0000001D: 39 D8                                                   cmp  eax,ebx
0000001F: 73 38                                                   jae  true
00000021: 31 C0                                                   xor  eax,eax
00000023: C3                                                      ret
                                                                ;E:.
                                                                
                                                                __uge:
                                                                ;B+ ???
00000024: 39 D8                                                   cmp  eax,ebx
00000026: 76 31                                                   jbe  true
00000028: 31 C0                                                   xor  eax,eax
0000002A: C3                                                      ret
                                                                ;E:.
                                                                
                                                                __eq:
                                                                ;B+ ???
0000002B: 39 D8                                                   cmp  eax,ebx
0000002D: 74 2A                                                   je   true
0000002F: 31 C0                                                   xor  eax,eax
00000031: C3                                                      ret
                                                                ;E:.
                                                                
                                                                __ne:
                                                                ;B+ ???
00000032: 39 D8                                                   cmp  eax,ebx
00000034: 75 23                                                   jne  true
00000036: 31 C0                                                   xor  eax,eax
00000038: C3                                                      ret
                                                                ;E:.
                                                                
                                                                __lt:
                                                                ;B+ ???
00000039: 39 D8                                                   cmp  eax,ebx
0000003B: 7F 1C                                                   jg   true
0000003D: 31 C0                                                   xor  eax,eax
0000003F: C3                                                      ret
                                                                ;E:.
                                                                
                                                                __gt:
                                                                ;B+ ???
00000040: 39 D8                                                   cmp  eax,ebx
00000042: 7C 15                                                   jl   true
00000044: 31 C0                                                   xor  eax,eax
00000046: C3                                                      ret
                                                                ;E:.
                                                                
                                                                __le:
                                                                ;B+ ???
00000047: 39 D8                                                   cmp  eax,ebx
00000049: 7D 0E                                                   jge  true
0000004B: 31 C0                                                   xor  eax,eax
0000004D: C3                                                      ret
                                                                ;E:.
                                                                
                                                                __ge:
                                                                ;B+ ???
0000004E: 39 D8                                                   cmp  eax,ebx
00000050: 7E 07                                                   jle  true
00000052: 31 C0                                                   xor  eax,eax
00000054: C3                                                      ret
                                                                ;E:.
                                                                
                                                                ;E:.
                                                                
                                                                __lneg:
                                                                ;B+ Logical Negate of Primary
00000055: 09 C0                                                   or   eax,eax
00000057: 75 06                                                   jnz  false
                                                                true:
00000059: B8 01 00 00 00                                          mov  eax,1
0000005E: C3                                                      ret
                                                                
                                                                false:
0000005F: 31 C0                                                   xor  eax,eax
00000061: C3                                                      ret
                                                                ;E:.
                                                                
                                                                __switch:
                                                                ;B+ Execute "switch" statement
                                                                
                                                                 ;eax   - switch value
                                                                 ;[esp] - pointer to switch table
                                                                 ;   dd addr1,value1
                                                                 ;         ...
                                                                 ;   dd 0
                                                                 ;   [jmp default]
                                                                 ;   continuation
                                                                 ;
                                                                 ; Revised: 20/Nov/98 [JECXZ needed]
                                                                
00000062: 5B                                                     pop  ebx
00000063: EB 03                                                   jmp  skip
                                                                back:
00000065: 83 C3 08                                                add  ebx,8        ;next case-pair
                                                                skip:
00000068: 8B 0B                                                   mov  ecx,[ebx]    ;case-label location (adress)
0000006A: E3 07                                                   jecxz default
0000006C: 3B 43 04                                                cmp  eax,[ebx+4]  ;test case-value
0000006F: 75 F4                                                   jnz  back
00000071: FF E1                                                   jmp  ecx          ;match -- jump to case
                                                                default:
00000073: 83 C3 04                                                add  ebx,4
00000076: FF E3                                                   jmp  ebx          ;jump to default/continuation
                                                                ;E:.
                                                                
                                                                
                                                                  ; C Library ("stdio.asm")
                                                                  include "LIBSTD.ASM"
                                                                ; -----------------------------------------------------------
                                                                ; Small C Compiler for TRDOS 386 (v2.0.9 and later)
                                                                ; Erdogan Tan - 2024
                                                                ; Beginning: 05/09/2024
                                                                ; Last Update: 23/09/2024
                                                                ; -----------------------------------------------------------
                                                                ; Derived from 'libstd.asm' file of KolibriOS SCC source code
                                                                ; 2024
                                                                
                                                                ;NOTE: The assembly source code will be more optimized later.
                                                                ;  For now (current version), semi-optimized source code
                                                                ;  will be preserved for comparison with existing C code.
                                                                ;Erdogan Tan - 11/09/2024 
                                                                
                                                                ; TRDOS 386 v2 modification
                                                                ; Write string to standard output.
                                                                ;
                                                                ;puts(string) char *string;
                                                                ;{while(*string)
                                                                ;     OS_putc(*string++);
                                                                ; OS_putc('\n');
                                                                
                                                                _puts:
00000078: 55                                                    PUSH EBP
00000079: 89 E5                                                 MOV  EBP, ESP
                                                                _puts_1:
0000007B: 8D 45 08                                              LEA  EAX, [EBP+8]
0000007E: 50                                                    PUSH EAX	; (*string)
0000007F: 8B 18                                                 MOV  EBX, [EAX] ; string's itself
00000081: 0F BE 03                                              MOVSX EAX, BYTE [EBX] ; char in string
00000084: 5B                                                    POP  EBX
00000085: 09 C0                                                 OR   EAX, EAX
00000087: 74 0D                                                 JZ   short _puts_2
00000089: FF 03                                                 INC  DWORD [EBX] ; (*string++);
0000008B: 50                                                    PUSH EAX
0000008C: B1 01                                                 MOV  CL, 1 ; 1 argument
0000008E: E8 5B 17 00 00                                        CALL _OS_putc
                                                                ;ADD ESP, 4
00000093: 58                                                    POP  EAX
00000094: EB E5                                                 JMP  short _puts_1
                                                                _puts_2:
00000096: 5D                                                    POP  EBP
00000097: C3                                                    RETN
                                                                
                                                                _reverse:
00000098: 55                                                    PUSH EBP
00000099: 89 E5                                                 MOV  EBP, ESP
0000009B: 83 C4 F8                                              ADD  ESP, -8
0000009E: 8D 45 FC                                              LEA  EAX, [EBP-4]
000000A1: 50                                                    PUSH EAX
000000A2: 8D 45 08                                              LEA  EAX, [EBP+8]
000000A5: 89 C3                                                 MOV  EBX, EAX
000000A7: 8B 03                                                 MOV  EAX, [EBX]
000000A9: 50                                                    PUSH EAX
000000AA: 8D 45 08                                              LEA  EAX, [EBP+8]
000000AD: 89 C3                                                 MOV  EBX, EAX
000000AF: 8B 03                                                 MOV  EAX, [EBX]
000000B1: 50                                                    PUSH EAX
000000B2: B1 01                                                 MOV  CL, 1
000000B4: E8 AA 00 00 00                                        CALL _strlen
000000B9: 83 C4 04                                              ADD  ESP, 4
000000BC: 5B                                                    POP  EBX
000000BD: 01 D8                                                 ADD  EAX, EBX
000000BF: 89 C3                                                 MOV  EBX, EAX
000000C1: B8 01 00 00 00                                        MOV  EAX, 1
000000C6: 93                                                    XCHG EAX, EBX
000000C7: 29 D8                                                 SUB  EAX, EBX
000000C9: 5B                                                    POP  EBX
000000CA: 89 03                                                 MOV  [EBX], EAX
                                                                _lib_3:
000000CC: 8D 45 08                                              LEA  EAX, [EBP+8]
000000CF: 89 C3                                                 MOV  EBX, EAX
000000D1: 8B 03                                                 MOV  EAX, [EBX]
000000D3: 50                                                    PUSH EAX
000000D4: 8D 45 FC                                              LEA  EAX, [EBP-4]
000000D7: 89 C3                                                 MOV  EBX, EAX
000000D9: 8B 03                                                 MOV  EAX, [EBX]
000000DB: 5B                                                    POP  EBX
000000DC: E8 2E FF FF FF                                        CALL __ult
000000E1: 09 C0                                                 OR   EAX, EAX
000000E3: 75 02                                                 JNE  short _lib_5
000000E5: EB 46                                                 JMP  short _lib_4
                                                                _lib_5:
000000E7: 8D 45 F8                                              LEA  EAX, [EBP-8]
000000EA: 50                                                    PUSH EAX
000000EB: 8D 45 08                                              LEA  EAX, [EBP+8]
000000EE: 89 C3                                                 MOV  EBX, EAX
000000F0: 8B 03                                                 MOV  EAX, [EBX]
000000F2: 89 C3                                                 MOV  EBX, EAX
000000F4: 0F BE 03                                              MOVSX EAX,BYTE [EBX]
000000F7: 5B                                                    POP  EBX
000000F8: 89 03                                                 MOV  [EBX], EAX
000000FA: 8D 45 08                                              LEA  EAX, [EBP+8]
000000FD: 89 C3                                                 MOV  EBX, EAX
000000FF: 8B 03                                                 MOV  EAX, [EBX]
00000101: 40                                                    INC  EAX
00000102: 89 03                                                 MOV  [EBX], EAX
00000104: 48                                                    DEC  EAX
00000105: 50                                                    PUSH EAX
00000106: 8D 45 FC                                              LEA  EAX, [EBP-4]
00000109: 89 C3                                                 MOV  EBX, EAX
0000010B: 8B 03                                                 MOV  EAX, [EBX]
0000010D: 89 C3                                                 MOV  EBX, EAX
0000010F: 0F BE 03                                              MOVSX EAX,BYTE [EBX]
00000112: 5B                                                    POP  EBX
00000113: 88 03                                                 MOV  [EBX], AL
00000115: 8D 45 FC                                              LEA  EAX, [EBP-4]
00000118: 89 C3                                                 MOV  EBX, EAX
0000011A: 8B 03                                                 MOV  EAX, [EBX]
0000011C: 48                                                    DEC  EAX
0000011D: 89 03                                                 MOV  [EBX], EAX
0000011F: 40                                                    INC  EAX
00000120: 50                                                    PUSH EAX
00000121: 8D 45 F8                                              LEA  EAX, [EBP-8]
00000124: 89 C3                                                 MOV  EBX, EAX
00000126: 8B 03                                                 MOV  EAX, [EBX]
00000128: 5B                                                    POP  EBX
00000129: 88 03                                                 MOV  [EBX], AL
0000012B: EB 9F                                                 JMP  short _lib_3
                                                                _lib_4:
0000012D: 89 EC                                                 MOV  ESP, EBP
0000012F: 5D                                                    POP  EBP
00000130: C3                                                    RETN
                                                                
                                                                _strcpy:		; strcpy(s,t) char *s,*t;
00000131: 55                                                    PUSH EBP
00000132: 89 E5                                                 MOV  EBP, ESP
00000134: 83 C4 FC                                              ADD  ESP, -4		; char *d;
00000137: 8D 5D 0C                                              LEA  EBX, [EBP+12]
0000013A: 8B 03                                                 MOV  EAX, [EBX]		; char *s
0000013C: 8D 5D FC                                              LEA  EBX, [EBP-4]
0000013F: 89 03                                                 MOV  [EBX], EAX		; d=s;
                                                                _strcpy_1:		; while(*s++ =*t++);
00000141: 8D 5D 0C                                              LEA  EBX, [EBP+12] 	; *s
00000144: 8B 03                                                 MOV  EAX, [EBX]
00000146: FF 03                                                 INC  DWORD [EBX] 	; *s++
00000148: 50                                                    PUSH EAX
00000149: 8D 45 08                                              LEA  EAX, [EBP+8] 	; *t
0000014C: 8B 18                                                 MOV  EBX, [EAX]
0000014E: FF 00                                                 INC  DWORD [EAX] 	; *t++
00000150: 0F BE 03                                              MOVSX EAX, BYTE [EBX]
00000153: 5B                                                    POP  EBX
00000154: 88 03                                                 MOV  [EBX], AL		; *s++ =*t++
00000156: 09 C0                                                 OR   EAX, EAX
00000158: 75 E7                                                 JNZ  short _strcpy_1
0000015A: 8D 5D FC                                              LEA  EBX, [EBP-4] 	; pointer to d
0000015D: 8B 03                                                 MOV  EAX, [EBX] 	; return (d);
0000015F: 89 EC                                                 MOV  ESP, EBP
00000161: 5D                                                    POP  EBP
00000162: C3                                                    RETN
                                                                
                                                                _strlen:		; strlen(s)
00000163: 55                                                    PUSH EBP
00000164: 89 E5                                                 MOV  EBP, ESP
00000166: 83 C4 FC                                              ADD  ESP, -4		; char *ptr;
00000169: 8D 5D 08                                              LEA  EBX, [EBP+8]
0000016C: 8B 03                                                 MOV  EAX, [EBX]
0000016E: 8D 5D FC                                              LEA  EBX, [EBP-4]
00000171: 89 03                                                 MOV  [EBX], EAX		; ptr=s;
                                                                _strlen_1:
                                                                ;LEA EBX, [EBP-4]	; while(*ptr)	
                                                                ;MOV EAX, [EBX]
00000173: 89 C3                                                 MOV  EBX, EAX
00000175: 0F BE 03                                              MOVSX EAX, BYTE [EBX]
00000178: 09 C0                                                 OR   EAX, EAX
0000017A: 74 0A                                                 JZ  short _strlen_2
                                                                ;_lib_13:
0000017C: 8D 5D FC                                              LEA  EBX, [EBP-4]
0000017F: 8B 03                                                 MOV  EAX, [EBX]
00000181: 40                                                    INC  EAX
00000182: 89 03                                                 MOV  [EBX], EAX		; ++ptr;
00000184: EB ED                                                 JMP  short _strlen_1
                                                                _strlen_2:
00000186: 8D 5D FC                                              LEA  EBX, [EBP-4]
00000189: 8B 03                                                 MOV  EAX, [EBX]
0000018B: 50                                                    PUSH EAX
0000018C: 8D 45 08                                              LEA  EAX, [EBP+8]
0000018F: 8B 18                                                 MOV  EBX, [EAX]		; s
00000191: 58                                                    POP  EAX		; ptr
00000192: 29 D8                                                 SUB  EAX, EBX		; return (ptr-s);
00000194: 89 EC                                                 MOV  ESP, EBP
00000196: 5D                                                    POP  EBP
00000197: C3                                                    RETN
                                                                
                                                                _toupper:		; toupper(c)
00000198: 55                                                    PUSH EBP
00000199: 89 E5                                                 MOV  EBP, ESP
0000019B: 8D 45 08                                              LEA  EAX, [EBP+8]	; if(c<='z' && c>='a')
0000019E: 8B 18                                                 MOV  EBX, [EAX]		; int c;
000001A0: B8 7A 00 00 00                                        MOV  EAX, 122		; 'z'
000001A5: E8 9D FE FF FF                                        CALL __le
000001AA: 09 C0                                                 OR   EAX, EAX
                                                                ;;JZ short _lib_16
                                                                ;JZ short _lib_15
000001AC: 74 18                                                 JZ short _toupper_ok	; condition 1 = false
                                                                ;_lib_18:
                                                                ;LEA EAX, [EBP+8]
                                                                ;MOV EBX, [EAX]
000001AE: B8 61 00 00 00                                        MOV  EAX, 97		; 'a'
000001B3: E8 96 FE FF FF                                        CALL __ge
000001B8: 09 C0                                                 OR   EAX, EAX
                                                                ;;JZ short _lib_16
                                                                ;JZ short _lib_15
000001BA: 74 0A                                                 JZ short _toupper_ok	; condition 2 = false
                                                                ;_lib_19:
                                                                ;MOV EAX, 1
                                                                ;eax = 1
                                                                ;;JMP  short _lib_17
                                                                ;JMP short _lib_20
                                                                ;_lib_16:
                                                                ;XOR EAX, EAX
                                                                ;_lib_17:
                                                                ;OR  EAX, EAX
                                                                ;JZ  short _lib_15
                                                                ;_lib_20:
                                                                ;LEA EAX, [EBP+8]	; condition 1 & 2 = true
                                                                ;MOV EBX, [EAX]		; int c
000001BC: B8 20 00 00 00                                        MOV  EAX, 32
000001C1: 93                                                    XCHG EAX, EBX
000001C2: 29 D8                                                 SUB  EAX, EBX		; return (c-32);
000001C4: 5D                                                    POP  EBP
000001C5: C3                                                    RETN
                                                                ;_lib_15:
                                                                _toupper_ok:
                                                                ;LEA EBX, [EBP+8]
                                                                ;MOV EAX, [EBX]
                                                                ;ebx = int c
000001C6: 93                                                    XCHG EAX, EBX		; return (c);
000001C7: 5D                                                    POP  EBP
000001C8: C3                                                    RETN
                                                                
                                                                _atoi:
000001C9: 55                                                    PUSH EBP
000001CA: 89 E5                                                 MOV  EBP, ESP
000001CC: 83 C4 F8                                              ADD  ESP, -8
                                                                _lib_22:
000001CF: 8D 45 08                                              LEA  EAX, [EBP+8]
000001D2: 89 C3                                                 MOV  EBX, EAX
000001D4: 8B 03                                                 MOV  EAX, [EBX]
000001D6: 89 C3                                                 MOV  EBX, EAX
000001D8: 0F BE 03                                              MOVSX EAX,BYTE [EBX]
000001DB: 50                                                    PUSH EAX
000001DC: B1 01                                                 MOV  CL, 1
000001DE: E8 83 0D 00 00                                        CALL _isspace
000001E3: 83 C4 04                                              ADD  ESP, 4
000001E6: 09 C0                                                 OR   EAX, EAX
000001E8: 75 02                                                 JNE  short _lib_24
000001EA: EB 0C                                                 JMP  short _lib_23
                                                                _lib_24:
000001EC: 8D 45 08                                              LEA  EAX, [EBP+8]
000001EF: 89 C3                                                 MOV  EBX, EAX
000001F1: 8B 03                                                 MOV  EAX, [EBX]
000001F3: 40                                                    INC  EAX
000001F4: 89 03                                                 MOV  [EBX], EAX
000001F6: EB D7                                                 JMP  short _lib_22
                                                                _lib_23:
000001F8: 8D 45 FC                                              LEA  EAX, [EBP-4]
000001FB: 89 C3                                                 MOV  EBX, EAX
000001FD: B8 01 00 00 00                                        MOV  EAX, 1
00000202: 89 03                                                 MOV  [EBX], EAX
00000204: 8D 45 08                                              LEA  EAX, [EBP+8]
00000207: 89 C3                                                 MOV  EBX, EAX
00000209: 8B 03                                                 MOV  EAX, [EBX]
0000020B: 89 C3                                                 MOV  EBX, EAX
0000020D: 0F BE 03                                              MOVSX EAX,BYTE [EBX]
00000210: EB 18                                                 JMP  short _lib_27
                                                                _lib_28:
00000212: 8D 45 FC                                              LEA  EAX, [EBP-4]
00000215: 89 C3                                                 MOV  EBX, EAX
00000217: B8 FF FF FF FF                                        MOV  EAX, -1
0000021C: 89 03                                                 MOV  [EBX], EAX
                                                                _lib_29:
0000021E: 8D 45 08                                              LEA  EAX, [EBP+8]
00000221: 89 C3                                                 MOV  EBX, EAX
00000223: 8B 03                                                 MOV  EAX, [EBX]
00000225: 40                                                    INC  EAX
00000226: 89 03                                                 MOV  [EBX], EAX
00000228: EB 19                                                 JMP  short _lib_26
                                                                _lib_27:
0000022A: E8 33 FE FF FF                                        CALL __switch
0000022F: 12 02 00 00                                            DD _lib_28
00000233: 2D 00 00 00                                            DD 45
00000237: 1E 02 00 00                                            DD _lib_29
0000023B: 2B 00 00 00                                            DD 43
0000023F: 00 00 00 00                                            DD 0
                                                                _lib_26:
00000243: 8D 45 F8                                              LEA  EAX, [EBP-8]
00000246: 89 C3                                                 MOV  EBX, EAX
00000248: 31 C0                                                 XOR  EAX, EAX
0000024A: 89 03                                                 MOV  [EBX], EAX
                                                                _lib_30:
0000024C: 8D 45 08                                              LEA  EAX, [EBP+8]
0000024F: 89 C3                                                 MOV  EBX, EAX
00000251: 8B 03                                                 MOV  EAX, [EBX]
00000253: 89 C3                                                 MOV  EBX, EAX
00000255: 0F BE 03                                              MOVSX EAX,BYTE [EBX]
00000258: 50                                                    PUSH EAX
00000259: B1 01                                                 MOV  CL, 1
0000025B: E8 70 0C 00 00                                        CALL _isdigit
00000260: 83 C4 04                                              ADD  ESP, 4
00000263: 09 C0                                                 OR   EAX, EAX
00000265: 75 02                                                 JNE  short _lib_32
00000267: EB 35                                                 JMP  short _lib_31
                                                                _lib_32:
00000269: 8D 45 F8                                              LEA  EAX, [EBP-8]
0000026C: 50                                                    PUSH EAX
0000026D: 8D 45 F8                                              LEA  EAX, [EBP-8]
00000270: 89 C3                                                 MOV  EBX, EAX
00000272: 8B 03                                                 MOV  EAX, [EBX]
00000274: BB 0A 00 00 00                                        MOV  EBX, 10
00000279: F7 EB                                                 IMUL EBX
0000027B: 50                                                    PUSH EAX
0000027C: 8D 45 08                                              LEA  EAX, [EBP+8]
0000027F: 89 C3                                                 MOV  EBX, EAX
00000281: 8B 03                                                 MOV  EAX, [EBX]
00000283: 40                                                    INC  EAX
00000284: 89 03                                                 MOV  [EBX], EAX
00000286: 48                                                    DEC  EAX
00000287: 89 C3                                                 MOV  EBX, EAX
00000289: 0F BE 03                                              MOVSX EAX,BYTE [EBX]
0000028C: 5B                                                    POP  EBX
0000028D: 01 D8                                                 ADD  EAX, EBX
0000028F: 89 C3                                                 MOV  EBX, EAX
00000291: B8 30 00 00 00                                        MOV  EAX, 48
00000296: 93                                                    XCHG EAX, EBX
00000297: 29 D8                                                 SUB  EAX, EBX
00000299: 5B                                                    POP  EBX
0000029A: 89 03                                                 MOV  [EBX], EAX
0000029C: EB AE                                                 JMP  short _lib_30
                                                                _lib_31:
0000029E: 8D 45 FC                                              LEA  EAX, [EBP-4]
000002A1: 89 C3                                                 MOV  EBX, EAX
000002A3: 8B 03                                                 MOV  EAX, [EBX]
000002A5: 50                                                    PUSH EAX
000002A6: 8D 45 F8                                              LEA  EAX, [EBP-8]
000002A9: 89 C3                                                 MOV  EBX, EAX
000002AB: 8B 03                                                 MOV  EAX, [EBX]
000002AD: 5B                                                    POP  EBX
000002AE: F7 EB                                                 IMUL EBX
000002B0: 89 EC                                                 MOV  ESP, EBP
000002B2: 5D                                                    POP  EBP
000002B3: C3                                                    RETN
                                                                
                                                                _atoib:
000002B4: 55                                                    PUSH EBP
000002B5: 89 E5                                                 MOV  EBP, ESP
000002B7: 83 C4 F8                                              ADD  ESP, -8
000002BA: 8D 45 FC                                              LEA  EAX, [EBP-4]
000002BD: 89 C3                                                 MOV  EBX, EAX
000002BF: 31 C0                                                 XOR  EAX, EAX
000002C1: 89 03                                                 MOV  [EBX], EAX
                                                                _lib_34:
000002C3: 8D 45 0C                                              LEA  EAX, [EBP+12]
000002C6: 89 C3                                                 MOV  EBX, EAX
000002C8: 8B 03                                                 MOV  EAX, [EBX]
000002CA: 89 C3                                                 MOV  EBX, EAX
000002CC: 0F BE 03                                              MOVSX EAX, BYTE [EBX]
000002CF: 50                                                    PUSH EAX
000002D0: B1 01                                                 MOV  CL, 1
000002D2: E8 8F 0C 00 00                                        CALL _isspace
000002D7: 83 C4 04                                              ADD  ESP, 4
000002DA: 09 C0                                                 OR   EAX, EAX
000002DC: 75 02                                                 JNE  short _lib_36
000002DE: EB 0C                                                 JMP  short _lib_35
                                                                _lib_36:
000002E0: 8D 45 0C                                              LEA  EAX, [EBP+12]
000002E3: 89 C3                                                 MOV  EBX, EAX
000002E5: 8B 03                                                 MOV  EAX, [EBX]
000002E7: 40                                                    INC  EAX
000002E8: 89 03                                                 MOV  [EBX], EAX
000002EA: EB D7                                                 JMP  short _lib_34
                                                                _lib_35:
                                                                _lib_37:
000002EC: 8D 45 F8                                              LEA  EAX, [EBP-8]
000002EF: 50                                                    PUSH EAX
000002F0: 8D 45 0C                                              LEA  EAX, [EBP+12]
000002F3: 89 C3                                                 MOV  EBX, EAX
000002F5: 8B 03                                                 MOV  EAX, [EBX]
000002F7: 40                                                    INC  EAX
000002F8: 89 03                                                 MOV  [EBX], EAX
000002FA: 48                                                    DEC  EAX
000002FB: 89 C3                                                 MOV  EBX, EAX
000002FD: 0F BE 03                                              MOVSX EAX, BYTE [EBX]
00000300: BB 7F 00 00 00                                        MOV  EBX, 127
00000305: 21 D8                                                 AND  EAX, EBX
00000307: 5B                                                    POP  EBX
00000308: 89 03                                                 MOV  [EBX], EAX
0000030A: 89 C3                                                 MOV  EBX, EAX
0000030C: B8 30 00 00 00                                        MOV  EAX, 48
00000311: E8 38 FD FF FF                                        CALL __ge
00000316: 09 C0                                                 OR   EAX, EAX
00000318: 75 05                                                 JNE  short _lib_39
0000031A: E9 BB 00 00 00                                        JMP  _lib_38
                                                                _lib_39:
0000031F: 8D 45 F8                                              LEA  EAX, [EBP-8]
00000322: 89 C3                                                 MOV  EBX, EAX
00000324: 8B 03                                                 MOV  EAX, [EBX]
00000326: 89 C3                                                 MOV  EBX, EAX
00000328: B8 61 00 00 00                                        MOV  EAX, 97
0000032D: E8 1C FD FF FF                                        CALL __ge
00000332: 09 C0                                                 OR   EAX, EAX
00000334: 75 02                                                 JNE  short _lib_41
00000336: EB 17                                                 JMP  short _lib_40
                                                                _lib_41:
00000338: 8D 45 F8                                              LEA  EAX, [EBP-8]
0000033B: 50                                                    PUSH EAX
0000033C: 89 C3                                                 MOV  EBX, EAX
0000033E: 8B 03                                                 MOV  EAX, [EBX]
00000340: 89 C3                                                 MOV  EBX, EAX
00000342: B8 57 00 00 00                                        MOV  EAX, 87
00000347: 93                                                    XCHG EAX, EBX
00000348: 29 D8                                                 SUB  EAX, EBX
0000034A: 5B                                                    POP  EBX
0000034B: 89 03                                                 MOV  [EBX], EAX
0000034D: EB 45                                                 JMP  short _lib_42
                                                                _lib_40:
0000034F: 8D 45 F8                                              LEA  EAX, [EBP-8]
00000352: 89 C3                                                 MOV  EBX, EAX
00000354: 8B 03                                                 MOV  EAX, [EBX]
00000356: 89 C3                                                 MOV  EBX, EAX
00000358: B8 41 00 00 00                                        MOV  EAX, 65
0000035D: E8 EC FC FF FF                                        CALL __ge
00000362: 09 C0                                                 OR   EAX, EAX
00000364: 75 02                                                 JNE  short _lib_44
00000366: EB 17                                                 JMP  short _lib_43
                                                                _lib_44:
00000368: 8D 45 F8                                              LEA  EAX, [EBP-8]
0000036B: 50                                                    PUSH EAX
0000036C: 89 C3                                                 MOV  EBX, EAX
0000036E: 8B 03                                                 MOV  EAX, [EBX]
00000370: 89 C3                                                 MOV  EBX, EAX
00000372: B8 37 00 00 00                                        MOV  EAX, 55
00000377: 93                                                    XCHG EAX, EBX
00000378: 29 D8                                                 SUB  EAX, EBX
0000037A: 5B                                                    POP  EBX
0000037B: 89 03                                                 MOV  [EBX], EAX
0000037D: EB 15                                                 JMP  short _lib_45
                                                                _lib_43:
0000037F: 8D 45 F8                                              LEA  EAX, [EBP-8]
00000382: 50                                                    PUSH EAX
00000383: 89 C3                                                 MOV  EBX, EAX
00000385: 8B 03                                                 MOV  EAX, [EBX]
00000387: 89 C3                                                 MOV  EBX, EAX
00000389: B8 30 00 00 00                                        MOV  EAX, 48
0000038E: 93                                                    XCHG EAX, EBX
0000038F: 29 D8                                                 SUB  EAX, EBX
00000391: 5B                                                    POP  EBX
00000392: 89 03                                                 MOV  [EBX], EAX
                                                                _lib_45:
                                                                _lib_42:
00000394: 8D 45 F8                                              LEA  EAX, [EBP-8]
00000397: 89 C3                                                 MOV  EBX, EAX
00000399: 8B 03                                                 MOV  EAX, [EBX]
0000039B: 50                                                    PUSH EAX
0000039C: 8D 45 08                                              LEA  EAX, [EBP+8]
0000039F: 89 C3                                                 MOV  EBX, EAX
000003A1: 8B 03                                                 MOV  EAX, [EBX]
000003A3: 5B                                                    POP  EBX
000003A4: E8 A5 FC FF FF                                        CALL __ge
000003A9: 09 C0                                                 OR   EAX, EAX
000003AB: 75 02                                                 JNE  short _lib_47
000003AD: EB 02                                                 JMP  short _lib_46
                                                                _lib_47:
000003AF: EB 29                                                 JMP  short _lib_38
                                                                _lib_46:
000003B1: 8D 45 FC                                              LEA  EAX, [EBP-4]
000003B4: 50                                                    PUSH EAX
000003B5: 8D 45 08                                              LEA  EAX, [EBP+8]
000003B8: 89 C3                                                 MOV  EBX, EAX
000003BA: 8B 03                                                 MOV  EAX, [EBX]
000003BC: 50                                                    PUSH EAX
000003BD: 8D 45 FC                                              LEA  EAX, [EBP-4]
000003C0: 89 C3                                                 MOV  EBX, EAX
000003C2: 8B 03                                                 MOV  EAX, [EBX]
000003C4: 5B                                                    POP  EBX
000003C5: F7 EB                                                 IMUL EBX
000003C7: 50                                                    PUSH EAX
000003C8: 8D 45 F8                                              LEA  EAX, [EBP-8]
000003CB: 89 C3                                                 MOV  EBX, EAX
000003CD: 8B 03                                                 MOV  EAX, [EBX]
000003CF: 5B                                                    POP  EBX
000003D0: 01 D8                                                 ADD  EAX, EBX
000003D2: 5B                                                    POP  EBX
000003D3: 89 03                                                 MOV  [EBX], EAX
000003D5: E9 12 FF FF FF                                        JMP  _lib_37
                                                                _lib_38:
000003DA: 8D 45 FC                                              LEA  EAX, [EBP-4]
000003DD: 89 C3                                                 MOV  EBX, EAX
000003DF: 8B 03                                                 MOV  EAX, [EBX]
000003E1: 89 EC                                                 MOV  ESP, EBP
000003E3: 5D                                                    POP  EBP
000003E4: C3                                                    RETN
                                                                
                                                                _fgets:
000003E5: 55                                                    PUSH EBP
000003E6: 89 E5                                                 MOV  EBP, ESP
000003E8: 8D 45 10                                              LEA  EAX, [EBP+16]
000003EB: 89 C3                                                 MOV  EBX, EAX
000003ED: 8B 03                                                 MOV  EAX, [EBX]
000003EF: 50                                                    PUSH EAX
000003F0: 8D 45 0C                                              LEA  EAX, [EBP+12]
000003F3: 89 C3                                                 MOV  EBX, EAX
000003F5: 8B 03                                                 MOV  EAX, [EBX]
000003F7: 50                                                    PUSH EAX
000003F8: 8D 45 08                                              LEA  EAX, [EBP+8]
000003FB: 89 C3                                                 MOV  EBX, EAX
000003FD: 8B 03                                                 MOV  EAX, [EBX]
000003FF: 50                                                    PUSH EAX
00000400: B8 01 00 00 00                                        MOV  EAX, 1
00000405: 50                                                    PUSH EAX
00000406: B1 04                                                 MOV  CL, 4
00000408: E8 1B 01 00 00                                        CALL __gets
0000040D: 83 C4 10                                              ADD  ESP, 16
00000410: 5D                                                    POP  EBP
00000411: C3                                                    RETN
                                                                
                                                                _gets:
00000412: 55                                                    PUSH EBP
00000413: 89 E5                                                 MOV  EBP, ESP
00000415: 83 C4 F4                                              ADD  ESP, -12		; size,backup,*next
00000418: C7 45 FC FF 7F 00 00                                  MOV  DWORD [EBP-4], 32767 ; size
0000041F: 8D 45 F4                                              LEA  EAX, [EBP-12]
00000422: 50                                                    PUSH EAX		; *next
00000423: 8D 5D 08                                              LEA  EBX, [EBP+8]	; *str
00000426: 8B 03                                                 MOV  EAX, [EBX]		; str
00000428: 5B                                                    POP  EBX
00000429: 89 03                                                 MOV [EBX], EAX		; next=str;
                                                                _gets_1:
0000042B: 8D 5D FC                                              LEA  EBX, [EBP-4]	; *size
0000042E: 8B 03                                                 MOV  EAX, [EBX]		; ebx = *size, eax = size
00000430: 48                                                    DEC  EAX
00000431: 89 03                                                 MOV  [EBX], EAX
00000433: 09 C0                                                 OR   EAX,EAX
00000435: 75 05                                                 JNZ  short _gets_2	; while(--size>0)
00000437: E9 D6 00 00 00                                        JMP  _gets_13
                                                                _gets_2:
0000043C: 8D 5D F4                                              LEA  EBX, [EBP-12]	; (*next=OS_getc())
0000043F: 8B 03                                                 MOV  EAX, [EBX]
00000441: 50                                                    PUSH EAX		; *next
00000442: B1 00                                                 MOV  CL,0		; no arguments
00000444: E8 70 13 00 00                                        CALL _OS_getc
00000449: 5B                                                    POP  EBX		; *next = *str
0000044A: 88 03                                                 MOV  [EBX], AL		; *str=OS_getc()
0000044C: E9 96 00 00 00                                        JMP  _gets_12		; {switch (*next=OS_getc())
                                                                _gets_3:
00000451: 8D 45 F4                                              LEA  EAX, [EBP-12]	; **next
00000454: 8B 18                                                 MOV  EBX, [EAX]		; *next (address)
00000456: 31 C0                                                 XOR  EAX, EAX		; NULL
00000458: 88 03                                                 MOV  [EBX], AL		; *next = NULL (value)
0000045A: 53                                                    PUSH  EBX
0000045B: 8D 45 08                                              LEA  EAX, [EBP+8]	; *str
0000045E: 8B 18                                                 MOV  EBX, [EAX]		; eax = *str, ebx = str
00000460: 58                                                    POP  EAX		; next
00000461: E8 C5 FB FF FF                                        CALL __eq		; if(next==str) return (NULL);
00000466: 09 C0                                                 OR   EAX, EAX
00000468: 74 02                                                 JZ  short _gets_4	; false (eax = 0)
                                                                			; true (eax = 1)
                                                                			; return (NULL);
0000046A: 31 DB                                                 XOR  EBX, EBX ; NULL
                                                                _gets_4:		; return (str);
0000046C: 89 D8                                                 MOV  EAX, EBX
0000046E: 89 EC                                                 MOV  ESP, EBP
00000470: 5D                                                    POP  EBP
00000471: C3                                                    RETN
                                                                
                                                                _gets_5:		; case '\n' 	
00000472: 8D 45 F4                                              LEA  EAX, [EBP-12]	; **next
00000475: 8B 18                                                 MOV  EBX, [EAX]		; *next (address)
00000477: 31 C0                                                 XOR  EAX, EAX		; NULL
00000479: 89 03                                                 MOV  [EBX],EAX		; *next=NULL; (value)
                                                                
0000047B: 8D 5D 08                                              LEA  EBX, [EBP+8]	; *str (ebx = str address)
0000047E: 8B 03                                                 MOV  EAX, [EBX]		; return (str);
00000480: 89 EC                                                 MOV  ESP, EBP
00000482: 5D                                                    POP  EBP
00000483: C3                                                    RETN
                                                                
                                                                _gets_6:		; case '\b'
00000484: 8D 5D F4                                              LEA  EBX, [EBP-12]	; *next
00000487: 8B 03                                                 MOV  EAX, [EBX]		; ebx = *next, eax = next
00000489: 50                                                    PUSH EAX
0000048A: 8D 5D 08                                              LEA  EBX, [EBP+8]	; *str
0000048D: 8B 03                                                 MOV  EAX, [EBX]		; ebx = *str, eax = str
0000048F: 5B                                                    POP  EBX		; next (*next, string address/pos)
00000490: E8 81 FB FF FF                                        CALL __ugt		; if(next>str) backup=1;
                                                                ;OR  EAX,EAX
                                                                ;JNZ short _lib_63	; true (eax=1)
                                                                ;JMP short _lib_62	; false (eax=0)
                                                                ;_lib_63:		; backup=1;
                                                                ;LEA EBX, [EBP-8]	; *backup
                                                                ;MOV EAX, 1		; ebx = *backup (pointer to backup val)	
                                                                ;MOV [EBX], EAX		; backup=1
                                                                ;;JMP short _lib_64
                                                                ;JMP short _gets_8
                                                                ;_lib_62:		; else backup=0;
00000495: 8D 5D F8                                              LEA EBX, [EBP-8]	; ebx = *backup
                                                                ;XOR EAX, EAX ; 0
00000498: 89 03                                                 MOV  [EBX], EAX		; backup = 1 or backup = 0
                                                                ;_lib_64:
0000049A: EB 14                                                 JMP  short _gets_8	; goto backout;
                                                                _gets_7:		; case '\r' ; WIPE
0000049C: 8D 45 F8                                              LEA  EAX, [EBP-8]	; *backup ; backup=next-str;
0000049F: 50                                                    PUSH EAX
000004A0: 8D 5D F4                                              LEA  EBX, [EBP-12]	; *next
                                                                ;MOV EAX, [EBX]		; ebx = *next, eax = next
                                                                ;PUSH EAX
000004A3: FF 33                                                 PUSH DWORD [EBX]
000004A5: 8D 45 08                                              LEA  EAX, [EBP+8]	; *str
000004A8: 8B 18                                                 MOV  EBX, [EAX]		; eax = *str, ebx = str 
000004AA: 58                                                    POP  EAX		; next
000004AB: 29 D8                                                 SUB  EAX, EBX		; next-str
000004AD: 5B                                                    POP  EBX		; *backup
000004AE: 89 03                                                 MOV  [EBX], EAX		; ebx = *backup, eax = backup (value)
                                                                			; backup=next-str;
                                                                _gets_8:		; backout:
                                                                ;JMP short _lib_67	; if(0/*iscons(fd)*/)
000004B0: 8D 5D FC                                              LEA  EBX, [EBP-4]	; *size
                                                                ;MOV EAX, [EBX]
                                                                ;INC EAX
                                                                ;MOV [EBX], EAX
000004B3: FF 03                                                 INC  DWORD [EBX]	; ++size;	
                                                                _gets_9:		; while(backup--)
000004B5: 8D 5D F8                                              LEA  EBX, [EBP-8]	; *backup
000004B8: 8B 03                                                 MOV  EAX, [EBX]
000004BA: 48                                                    DEC  EAX
000004BB: 89 03                                                 MOV  [EBX], EAX
000004BD: 40                                                    INC  EAX
                                                                ;OR  EAX, EAX
000004BE: 75 05                                                 JNZ  short _gets_10
                                                                ;JMP short _lib_69
000004C0: E9 66 FF FF FF                                        JMP  _gets_1
                                                                _gets_10:		; puts("\b \b");
000004C5: B8 24 05 00 00                                        MOV  EAX, _gets_14	; "\b \b"
000004CA: 50                                                    PUSH EAX
000004CB: E8 A8 FB FF FF                                        CALL _puts
000004D0: 58                                                    POP  EAX		; add esp, 4
000004D1: 8D 5D F4                                              LEA  EBX, [EBP-12]	; *next
                                                                ;MOV EAX, [EBX]		; ebx = *next (address)
                                                                ;DEC EAX
                                                                ;MOV [EBX], EAX
000004D4: FF 0B                                                 DEC  DWORD [EBX]	; --next	
000004D6: 8D 5D FC                                              LEA  EBX, [EBP-4]	; *size
                                                                ;MOV EAX, [EBX]		; ebx = *size
                                                                ;INC EAX
                                                                ;MOV [EBX], EAX
000004D9: FF 03                                                 INC  DWORD [EBX]	; ++size
000004DB: EB D8                                                 JMP  short _gets_9
                                                                ;_lib_69:
                                                                ;JMP _gets_1
                                                                ;_lib_67:
                                                                _gets_11:		; default:
000004DD: 8D 5D F4                                              LEA  EBX, [EBP-12]	; **next
                                                                ;MOV EAX, [EBX]		; ebx = *next
                                                                ;INC EAX		; ++next
                                                                ;MOV [EBX], EAX
000004E0: FF 03                                                 INC  DWORD [EBX]
                                                                ;JMP short _lib_55
000004E2: E9 44 FF FF FF                                        jmp  _gets_1	
                                                                _gets_12:		; {switch (*next=OS_getc())
000004E7: E8 76 FB FF FF                                        CALL __switch
000004EC: 51 04 00 00                                            DD  _gets_3		; case EOF
000004F0: FF FF FF FF                                            DD  -1
000004F4: 72 04 00 00                                            DD  _gets_5		; case '\n' 
000004F8: 0A 00 00 00                                            DD  10
000004FC: 84 04 00 00                                            DD  _gets_6		; case '\b' ; case RUB
00000500: 08 00 00 00                                            DD  8
00000504: 9C 04 00 00                                            DD  _gets_7		; case '\r' ; case WIPE
00000508: 18 00 00 00                                            DD  24
0000050C: 00 00 00 00                                            DD  0			; case default
00000510: EB CB                                                 JMP short _gets_11	; default: ++next;
                                                                ;_lib_55:
                                                                ;JMP _gets_1
                                                                _gets_13:
00000512: 8D 45 F4                                              LEA  EAX, [EBP-12]	; **next
00000515: 8B 18                                                 MOV  EBX, [EAX]		; ebx = *next, eax = **next
00000517: 31 C0                                                 XOR  EAX, EAX		; NULL
00000519: 88 03                                                 MOV  [EBX], AL		; *next = NULL;
0000051B: 8D 5D 08                                              LEA  EBX, [EBP+8]	; **str
0000051E: 8B 03                                                 MOV  EAX, [EBX]		; ebx = *str, eax = str
00000520: 89 EC                                                 MOV  ESP, EBP		; return (str);
00000522: 5D                                                    POP  EBP
00000523: C3                                                    RETN
                                                                
00000524: 08 20 08 00                                           _gets_14: DB 8,32,8,0	; "\b \b"
                                                                
                                                                __gets:
00000528: 55                                                    PUSH EBP
00000529: 89 E5                                                 MOV EBP,ESP
0000052B: 83 C4 F8                                              ADD ESP,-8
0000052E: 8D 45 F8                                              LEA EAX,[EBP-8]
00000531: 50                                                    PUSH EAX
00000532: 8D 45 14                                              LEA EAX,[EBP+20]
00000535: 89 C3                                                 MOV EBX,EAX
00000537: 8B 03                                                 MOV EAX, [EBX]
00000539: 5B                                                    POP EBX
0000053A: 89 03                                                 MOV [EBX],EAX
                                                                _lib_51:
0000053C: 8D 45 10                                              LEA EAX,[EBP+16]
0000053F: 89 C3                                                 MOV EBX,EAX
00000541: 8B 03                                                 MOV EAX, [EBX]
00000543: 48                                                    DEC EAX
00000544: 89 03                                                 MOV [EBX],EAX
00000546: 09 C0                                                 OR EAX,EAX
00000548: 75 05                                                 JNE _lib_53
0000054A: E9 56 01 00 00                                        JMP _lib_52
                                                                _lib_53:
0000054F: 8D 45 F8                                              LEA EAX,[EBP-8]
00000552: 89 C3                                                 MOV EBX,EAX
00000554: 8B 03                                                 MOV EAX, [EBX]
00000556: 50                                                    PUSH EAX
00000557: 8D 45 0C                                              LEA EAX,[EBP+12]
0000055A: 89 C3                                                 MOV EBX,EAX
0000055C: 8B 03                                                 MOV EAX, [EBX]
0000055E: 50                                                    PUSH EAX
0000055F: B1 01                                                 MOV CL,1
00000561: E8 22 12 00 00                                        CALL _OS_fgetc
00000566: 83 C4 04                                              ADD ESP,4
00000569: 5B                                                    POP EBX
0000056A: 88 03                                                 MOV [EBX],AL
0000056C: E9 04 01 00 00                                        JMP _lib_56
                                                                _lib_57:
00000571: 8D 45 F8                                              LEA EAX,[EBP-8]
00000574: 89 C3                                                 MOV EBX,EAX
00000576: 8B 03                                                 MOV EAX, [EBX]
00000578: 89 C3                                                 MOV EBX,EAX
0000057A: 31 C0                                                 XOR EAX,EAX
0000057C: 88 03                                                 MOV [EBX],AL
0000057E: 8D 45 F8                                              LEA EAX,[EBP-8]
00000581: 89 C3                                                 MOV EBX,EAX
00000583: 8B 03                                                 MOV EAX, [EBX]
00000585: 50                                                    PUSH EAX
00000586: 8D 45 14                                              LEA EAX,[EBP+20]
00000589: 89 C3                                                 MOV EBX,EAX
0000058B: 8B 03                                                 MOV EAX, [EBX]
0000058D: 5B                                                    POP EBX
0000058E: E8 98 FA FF FF                                        CALL __eq
00000593: 09 C0                                                 OR EAX,EAX
00000595: 75 02                                                 JNE _lib_59
00000597: EB 06                                                 JMP _lib_58
                                                                _lib_59:
00000599: 31 C0                                                 XOR EAX,EAX
0000059B: 89 EC                                                 MOV ESP,EBP
0000059D: 5D                                                    POP EBP
0000059E: C3                                                    RET
                                                                _lib_58:
0000059F: 8D 45 14                                              LEA EAX,[EBP+20]
000005A2: 89 C3                                                 MOV EBX,EAX
000005A4: 8B 03                                                 MOV EAX, [EBX]
000005A6: 89 EC                                                 MOV ESP,EBP
000005A8: 5D                                                    POP EBP
000005A9: C3                                                    RET
                                                                _lib_60:
000005AA: 8D 45 F8                                              LEA EAX,[EBP-8]
000005AD: 89 C3                                                 MOV EBX,EAX
000005AF: 8B 03                                                 MOV EAX, [EBX]
000005B1: 50                                                    PUSH EAX
000005B2: 8D 45 08                                              LEA EAX,[EBP+8]
000005B5: 89 C3                                                 MOV EBX,EAX
000005B7: 8B 03                                                 MOV EAX, [EBX]
000005B9: 5B                                                    POP EBX
000005BA: 01 D8                                                 ADD EAX,EBX
000005BC: 89 C3                                                 MOV EBX,EAX
000005BE: 31 C0                                                 XOR EAX,EAX
000005C0: 89 03                                                 MOV [EBX],EAX
000005C2: 8D 45 14                                              LEA EAX,[EBP+20]
000005C5: 89 C3                                                 MOV EBX,EAX
000005C7: 8B 03                                                 MOV EAX, [EBX]
000005C9: 89 EC                                                 MOV ESP,EBP
000005CB: 5D                                                    POP EBP
000005CC: C3                                                    RET
                                                                _lib_61:
000005CD: 8D 45 F8                                              LEA EAX,[EBP-8]
000005D0: 89 C3                                                 MOV EBX,EAX
000005D2: 8B 03                                                 MOV EAX, [EBX]
000005D4: 50                                                    PUSH EAX
000005D5: 8D 45 14                                              LEA EAX,[EBP+20]
000005D8: 89 C3                                                 MOV EBX,EAX
000005DA: 8B 03                                                 MOV EAX, [EBX]
000005DC: 5B                                                    POP EBX
000005DD: E8 34 FA FF FF                                        CALL __ugt
000005E2: 09 C0                                                 OR EAX,EAX
000005E4: 75 02                                                 JNE _lib_63
000005E6: EB 0E                                                 JMP _lib_62
                                                                _lib_63:
000005E8: 8D 45 FC                                              LEA EAX,[EBP-4]
000005EB: 89 C3                                                 MOV EBX,EAX
000005ED: B8 01 00 00 00                                        MOV EAX,1
000005F2: 89 03                                                 MOV [EBX],EAX
000005F4: EB 09                                                 JMP _lib_64
                                                                _lib_62:
000005F6: 8D 45 FC                                              LEA EAX,[EBP-4]
000005F9: 89 C3                                                 MOV EBX,EAX
000005FB: 31 C0                                                 XOR EAX,EAX
000005FD: 89 03                                                 MOV [EBX],EAX
                                                                _lib_64:
000005FF: EB 1A                                                 JMP _lib_65
                                                                _lib_66:
00000601: 8D 45 FC                                              LEA EAX,[EBP-4]
00000604: 50                                                    PUSH EAX
00000605: 8D 45 F8                                              LEA EAX,[EBP-8]
00000608: 89 C3                                                 MOV EBX,EAX
0000060A: 8B 03                                                 MOV EAX, [EBX]
0000060C: 50                                                    PUSH EAX
0000060D: 8D 45 14                                              LEA EAX,[EBP+20]
00000610: 89 C3                                                 MOV EBX,EAX
00000612: 8B 03                                                 MOV EAX, [EBX]
00000614: 5B                                                    POP EBX
00000615: 93                                                    XCHG EAX,EBX
00000616: 29 D8                                                 SUB EAX,EBX
00000618: 5B                                                    POP EBX
00000619: 89 03                                                 MOV [EBX],EAX
                                                                _lib_65:
0000061B: EB 4C                                                 JMP _lib_67
0000061D: 8D 45 10                                              LEA EAX,[EBP+16]
00000620: 89 C3                                                 MOV EBX,EAX
00000622: 8B 03                                                 MOV EAX, [EBX]
00000624: 40                                                    INC EAX
00000625: 89 03                                                 MOV [EBX],EAX
                                                                _lib_68:
00000627: 8D 45 FC                                              LEA EAX,[EBP-4]
0000062A: 89 C3                                                 MOV EBX,EAX
0000062C: 8B 03                                                 MOV EAX, [EBX]
0000062E: 48                                                    DEC EAX
0000062F: 89 03                                                 MOV [EBX],EAX
00000631: 40                                                    INC EAX
00000632: 09 C0                                                 OR EAX,EAX
00000634: 75 02                                                 JNE _lib_70
00000636: EB 2C                                                 JMP _lib_69
                                                                _lib_70:
00000638: B8 BD 06 00 00                                        MOV EAX,_lib_50+0
0000063D: 50                                                    PUSH EAX
                                                                ;MOV EAX,__iob
                                                                ;MOV EBX,64
                                                                ;ADD EAX,EBX
0000063E: B8 FF FF FF FF                                        MOV  EAX,-1 ; TRDOS 386 STDOUT/STDERR
00000643: 50                                                    PUSH EAX
00000644: B1 02                                                 MOV CL,2
00000646: E8 02 06 00 00                                        CALL _fputs
0000064B: 83 C4 08                                              ADD ESP,8
0000064E: 8D 45 F8                                              LEA EAX,[EBP-8]
00000651: 89 C3                                                 MOV EBX,EAX
00000653: 8B 03                                                 MOV EAX, [EBX]
00000655: 48                                                    DEC EAX
00000656: 89 03                                                 MOV [EBX],EAX
00000658: 8D 45 10                                              LEA EAX,[EBP+16]
0000065B: 89 C3                                                 MOV EBX,EAX
0000065D: 8B 03                                                 MOV EAX, [EBX]
0000065F: 40                                                    INC EAX
00000660: 89 03                                                 MOV [EBX],EAX
00000662: EB C3                                                 JMP _lib_68
                                                                _lib_69:
00000664: E9 D3 FE FF FF                                        JMP _lib_51
                                                                _lib_67:
                                                                _lib_71:
00000669: 8D 45 F8                                              LEA EAX,[EBP-8]
0000066C: 89 C3                                                 MOV EBX,EAX
0000066E: 8B 03                                                 MOV EAX, [EBX]
00000670: 40                                                    INC EAX
00000671: 89 03                                                 MOV [EBX],EAX
00000673: EB 2B                                                 JMP _lib_55
                                                                _lib_56:
00000675: E8 E8 F9 FF FF                                        CALL __switch
0000067A: 71 05 00 00                                            DD _lib_57
0000067E: FF FF FF FF                                            DD -1
00000682: AA 05 00 00                                            DD _lib_60
00000686: 0A 00 00 00                                            DD 10
0000068A: CD 05 00 00                                            DD _lib_61
0000068E: 08 00 00 00                                            DD 8
00000692: 01 06 00 00                                            DD _lib_66
00000696: 18 00 00 00                                            DD 24
0000069A: 00 00 00 00                                            DD 0
0000069E: EB C9                                                 JMP _lib_71
                                                                _lib_55:
000006A0: E9 97 FE FF FF                                        JMP _lib_51
                                                                _lib_52:
000006A5: 8D 45 F8                                              LEA EAX,[EBP-8]
000006A8: 89 C3                                                 MOV EBX,EAX
000006AA: 8B 03                                                 MOV EAX, [EBX]
000006AC: 89 C3                                                 MOV EBX,EAX
000006AE: 31 C0                                                 XOR EAX,EAX
000006B0: 88 03                                                 MOV [EBX],AL
000006B2: 8D 45 14                                              LEA EAX,[EBP+20]
000006B5: 89 C3                                                 MOV EBX,EAX
000006B7: 8B 03                                                 MOV EAX, [EBX]
000006B9: 89 EC                                                 MOV ESP,EBP
000006BB: 5D                                                    POP EBP
000006BC: C3                                                    RET
000006BD: 08 20 08 00                                           _lib_50 DB 8,32,8,0
                                                                
                                                                
                                                                _fprintf:
000006C1: 55                                                    PUSH EBP
000006C2: 89 E5                                                 MOV  EBP, ESP
000006C4: 83 C4 FC                                              ADD  ESP, -4
000006C7: 8D 45 FC                                              LEA  EAX, [EBP-4]
000006CA: 50                                                    PUSH EAX
000006CB: E8 39 F9 FF FF                                        CALL _CCARGC
000006D0: 50                                                    PUSH EAX
000006D1: 8D 45 08                                              LEA  EAX, [EBP+8]
000006D4: 5B                                                    POP  EBX
000006D5: D1 E3                                                 SHL  EBX, 1
000006D7: D1 E3                                                 SHL  EBX, 1
000006D9: 01 D8                                                 ADD  EAX, EBX
000006DB: 5B                                                    POP  EBX
000006DC: 89 03                                                 MOV  [EBX], EAX
000006DE: 8D 45 FC                                              LEA  EAX, [EBP-4]
000006E1: 89 C3                                                 MOV  EBX, EAX
000006E3: 8B 03                                                 MOV  EAX, [EBX]
000006E5: 48                                                    DEC  EAX
000006E6: 48                                                    DEC  EAX
000006E7: 48                                                    DEC  EAX
000006E8: 48                                                    DEC  EAX
000006E9: 89 03                                                 MOV  [EBX], EAX
000006EB: 89 C3                                                 MOV  EBX, EAX
000006ED: 8B 03                                                 MOV  EAX, [EBX]
000006EF: 50                                                    PUSH EAX
000006F0: 8D 45 FC                                              LEA  EAX, [EBP-4]
000006F3: 89 C3                                                 MOV  EBX, EAX
000006F5: 8B 03                                                 MOV  EAX, [EBX]
000006F7: 48                                                    DEC  EAX
000006F8: 48                                                    DEC  EAX
000006F9: 48                                                    DEC  EAX
000006FA: 48                                                    DEC  EAX
000006FB: 89 03                                                 MOV  [EBX], EAX
000006FD: 50                                                    PUSH EAX
000006FE: B1 02                                                 MOV  CL, 2
00000700: E8 07 00 00 00                                        CALL __print
00000705: 83 C4 08                                              ADD  ESP, 8
00000708: 89 EC                                                 MOV  ESP, EBP
0000070A: 5D                                                    POP  EBP
0000070B: C3                                                    RETN
                                                                
                                                                __print:
0000070C: 55                                                    PUSH EBP
0000070D: 89 E5                                                 MOV EBP,ESP
0000070F: 83 C4 C8                                              ADD ESP,-56
00000712: 8D 45 F0                                              LEA EAX,[EBP-16]
00000715: 89 C3                                                 MOV EBX,EAX
00000717: 31 C0                                                 XOR EAX,EAX
00000719: 89 03                                                 MOV [EBX],EAX
0000071B: 8D 45 E0                                              LEA EAX,[EBP-32]
0000071E: 50                                                    PUSH EAX
0000071F: 8D 45 08                                              LEA EAX,[EBP+8]
00000722: 89 C3                                                 MOV EBX,EAX
00000724: 8B 03                                                 MOV EAX, [EBX]
00000726: 48                                                    DEC EAX
00000727: 48                                                    DEC EAX
00000728: 48                                                    DEC EAX
00000729: 48                                                    DEC EAX
0000072A: 89 03                                                 MOV [EBX],EAX
0000072C: 40                                                    INC EAX
0000072D: 40                                                    INC EAX
0000072E: 40                                                    INC EAX
0000072F: 40                                                    INC EAX
00000730: 89 C3                                                 MOV EBX,EAX
00000732: 8B 03                                                 MOV EAX, [EBX]
00000734: 5B                                                    POP EBX
00000735: 89 03                                                 MOV [EBX],EAX
                                                                _lib_75:
00000737: 8D 45 E0                                              LEA EAX,[EBP-32]
0000073A: 89 C3                                                 MOV EBX,EAX
0000073C: 8B 03                                                 MOV EAX, [EBX]
0000073E: 89 C3                                                 MOV EBX,EAX
00000740: 0F BE 03                                              MOVSX EAX,BYTE [EBX]
00000743: 09 C0                                                 OR EAX,EAX
00000745: 75 05                                                 JNE _lib_77
00000747: E9 C6 04 00 00                                        JMP _lib_76
                                                                _lib_77:
0000074C: 8D 45 E0                                              LEA EAX,[EBP-32]
0000074F: 89 C3                                                 MOV EBX,EAX
00000751: 8B 03                                                 MOV EAX, [EBX]
00000753: 89 C3                                                 MOV EBX,EAX
00000755: 0F BE 03                                              MOVSX EAX,BYTE [EBX]
00000758: 89 C3                                                 MOV EBX,EAX
0000075A: B8 25 00 00 00                                        MOV EAX,37
0000075F: E8 CE F8 FF FF                                        CALL __ne
00000764: 09 C0                                                 OR EAX,EAX
00000766: 75 02                                                 JNE _lib_79
00000768: EB 31                                                 JMP _lib_78
                                                                _lib_79:
0000076A: 8D 45 E0                                              LEA EAX,[EBP-32]
0000076D: 89 C3                                                 MOV EBX,EAX
0000076F: 8B 03                                                 MOV EAX, [EBX]
00000771: 40                                                    INC EAX
00000772: 89 03                                                 MOV [EBX],EAX
00000774: 48                                                    DEC EAX
00000775: 89 C3                                                 MOV EBX,EAX
00000777: 0F BE 03                                              MOVSX EAX,BYTE [EBX]
0000077A: 50                                                    PUSH EAX
0000077B: 8D 45 0C                                              LEA EAX,[EBP+12]
0000077E: 89 C3                                                 MOV EBX,EAX
00000780: 8B 03                                                 MOV EAX, [EBX]
00000782: 50                                                    PUSH EAX
00000783: B1 02                                                 MOV CL,2
00000785: E8 3D 10 00 00                                        CALL _OS_fputc
0000078A: 83 C4 08                                              ADD ESP,8
0000078D: 8D 45 F0                                              LEA EAX,[EBP-16]
00000790: 89 C3                                                 MOV EBX,EAX
00000792: 8B 03                                                 MOV EAX, [EBX]
00000794: 40                                                    INC EAX
00000795: 89 03                                                 MOV [EBX],EAX
00000797: EB 9E                                                 JMP _lib_75
00000799: EB 0A                                                 JMP _lib_80
                                                                _lib_78:
0000079B: 8D 45 E0                                              LEA EAX,[EBP-32]
0000079E: 89 C3                                                 MOV EBX,EAX
000007A0: 8B 03                                                 MOV EAX, [EBX]
000007A2: 40                                                    INC EAX
000007A3: 89 03                                                 MOV [EBX],EAX
                                                                _lib_80:
000007A5: 8D 45 E0                                              LEA EAX,[EBP-32]
000007A8: 89 C3                                                 MOV EBX,EAX
000007AA: 8B 03                                                 MOV EAX, [EBX]
000007AC: 89 C3                                                 MOV EBX,EAX
000007AE: 0F BE 03                                              MOVSX EAX,BYTE [EBX]
000007B1: 89 C3                                                 MOV EBX,EAX
000007B3: B8 25 00 00 00                                        MOV EAX,37
000007B8: E8 6E F8 FF FF                                        CALL __eq
000007BD: 09 C0                                                 OR EAX,EAX
000007BF: 75 02                                                 JNE _lib_82
000007C1: EB 32                                                 JMP _lib_81
                                                                _lib_82:
000007C3: 8D 45 E0                                              LEA EAX,[EBP-32]
000007C6: 89 C3                                                 MOV EBX,EAX
000007C8: 8B 03                                                 MOV EAX, [EBX]
000007CA: 40                                                    INC EAX
000007CB: 89 03                                                 MOV [EBX],EAX
000007CD: 48                                                    DEC EAX
000007CE: 89 C3                                                 MOV EBX,EAX
000007D0: 0F BE 03                                              MOVSX EAX,BYTE [EBX]
000007D3: 50                                                    PUSH EAX
000007D4: 8D 45 0C                                              LEA EAX,[EBP+12]
000007D7: 89 C3                                                 MOV EBX,EAX
000007D9: 8B 03                                                 MOV EAX, [EBX]
000007DB: 50                                                    PUSH EAX
000007DC: B1 02                                                 MOV CL,2
000007DE: E8 E4 0F 00 00                                        CALL _OS_fputc
000007E3: 83 C4 08                                              ADD ESP,8
000007E6: 8D 45 F0                                              LEA EAX,[EBP-16]
000007E9: 89 C3                                                 MOV EBX,EAX
000007EB: 8B 03                                                 MOV EAX, [EBX]
000007ED: 40                                                    INC EAX
000007EE: 89 03                                                 MOV [EBX],EAX
000007F0: E9 42 FF FF FF                                        JMP _lib_75
                                                                _lib_81:
000007F5: 8D 45 E0                                              LEA EAX,[EBP-32]
000007F8: 89 C3                                                 MOV EBX,EAX
000007FA: 8B 03                                                 MOV EAX, [EBX]
000007FC: 89 C3                                                 MOV EBX,EAX
000007FE: 0F BE 03                                              MOVSX EAX,BYTE [EBX]
00000801: 89 C3                                                 MOV EBX,EAX
00000803: B8 2D 00 00 00                                        MOV EAX,45
00000808: E8 1E F8 FF FF                                        CALL __eq
0000080D: 09 C0                                                 OR EAX,EAX
0000080F: 75 02                                                 JNE _lib_84
00000811: EB 18                                                 JMP _lib_83
                                                                _lib_84:
00000813: 8D 45 F8                                              LEA EAX,[EBP-8]
00000816: 89 C3                                                 MOV EBX,EAX
00000818: B8 01 00 00 00                                        MOV EAX,1
0000081D: 89 03                                                 MOV [EBX],EAX
0000081F: 8D 45 E0                                              LEA EAX,[EBP-32]
00000822: 89 C3                                                 MOV EBX,EAX
00000824: 8B 03                                                 MOV EAX, [EBX]
00000826: 40                                                    INC EAX
00000827: 89 03                                                 MOV [EBX],EAX
00000829: EB 09                                                 JMP _lib_85
                                                                _lib_83:
0000082B: 8D 45 F8                                              LEA EAX,[EBP-8]
0000082E: 89 C3                                                 MOV EBX,EAX
00000830: 31 C0                                                 XOR EAX,EAX
00000832: 89 03                                                 MOV [EBX],EAX
                                                                _lib_85:
00000834: 8D 45 E0                                              LEA EAX,[EBP-32]
00000837: 89 C3                                                 MOV EBX,EAX
00000839: 8B 03                                                 MOV EAX, [EBX]
0000083B: 89 C3                                                 MOV EBX,EAX
0000083D: 0F BE 03                                              MOVSX EAX,BYTE [EBX]
00000840: 89 C3                                                 MOV EBX,EAX
00000842: B8 30 00 00 00                                        MOV EAX,48
00000847: E8 DF F7 FF FF                                        CALL __eq
0000084C: 09 C0                                                 OR EAX,EAX
0000084E: 75 02                                                 JNE _lib_87
00000850: EB 0E                                                 JMP _lib_86
                                                                _lib_87:
00000852: 8D 45 F4                                              LEA EAX,[EBP-12]
00000855: 89 C3                                                 MOV EBX,EAX
00000857: B8 30 00 00 00                                        MOV EAX,48
0000085C: 89 03                                                 MOV [EBX],EAX
0000085E: EB 0C                                                 JMP _lib_88
                                                                _lib_86:
00000860: 8D 45 F4                                              LEA EAX,[EBP-12]
00000863: 89 C3                                                 MOV EBX,EAX
00000865: B8 20 00 00 00                                        MOV EAX,32
0000086A: 89 03                                                 MOV [EBX],EAX
                                                                _lib_88:
0000086C: 8D 45 E0                                              LEA EAX,[EBP-32]
0000086F: 89 C3                                                 MOV EBX,EAX
00000871: 8B 03                                                 MOV EAX, [EBX]
00000873: 89 C3                                                 MOV EBX,EAX
00000875: 0F BE 03                                              MOVSX EAX,BYTE [EBX]
00000878: 50                                                    PUSH EAX
00000879: B1 01                                                 MOV CL,1
0000087B: E8 50 06 00 00                                        CALL _isdigit
00000880: 83 C4 04                                              ADD ESP,4
00000883: 09 C0                                                 OR EAX,EAX
00000885: 75 02                                                 JNE _lib_90
00000887: EB 48                                                 JMP _lib_89
                                                                _lib_90:
00000889: 8D 45 E4                                              LEA EAX,[EBP-28]
0000088C: 50                                                    PUSH EAX
0000088D: 8D 45 E0                                              LEA EAX,[EBP-32]
00000890: 89 C3                                                 MOV EBX,EAX
00000892: 8B 03                                                 MOV EAX, [EBX]
00000894: 40                                                    INC EAX
00000895: 89 03                                                 MOV [EBX],EAX
00000897: 48                                                    DEC EAX
00000898: 50                                                    PUSH EAX
00000899: B1 01                                                 MOV CL,1
0000089B: E8 29 F9 FF FF                                        CALL _atoi
000008A0: 83 C4 04                                              ADD ESP,4
000008A3: 5B                                                    POP EBX
000008A4: 89 03                                                 MOV [EBX],EAX
                                                                _lib_91:
000008A6: 8D 45 E0                                              LEA EAX,[EBP-32]
000008A9: 89 C3                                                 MOV EBX,EAX
000008AB: 8B 03                                                 MOV EAX, [EBX]
000008AD: 89 C3                                                 MOV EBX,EAX
000008AF: 0F BE 03                                              MOVSX EAX,BYTE [EBX]
000008B2: 50                                                    PUSH EAX
000008B3: B1 01                                                 MOV CL,1
000008B5: E8 16 06 00 00                                        CALL _isdigit
000008BA: 83 C4 04                                              ADD ESP,4
000008BD: 09 C0                                                 OR EAX,EAX
000008BF: 75 02                                                 JNE _lib_93
000008C1: EB 0C                                                 JMP _lib_92
                                                                _lib_93:
000008C3: 8D 45 E0                                              LEA EAX,[EBP-32]
000008C6: 89 C3                                                 MOV EBX,EAX
000008C8: 8B 03                                                 MOV EAX, [EBX]
000008CA: 40                                                    INC EAX
000008CB: 89 03                                                 MOV [EBX],EAX
000008CD: EB D7                                                 JMP _lib_91
                                                                _lib_92:
000008CF: EB 09                                                 JMP _lib_94
                                                                _lib_89:
000008D1: 8D 45 E4                                              LEA EAX,[EBP-28]
000008D4: 89 C3                                                 MOV EBX,EAX
000008D6: 31 C0                                                 XOR EAX,EAX
000008D8: 89 03                                                 MOV [EBX],EAX
                                                                _lib_94:
000008DA: 8D 45 E0                                              LEA EAX,[EBP-32]
000008DD: 89 C3                                                 MOV EBX,EAX
000008DF: 8B 03                                                 MOV EAX, [EBX]
000008E1: 89 C3                                                 MOV EBX,EAX
000008E3: 0F BE 03                                              MOVSX EAX,BYTE [EBX]
000008E6: 89 C3                                                 MOV EBX,EAX
000008E8: B8 2E 00 00 00                                        MOV EAX,46
000008ED: E8 39 F7 FF FF                                        CALL __eq
000008F2: 09 C0                                                 OR EAX,EAX
000008F4: 75 02                                                 JNE _lib_96
000008F6: EB 47                                                 JMP _lib_95
                                                                _lib_96:
000008F8: 8D 45 E8                                              LEA EAX,[EBP-24]
000008FB: 50                                                    PUSH EAX
000008FC: 8D 45 E0                                              LEA EAX,[EBP-32]
000008FF: 89 C3                                                 MOV EBX,EAX
00000901: 8B 03                                                 MOV EAX, [EBX]
00000903: 40                                                    INC EAX
00000904: 89 03                                                 MOV [EBX],EAX
00000906: 50                                                    PUSH EAX
00000907: B1 01                                                 MOV CL,1
00000909: E8 BB F8 FF FF                                        CALL _atoi
0000090E: 83 C4 04                                              ADD ESP,4
00000911: 5B                                                    POP EBX
00000912: 89 03                                                 MOV [EBX],EAX
                                                                _lib_97:
00000914: 8D 45 E0                                              LEA EAX,[EBP-32]
00000917: 89 C3                                                 MOV EBX,EAX
00000919: 8B 03                                                 MOV EAX, [EBX]
0000091B: 89 C3                                                 MOV EBX,EAX
0000091D: 0F BE 03                                              MOVSX EAX,BYTE [EBX]
00000920: 50                                                    PUSH EAX
00000921: B1 01                                                 MOV CL,1
00000923: E8 A8 05 00 00                                        CALL _isdigit
00000928: 83 C4 04                                              ADD ESP,4
0000092B: 09 C0                                                 OR EAX,EAX
0000092D: 75 02                                                 JNE _lib_99
0000092F: EB 0C                                                 JMP _lib_98
                                                                _lib_99:
00000931: 8D 45 E0                                              LEA EAX,[EBP-32]
00000934: 89 C3                                                 MOV EBX,EAX
00000936: 8B 03                                                 MOV EAX, [EBX]
00000938: 40                                                    INC EAX
00000939: 89 03                                                 MOV [EBX],EAX
0000093B: EB D7                                                 JMP _lib_97
                                                                _lib_98:
0000093D: EB 09                                                 JMP _lib_100
                                                                _lib_95:
0000093F: 8D 45 E8                                              LEA EAX,[EBP-24]
00000942: 89 C3                                                 MOV EBX,EAX
00000944: 31 C0                                                 XOR EAX,EAX
00000946: 89 03                                                 MOV [EBX],EAX
                                                                _lib_100:
00000948: 8D 45 FC                                              LEA EAX,[EBP-4]
0000094B: 50                                                    PUSH EAX
0000094C: 8D 45 08                                              LEA EAX,[EBP+8]
0000094F: 89 C3                                                 MOV EBX,EAX
00000951: 8B 03                                                 MOV EAX, [EBX]
00000953: 48                                                    DEC EAX
00000954: 48                                                    DEC EAX
00000955: 48                                                    DEC EAX
00000956: 48                                                    DEC EAX
00000957: 89 03                                                 MOV [EBX],EAX
00000959: 40                                                    INC EAX
0000095A: 40                                                    INC EAX
0000095B: 40                                                    INC EAX
0000095C: 40                                                    INC EAX
0000095D: 89 C3                                                 MOV EBX,EAX
0000095F: 8B 03                                                 MOV EAX, [EBX]
00000961: 5B                                                    POP EBX
00000962: 89 03                                                 MOV [EBX],EAX
00000964: 8D 45 DC                                              LEA EAX,[EBP-36]
00000967: 50                                                    PUSH EAX
00000968: 8D 45 C8                                              LEA EAX,[EBP-56]
0000096B: 5B                                                    POP EBX
0000096C: 89 03                                                 MOV [EBX],EAX
0000096E: 8D 45 E0                                              LEA EAX,[EBP-32]
00000971: 89 C3                                                 MOV EBX,EAX
00000973: 8B 03                                                 MOV EAX, [EBX]
00000975: 40                                                    INC EAX
00000976: 89 03                                                 MOV [EBX],EAX
00000978: 48                                                    DEC EAX
00000979: 89 C3                                                 MOV EBX,EAX
0000097B: 0F BE 03                                              MOVSX EAX,BYTE [EBX]
0000097E: E9 DC 00 00 00                                        JMP _lib_103
                                                                _lib_104:
00000983: 8D 45 C8                                              LEA EAX,[EBP-56]
00000986: 50                                                    PUSH EAX
00000987: 8D 45 FC                                              LEA EAX,[EBP-4]
0000098A: 89 C3                                                 MOV EBX,EAX
0000098C: 8B 03                                                 MOV EAX, [EBX]
0000098E: 5B                                                    POP EBX
0000098F: 88 03                                                 MOV [EBX],AL
00000991: 8D 45 C8                                              LEA EAX,[EBP-56]
00000994: BB 01 00 00 00                                        MOV EBX,1
00000999: 01 D8                                                 ADD EAX,EBX
0000099B: 89 C3                                                 MOV EBX,EAX
0000099D: 31 C0                                                 XOR EAX,EAX
0000099F: 88 03                                                 MOV [EBX],AL
000009A1: E9 FC 00 00 00                                        JMP _lib_102
                                                                _lib_105:
000009A6: 8D 45 DC                                              LEA EAX,[EBP-36]
000009A9: 50                                                    PUSH EAX
000009AA: 8D 45 FC                                              LEA EAX,[EBP-4]
000009AD: 89 C3                                                 MOV EBX,EAX
000009AF: 8B 03                                                 MOV EAX, [EBX]
000009B1: 5B                                                    POP EBX
000009B2: 89 03                                                 MOV [EBX],EAX
000009B4: E9 E9 00 00 00                                        JMP _lib_102
                                                                _lib_106:
000009B9: 8D 45 FC                                              LEA EAX,[EBP-4]
000009BC: 89 C3                                                 MOV EBX,EAX
000009BE: 8B 03                                                 MOV EAX, [EBX]
000009C0: 50                                                    PUSH EAX
000009C1: 8D 45 C8                                              LEA EAX,[EBP-56]
000009C4: 50                                                    PUSH EAX
000009C5: B1 02                                                 MOV CL,2
000009C7: E8 F4 05 00 00                                        CALL _itoa
000009CC: 83 C4 08                                              ADD ESP,8
000009CF: E9 CE 00 00 00                                        JMP _lib_102
                                                                _lib_107:
000009D4: 8D 45 FC                                              LEA EAX,[EBP-4]
000009D7: 89 C3                                                 MOV EBX,EAX
000009D9: 8B 03                                                 MOV EAX, [EBX]
000009DB: 50                                                    PUSH EAX
000009DC: 8D 45 C8                                              LEA EAX,[EBP-56]
000009DF: 50                                                    PUSH EAX
000009E0: B8 02 00 00 00                                        MOV EAX,2
000009E5: 50                                                    PUSH EAX
000009E6: B1 03                                                 MOV CL,3
000009E8: E8 9A 06 00 00                                        CALL _itoab
000009ED: 83 C4 0C                                              ADD ESP,12
000009F0: E9 AD 00 00 00                                        JMP _lib_102
                                                                _lib_108:
000009F5: 8D 45 FC                                              LEA EAX,[EBP-4]
000009F8: 89 C3                                                 MOV EBX,EAX
000009FA: 8B 03                                                 MOV EAX, [EBX]
000009FC: 50                                                    PUSH EAX
000009FD: 8D 45 C8                                              LEA EAX,[EBP-56]
00000A00: 50                                                    PUSH EAX
00000A01: B8 08 00 00 00                                        MOV EAX,8
00000A06: 50                                                    PUSH EAX
00000A07: B1 03                                                 MOV CL,3
00000A09: E8 79 06 00 00                                        CALL _itoab
00000A0E: 83 C4 0C                                              ADD ESP,12
00000A11: E9 8C 00 00 00                                        JMP _lib_102
                                                                _lib_109:
00000A16: 8D 45 FC                                              LEA EAX,[EBP-4]
00000A19: 89 C3                                                 MOV EBX,EAX
00000A1B: 8B 03                                                 MOV EAX, [EBX]
00000A1D: 50                                                    PUSH EAX
00000A1E: 8D 45 C8                                              LEA EAX,[EBP-56]
00000A21: 50                                                    PUSH EAX
00000A22: B8 0A 00 00 00                                        MOV EAX,10
00000A27: 50                                                    PUSH EAX
00000A28: B1 03                                                 MOV CL,3
00000A2A: E8 58 06 00 00                                        CALL _itoab
00000A2F: 83 C4 0C                                              ADD ESP,12
00000A32: EB 6E                                                 JMP _lib_102
                                                                _lib_110:
00000A34: 8D 45 FC                                              LEA EAX,[EBP-4]
00000A37: 89 C3                                                 MOV EBX,EAX
00000A39: 8B 03                                                 MOV EAX, [EBX]
00000A3B: 50                                                    PUSH EAX
00000A3C: 8D 45 C8                                              LEA EAX,[EBP-56]
00000A3F: 50                                                    PUSH EAX
00000A40: B8 10 00 00 00                                        MOV EAX,16
00000A45: 50                                                    PUSH EAX
00000A46: B1 03                                                 MOV CL,3
00000A48: E8 3A 06 00 00                                        CALL _itoab
00000A4D: 83 C4 0C                                              ADD ESP,12
00000A50: EB 50                                                 JMP _lib_102
                                                                _lib_111:
00000A52: 8D 45 F0                                              LEA EAX,[EBP-16]
00000A55: 89 C3                                                 MOV EBX,EAX
00000A57: 8B 03                                                 MOV EAX, [EBX]
00000A59: 89 EC                                                 MOV ESP,EBP
00000A5B: 5D                                                    POP EBP
00000A5C: C3                                                    RET
00000A5D: EB 43                                                 JMP _lib_102
                                                                _lib_103:
00000A5F: E8 FE F5 FF FF                                        CALL __switch
00000A64: 83 09 00 00                                            DD _lib_104
00000A68: 63 00 00 00                                            DD 99
00000A6C: A6 09 00 00                                            DD _lib_105
00000A70: 73 00 00 00                                            DD 115
00000A74: B9 09 00 00                                            DD _lib_106
00000A78: 64 00 00 00                                            DD 100
00000A7C: D4 09 00 00                                            DD _lib_107
00000A80: 62 00 00 00                                            DD 98
00000A84: F5 09 00 00                                            DD _lib_108
00000A88: 6F 00 00 00                                            DD 111
00000A8C: 16 0A 00 00                                            DD _lib_109
00000A90: 75 00 00 00                                            DD 117
00000A94: 34 0A 00 00                                            DD _lib_110
00000A98: 78 00 00 00                                            DD 120
00000A9C: 00 00 00 00                                            DD 0
00000AA0: EB B0                                                 JMP _lib_111
                                                                _lib_102:
00000AA2: 8D 45 EC                                              LEA EAX,[EBP-20]
00000AA5: 50                                                    PUSH EAX
00000AA6: 8D 45 DC                                              LEA EAX,[EBP-36]
00000AA9: 89 C3                                                 MOV EBX,EAX
00000AAB: 8B 03                                                 MOV EAX, [EBX]
00000AAD: 50                                                    PUSH EAX
00000AAE: B1 01                                                 MOV CL,1
00000AB0: E8 AE F6 FF FF                                        CALL _strlen
00000AB5: 83 C4 04                                              ADD ESP,4
00000AB8: 5B                                                    POP EBX
00000AB9: 89 03                                                 MOV [EBX],EAX
00000ABB: 8D 45 E8                                              LEA EAX,[EBP-24]
00000ABE: 89 C3                                                 MOV EBX,EAX
00000AC0: 8B 03                                                 MOV EAX, [EBX]
00000AC2: 09 C0                                                 OR EAX,EAX
00000AC4: 75 02                                                 JNE _lib_115
00000AC6: EB 22                                                 JMP _lib_113
                                                                _lib_115:
00000AC8: 8D 45 E8                                              LEA EAX,[EBP-24]
00000ACB: 89 C3                                                 MOV EBX,EAX
00000ACD: 8B 03                                                 MOV EAX, [EBX]
00000ACF: 50                                                    PUSH EAX
00000AD0: 8D 45 EC                                              LEA EAX,[EBP-20]
00000AD3: 89 C3                                                 MOV EBX,EAX
00000AD5: 8B 03                                                 MOV EAX, [EBX]
00000AD7: 5B                                                    POP EBX
00000AD8: E8 5C F5 FF FF                                        CALL __lt
00000ADD: 09 C0                                                 OR EAX,EAX
00000ADF: 75 02                                                 JNE _lib_116
00000AE1: EB 07                                                 JMP _lib_113
                                                                _lib_116:
00000AE3: B8 01 00 00 00                                        MOV EAX,1
00000AE8: EB 02                                                 JMP _lib_114
                                                                _lib_113:
00000AEA: 31 C0                                                 XOR EAX,EAX
                                                                _lib_114:
00000AEC: 09 C0                                                 OR EAX,EAX
00000AEE: 75 02                                                 JNE _lib_117
00000AF0: EB 0E                                                 JMP _lib_112
                                                                _lib_117:
00000AF2: 8D 45 EC                                              LEA EAX,[EBP-20]
00000AF5: 50                                                    PUSH EAX
00000AF6: 8D 45 E8                                              LEA EAX,[EBP-24]
00000AF9: 89 C3                                                 MOV EBX,EAX
00000AFB: 8B 03                                                 MOV EAX, [EBX]
00000AFD: 5B                                                    POP EBX
00000AFE: 89 03                                                 MOV [EBX],EAX
                                                                _lib_112:
00000B00: 8D 45 E4                                              LEA EAX,[EBP-28]
00000B03: 89 C3                                                 MOV EBX,EAX
00000B05: 8B 03                                                 MOV EAX, [EBX]
00000B07: 50                                                    PUSH EAX
00000B08: 8D 45 EC                                              LEA EAX,[EBP-20]
00000B0B: 89 C3                                                 MOV EBX,EAX
00000B0D: 8B 03                                                 MOV EAX, [EBX]
00000B0F: 5B                                                    POP EBX
00000B10: E8 2B F5 FF FF                                        CALL __gt
00000B15: 09 C0                                                 OR EAX,EAX
00000B17: 75 02                                                 JNE _lib_119
00000B19: EB 1C                                                 JMP _lib_118
                                                                _lib_119:
00000B1B: 8D 45 E4                                              LEA EAX,[EBP-28]
00000B1E: 50                                                    PUSH EAX
00000B1F: 8D 45 E4                                              LEA EAX,[EBP-28]
00000B22: 89 C3                                                 MOV EBX,EAX
00000B24: 8B 03                                                 MOV EAX, [EBX]
00000B26: 50                                                    PUSH EAX
00000B27: 8D 45 EC                                              LEA EAX,[EBP-20]
00000B2A: 89 C3                                                 MOV EBX,EAX
00000B2C: 8B 03                                                 MOV EAX, [EBX]
00000B2E: 5B                                                    POP EBX
00000B2F: 93                                                    XCHG EAX,EBX
00000B30: 29 D8                                                 SUB EAX,EBX
00000B32: 5B                                                    POP EBX
00000B33: 89 03                                                 MOV [EBX],EAX
00000B35: EB 09                                                 JMP _lib_120
                                                                _lib_118:
00000B37: 8D 45 E4                                              LEA EAX,[EBP-28]
00000B3A: 89 C3                                                 MOV EBX,EAX
00000B3C: 31 C0                                                 XOR EAX,EAX
00000B3E: 89 03                                                 MOV [EBX],EAX
                                                                _lib_120:
00000B40: 8D 45 F8                                              LEA EAX,[EBP-8]
00000B43: 89 C3                                                 MOV EBX,EAX
00000B45: 8B 03                                                 MOV EAX, [EBX]
00000B47: E8 09 F5 FF FF                                        CALL __lneg
00000B4C: 09 C0                                                 OR EAX,EAX
00000B4E: 75 02                                                 JNE _lib_122
00000B50: EB 37                                                 JMP _lib_121
                                                                _lib_122:
                                                                _lib_123:
00000B52: 8D 45 E4                                              LEA EAX,[EBP-28]
00000B55: 89 C3                                                 MOV EBX,EAX
00000B57: 8B 03                                                 MOV EAX, [EBX]
00000B59: 48                                                    DEC EAX
00000B5A: 89 03                                                 MOV [EBX],EAX
00000B5C: 40                                                    INC EAX
00000B5D: 09 C0                                                 OR EAX,EAX
00000B5F: 75 02                                                 JNE _lib_125
00000B61: EB 26                                                 JMP _lib_124
                                                                _lib_125:
00000B63: 8D 45 F4                                              LEA EAX,[EBP-12]
00000B66: 89 C3                                                 MOV EBX,EAX
00000B68: 8B 03                                                 MOV EAX, [EBX]
00000B6A: 50                                                    PUSH EAX
00000B6B: 8D 45 0C                                              LEA EAX,[EBP+12]
00000B6E: 89 C3                                                 MOV EBX,EAX
00000B70: 8B 03                                                 MOV EAX, [EBX]
00000B72: 50                                                    PUSH EAX
00000B73: B1 02                                                 MOV CL,2
00000B75: E8 4D 0C 00 00                                        CALL _OS_fputc
00000B7A: 83 C4 08                                              ADD ESP,8
00000B7D: 8D 45 F0                                              LEA EAX,[EBP-16]
00000B80: 89 C3                                                 MOV EBX,EAX
00000B82: 8B 03                                                 MOV EAX, [EBX]
00000B84: 40                                                    INC EAX
00000B85: 89 03                                                 MOV [EBX],EAX
00000B87: EB C9                                                 JMP _lib_123
                                                                _lib_124:
                                                                _lib_121:
                                                                _lib_126:
00000B89: 8D 45 EC                                              LEA EAX,[EBP-20]
00000B8C: 89 C3                                                 MOV EBX,EAX
00000B8E: 8B 03                                                 MOV EAX, [EBX]
00000B90: 48                                                    DEC EAX
00000B91: 89 03                                                 MOV [EBX],EAX
00000B93: 40                                                    INC EAX
00000B94: 09 C0                                                 OR EAX,EAX
00000B96: 75 02                                                 JNE _lib_128
00000B98: EB 2F                                                 JMP _lib_127
                                                                _lib_128:
00000B9A: 8D 45 DC                                              LEA EAX,[EBP-36]
00000B9D: 89 C3                                                 MOV EBX,EAX
00000B9F: 8B 03                                                 MOV EAX, [EBX]
00000BA1: 40                                                    INC EAX
00000BA2: 89 03                                                 MOV [EBX],EAX
00000BA4: 48                                                    DEC EAX
00000BA5: 89 C3                                                 MOV EBX,EAX
00000BA7: 0F BE 03                                              MOVSX EAX,BYTE [EBX]
00000BAA: 50                                                    PUSH EAX
00000BAB: 8D 45 0C                                              LEA EAX,[EBP+12]
00000BAE: 89 C3                                                 MOV EBX,EAX
00000BB0: 8B 03                                                 MOV EAX, [EBX]
00000BB2: 50                                                    PUSH EAX
00000BB3: B1 02                                                 MOV CL,2
00000BB5: E8 0D 0C 00 00                                        CALL _OS_fputc
00000BBA: 83 C4 08                                              ADD ESP,8
00000BBD: 8D 45 F0                                              LEA EAX,[EBP-16]
00000BC0: 89 C3                                                 MOV EBX,EAX
00000BC2: 8B 03                                                 MOV EAX, [EBX]
00000BC4: 40                                                    INC EAX
00000BC5: 89 03                                                 MOV [EBX],EAX
00000BC7: EB C0                                                 JMP _lib_126
                                                                _lib_127:
00000BC9: 8D 45 F8                                              LEA EAX,[EBP-8]
00000BCC: 89 C3                                                 MOV EBX,EAX
00000BCE: 8B 03                                                 MOV EAX, [EBX]
00000BD0: 09 C0                                                 OR EAX,EAX
00000BD2: 75 02                                                 JNE _lib_130
00000BD4: EB 37                                                 JMP _lib_129
                                                                _lib_130:
                                                                _lib_131:
00000BD6: 8D 45 E4                                              LEA EAX,[EBP-28]
00000BD9: 89 C3                                                 MOV EBX,EAX
00000BDB: 8B 03                                                 MOV EAX, [EBX]
00000BDD: 48                                                    DEC EAX
00000BDE: 89 03                                                 MOV [EBX],EAX
00000BE0: 40                                                    INC EAX
00000BE1: 09 C0                                                 OR EAX,EAX
00000BE3: 75 02                                                 JNE _lib_133
00000BE5: EB 26                                                 JMP _lib_132
                                                                _lib_133:
00000BE7: 8D 45 F4                                              LEA EAX,[EBP-12]
00000BEA: 89 C3                                                 MOV EBX,EAX
00000BEC: 8B 03                                                 MOV EAX, [EBX]
00000BEE: 50                                                    PUSH EAX
00000BEF: 8D 45 0C                                              LEA EAX,[EBP+12]
00000BF2: 89 C3                                                 MOV EBX,EAX
00000BF4: 8B 03                                                 MOV EAX, [EBX]
00000BF6: 50                                                    PUSH EAX
00000BF7: B1 02                                                 MOV CL,2
00000BF9: E8 C9 0B 00 00                                        CALL _OS_fputc
00000BFE: 83 C4 08                                              ADD ESP,8
00000C01: 8D 45 F0                                              LEA EAX,[EBP-16]
00000C04: 89 C3                                                 MOV EBX,EAX
00000C06: 8B 03                                                 MOV EAX, [EBX]
00000C08: 40                                                    INC EAX
00000C09: 89 03                                                 MOV [EBX],EAX
00000C0B: EB C9                                                 JMP _lib_131
                                                                _lib_132:
                                                                _lib_129:
00000C0D: E9 25 FB FF FF                                        JMP _lib_75
                                                                _lib_76:
00000C12: 8D 45 F0                                              LEA EAX,[EBP-16]
00000C15: 89 C3                                                 MOV EBX,EAX
00000C17: 8B 03                                                 MOV EAX, [EBX]
00000C19: 89 EC                                                 MOV ESP,EBP
00000C1B: 5D                                                    POP EBP
00000C1C: C3                                                    RET
                                                                
                                                                _printf:
00000C1D: 55                                                    PUSH EBP
00000C1E: 89 E5                                                 MOV EBP,ESP
00000C20: B8 FF FF FF FF                                        MOV EAX,-1  ; TRDOS 386 STDOUT/STDERR 
00000C25: 50                                                    PUSH EAX
00000C26: E8 DE F3 FF FF                                        CALL _CCARGC
00000C2B: 50                                                    PUSH EAX
00000C2C: 8D 45 08                                              LEA EAX,[EBP+8]
00000C2F: 5B                                                    POP EBX
00000C30: D1 E3                                                 SHL EBX,1
00000C32: D1 E3                                                 SHL EBX,1
00000C34: 01 D8                                                 ADD EAX,EBX
00000C36: 89 C3                                                 MOV EBX,EAX
00000C38: B8 04 00 00 00                                        MOV EAX,4
00000C3D: 93                                                    XCHG EAX,EBX
00000C3E: 29 D8                                                 SUB EAX,EBX
00000C40: 50                                                    PUSH EAX
00000C41: B1 02                                                 MOV CL,2
00000C43: E8 C4 FA FF FF                                        CALL __print
00000C48: 83 C4 08                                              ADD ESP,8
00000C4B: 5D                                                    POP EBP
00000C4C: C3                                                    RET
                                                                
                                                                _fputs:			; fputs(string,fd)
00000C4D: 55                                                    PUSH EBP
00000C4E: 89 E5                                                 MOV  EBP, ESP
                                                                _fputs_1:
00000C50: 8D 45 0C                                              LEA  EAX, [EBP+12]	; while(*string)
00000C53: 8B 18                                                 MOV  EBX, [EAX]
00000C55: 0F BE 03                                              MOVSX EAX, BYTE [EBX]	; *string (char)
00000C58: 09 C0                                                 OR   EAX, EAX
00000C5A: 74 18                                                 JZ   short _fputs_2	; char = 0 (ASCIIZ string)
                                                                ;_lib_137:
00000C5C: 50                                                    PUSH EAX
00000C5D: 8D 45 0C                                              LEA  EAX, [EBP+12]	; OS_fputc(*string++,fd);
                                                                ;MOV EBX, [EAX]
                                                                ;INC EBX
                                                                ;MOV [EAX], EBX
                                                                ;DEC EBX
00000C60: FF 00                                                 INC  DWORD [EAX]	; *string++
                                                                			; (points to the next char)
                                                                ;MOVSX EAX, BYTE [EBX]	; char (> 0)
                                                                ;PUSH EAX
00000C62: 8D 5D 08                                              LEA  EBX, [EBP+8]
00000C65: 8B 03                                                 MOV  EAX, [EBX]		; fd (-1 -> STDOUT/STDERR)
00000C67: 50                                                    PUSH EAX
00000C68: B1 02                                                 MOV  CL, 2
00000C6A: E8 58 0B 00 00                                        CALL _OS_fputc
00000C6F: 83 C4 08                                              ADD  ESP, 8
00000C72: EB DC                                                 JMP  short _fputs_1	; jump to while(*string)
                                                                _fputs_2:
00000C74: 5D                                                    POP  EBP
00000C75: C3                                                    RETN
                                                                
                                                                ;#define ALNUM     1
                                                                ;#define ALPHA     2
                                                                ;#define CNTRL     4
                                                                ;#define DIGIT     8
                                                                ;#define GRAPH    16
                                                                ;#define LOWER    32
                                                                ;#define PRINT    64
                                                                ;#define PUNCT   128
                                                                ;#define BLANK   256
                                                                ;#define UPPER   512
                                                                ;#define XDIGIT 1024
                                                                
                                                                __is: ; int _is[128] =
00000C76: 04 00 00 00 04 00 00 00 04 00 00 00 04 00 00 00        DD 4,4,4,4,4,4,4,4,4,260
          04 00 00 00 04 00 00 00 04 00 00 00 04 00 00 00       
          04 00 00 00 04 01 00 00                               
00000C9E: 04 01 00 00 04 01 00 00 04 01 00 00 04 01 00 00        DD 260,260,260,260,4,4,4,4,4,4
          04 00 00 00 04 00 00 00 04 00 00 00 04 00 00 00       
          04 00 00 00 04 00 00 00                               
00000CC6: 04 00 00 00 04 00 00 00 04 00 00 00 04 00 00 00        DD 4,4,4,4,4,4,4,4,4,4
          04 00 00 00 04 00 00 00 04 00 00 00 04 00 00 00       
          04 00 00 00 04 00 00 00                               
00000CEE: 04 00 00 00 04 00 00 00 40 01 00 00 D0 00 00 00        DD 4,4, 320,208,208,208,208,208,208,208
          D0 00 00 00 D0 00 00 00 D0 00 00 00 D0 00 00 00       
          D0 00 00 00 D0 00 00 00                               
00000D16: D0 00 00 00 D0 00 00 00 D0 00 00 00 D0 00 00 00        DD 208,208,208,208,208,208,208,208,1113,1113
          D0 00 00 00 D0 00 00 00 D0 00 00 00 D0 00 00 00       
          59 04 00 00 59 04 00 00                               
00000D3E: 59 04 00 00 59 04 00 00 59 04 00 00 59 04 00 00        DD 1113,1113,1113,1113,1113,1113,1113,1113,208,208
          59 04 00 00 59 04 00 00 59 04 00 00 59 04 00 00       
          D0 00 00 00 D0 00 00 00                               
00000D66: D0 00 00 00 D0 00 00 00 D0 00 00 00 D0 00 00 00        DD 208,208,208,208,208,1619,1619,1619,1619,1619
          D0 00 00 00 53 06 00 00 53 06 00 00 53 06 00 00       
          53 06 00 00 53 06 00 00                               
00000D8E: 53 06 00 00 53 02 00 00 53 02 00 00 53 02 00 00        DD 1619,595,595,595,595,595,595,595,595,595
          53 02 00 00 53 02 00 00 53 02 00 00 53 02 00 00       
          53 02 00 00 53 02 00 00                               
00000DB6: 53 02 00 00 53 02 00 00 53 02 00 00 53 02 00 00        DD 595,595,595,595,595,595,595,595,595,595
          53 02 00 00 53 02 00 00 53 02 00 00 53 02 00 00       
          53 02 00 00 53 02 00 00                               
00000DDE: 53 02 00 00 D0 00 00 00 D0 00 00 00 D0 00 00 00        DD 595,208,208,208,208,208,208,1139,1139,1139
          D0 00 00 00 D0 00 00 00 D0 00 00 00 73 04 00 00       
          73 04 00 00 73 04 00 00                               
00000E06: 73 04 00 00 73 04 00 00 73 04 00 00 73 00 00 00        DD 1139,1139,1139,115,115,115,115,115,115,115
          73 00 00 00 73 00 00 00 73 00 00 00 73 00 00 00       
          73 00 00 00 73 00 00 00                               
00000E2E: 73 00 00 00 73 00 00 00 73 00 00 00 73 00 00 00        DD 115,115,115,115,115,115,115,115,115,115
          73 00 00 00 73 00 00 00 73 00 00 00 73 00 00 00       
          73 00 00 00 73 00 00 00                               
00000E56: 73 00 00 00 73 00 00 00 73 00 00 00 D0 00 00 00        DD 115,115,115,208,208,208,208,4
          D0 00 00 00 D0 00 00 00 D0 00 00 00 04 00 00 00       
                                                                
                                                                ; isalnum (c) int c; {return (_is[c] & ALNUM);}
                                                                ; /* 'a'-'z', 'A'-'Z', '0'-'9' */
                                                                
                                                                _isalnum:
00000E76: 55                                                    PUSH EBP
00000E77: 89 E5                                                 MOV  EBP, ESP
00000E79: 8D 5D 08                                              LEA  EBX, [EBP+8]
00000E7C: 8B 03                                                 MOV  EAX, [EBX]	; int c;
00000E7E: BB 76 0C 00 00                                        MOV  EBX, __is
00000E83: D1 E0                                                 SHL  EAX, 1
00000E85: D1 E0                                                 SHL  EAX, 1
00000E87: 01 C3                                                 ADD  EBX, EAX
00000E89: 8B 03                                                 MOV  EAX, [EBX]
00000E8B: BB 01 00 00 00                                        MOV  EBX, 1	; ALNUM
00000E90: 21 D8                                                 AND  EAX, EBX	; return (_is[c] & ALNUM);
00000E92: 5D                                                    POP  EBP
00000E93: C3                                                    RETN
                                                                
                                                                ;isalpha (c) int c; {return (_is[c] & ALPHA);}
                                                                ; /* 'a'-'z', 'A'-'Z' */
                                                                
                                                                _isalpha:
00000E94: 55                                                    PUSH EBP
00000E95: 89 E5                                                 MOV  EBP, ESP
00000E97: 8D 5D 08                                              LEA  EBX, [EBP+8]
00000E9A: 8B 03                                                 MOV  EAX, [EBX] ; int c;
00000E9C: BB 76 0C 00 00                                        MOV  EBX, __is
00000EA1: D1 E0                                                 SHL  EAX, 1
00000EA3: D1 E0                                                 SHL  EAX, 1
00000EA5: 01 C3                                                 ADD  EBX, EAX
00000EA7: 8B 03                                                 MOV  EAX, [EBX]
00000EA9: BB 02 00 00 00                                        MOV  EBX, 2	; ALPHA
00000EAE: 21 D8                                                 AND  EAX, EBX	; return (_is[c] & ALPHA);
00000EB0: 5D                                                    POP  EBP
00000EB1: C3                                                    RETN
                                                                
                                                                ; iscntrl (c) int c; {return (_is[c] & CNTRL);}
                                                                ; /* 0-31, 127 */
                                                                
                                                                _iscntrl:
00000EB2: 55                                                    PUSH EBP
00000EB3: 89 E5                                                 MOV  EBP, ESP
00000EB5: 8D 5D 08                                              LEA  EBX, [EBP+8]
00000EB8: 8B 03                                                 MOV  EAX, [EBX] ; int c;
00000EBA: BB 76 0C 00 00                                        MOV  EBX, __is
00000EBF: D1 E0                                                 SHL  EAX, 1
00000EC1: D1 E0                                                 SHL  EAX, 1
00000EC3: 01 C3                                                 ADD  EBX, EAX
00000EC5: 8B 03                                                 MOV  EAX, [EBX]
00000EC7: BB 04 00 00 00                                        MOV  EBX, 4	; CNTRL
00000ECC: 21 D8                                                 AND  EAX, EBX	; return (_is[c] & CNTRL);
00000ECE: 5D                                                    POP  EBP
00000ECF: C3                                                    RETN
                                                                
                                                                ;isdigit (c) int c; {return (_is[c] & DIGIT );}
                                                                ; /* '0'-'9' */
                                                                
                                                                _isdigit:
00000ED0: 55                                                    PUSH EBP
00000ED1: 89 E5                                                 MOV  EBP, ESP
00000ED3: 8D 5D 08                                              LEA  EBX, [EBP+8]
00000ED6: 8B 03                                                 MOV  EAX, [EBX] ; int c;
00000ED8: BB 76 0C 00 00                                        MOV  EBX, __is
00000EDD: D1 E0                                                 SHL  EAX, 1
00000EDF: D1 E0                                                 SHL  EAX, 1
00000EE1: 01 C3                                                 ADD  EBX, EAX
00000EE3: 8B 03                                                 MOV  EAX, [EBX]
00000EE5: BB 08 00 00 00                                        MOV  EBX, 8	; DIGIT
00000EEA: 21 D8                                                 AND  EAX, EBX	; return (_is[c] & DIGIT);
00000EEC: 5D                                                    POP  EBP
00000EED: C3                                                    RETN
                                                                
                                                                ;isgraph (c) int c; {return (_is[c] & GRAPH);}
                                                                ; /* '!'-'~' */
                                                                
                                                                _isgraph:
00000EEE: 55                                                    PUSH EBP
00000EEF: 89 E5                                                 MOV  EBP, ESP
00000EF1: 8D 5D 08                                              LEA  EBX, [EBP+8]
00000EF4: 8B 03                                                 MOV  EAX, [EBX] ; int c;
00000EF6: BB 76 0C 00 00                                        MOV  EBX, __is
00000EFB: D1 E0                                                 SHL  EAX, 1
00000EFD: D1 E0                                                 SHL  EAX, 1
00000EFF: 01 C3                                                 ADD  EBX, EAX
00000F01: 8B 03                                                 MOV  EAX, [EBX]
00000F03: BB 10 00 00 00                                        MOV  EBX, 16	; GRAPH
00000F08: 21 D8                                                 AND  EAX, EBX	; return (_is[c] & GRAPH);
00000F0A: 5D                                                    POP  EBP
00000F0B: C3                                                    RETN
                                                                
                                                                ;islower (c) int c; {return (_is[c] & LOWER);}
                                                                ; /* 'a'-'z' */
                                                                
                                                                _islower:
00000F0C: 55                                                    PUSH EBP
00000F0D: 89 E5                                                 MOV  EBP, ESP
00000F0F: 8D 5D 08                                              LEA  EBX, [EBP+8]
00000F12: 8B 03                                                 MOV  EAX, [EBX] ; int c;
00000F14: BB 76 0C 00 00                                        MOV  EBX, __is
00000F19: D1 E0                                                 SHL  EAX, 1
00000F1B: D1 E0                                                 SHL  EAX, 1
00000F1D: 01 C3                                                 ADD  EBX, EAX
00000F1F: 8B 03                                                 MOV  EAX, [EBX]
00000F21: BB 20 00 00 00                                        MOV  EBX, 32	; LOWER
00000F26: 21 D8                                                 AND  EAX, EBX	; return (_is[c] & LOWER);
00000F28: 5D                                                    POP  EBP
00000F29: C3                                                    RETN
                                                                
                                                                ;isprint (c) int c; {return (_is[c] & PRINT);}
                                                                ; /* ' '-'~' */
                                                                
                                                                _isprint:
00000F2A: 55                                                    PUSH EBP
00000F2B: 89 E5                                                 MOV  EBP, ESP
00000F2D: 8D 5D 08                                              LEA  EBX, [EBP+8]
00000F30: 8B 03                                                 MOV  EAX, [EBX] ; int c;
00000F32: BB 76 0C 00 00                                        MOV  EBX, __is
00000F37: D1 E0                                                 SHL  EAX, 1
00000F39: D1 E0                                                 SHL  EAX, 1
00000F3B: 01 C3                                                 ADD  EBX, EAX
00000F3D: 8B 03                                                 MOV  EAX, [EBX]
00000F3F: BB 40 00 00 00                                        MOV  EBX, 64	; PRINT
00000F44: 21 D8                                                 AND  EAX, EBX	; return (_is[c] & PRINT);
00000F46: 5D                                                    POP  EBP
00000F47: C3                                                    RETN
                                                                
                                                                ;ispunct (c) int c; {return (_is[c] & PUNCT);}
                                                                ; /* !alnum && !cntrl && !space */
                                                                
                                                                _ispunct:
00000F48: 55                                                    PUSH EBP
00000F49: 89 E5                                                 MOV  EBP, ESP
00000F4B: 8D 5D 08                                              LEA  EBX, [EBP+8]
00000F4E: 8B 03                                                 MOV  EAX, [EBX] ; int c;
00000F50: BB 76 0C 00 00                                        MOV  EBX, __is
00000F55: D1 E0                                                 SHL  EAX, 1
00000F57: D1 E0                                                 SHL  EAX, 1
00000F59: 01 C3                                                 ADD  EBX, EAX
00000F5B: 8B 03                                                 MOV  EAX, [EBX]
00000F5D: BB 80 00 00 00                                        MOV  EBX, 128	; PUNCT
00000F62: 21 D8                                                 AND  EAX, EBX	; return (_is[c] & PUNCT);
00000F64: 5D                                                    POP  EBP
00000F65: C3                                                    RETN
                                                                
                                                                ;isspace (c) int c; {return (_is[c] & BLANK);}
                                                                ; /* HT, LF, VT, FF, CR, ' ' */
                                                                
                                                                _isspace:
00000F66: 55                                                    PUSH EBP
00000F67: 89 E5                                                 MOV  EBP, ESP
00000F69: 8D 5D 08                                              LEA  EBX, [EBP+8]
00000F6C: 8B 03                                                 MOV  EAX, [EBX] ; int c;
00000F6E: BB 76 0C 00 00                                        MOV  EBX, __is
00000F73: D1 E0                                                 SHL  EAX, 1
00000F75: D1 E0                                                 SHL  EAX, 1
00000F77: 01 C3                                                 ADD  EBX, EAX
00000F79: 8B 03                                                 MOV  EAX, [EBX]
00000F7B: BB 00 01 00 00                                        MOV  EBX, 256	; BLANK
00000F80: 21 D8                                                 AND  EAX, EBX	; return (_is[c] & BLANK);
00000F82: 5D                                                    POP  EBP
00000F83: C3                                                    RETN
                                                                
                                                                ;isupper (c) int c; {return (_is[c] & UPPER);}
                                                                ; /* 'A'-'Z' */
                                                                
                                                                _isupper:
00000F84: 55                                                    PUSH EBP
00000F85: 89 E5                                                 MOV  EBP, ESP
00000F87: 8D 5D 08                                              LEA  EBX, [EBP+8]
00000F8A: 8B 03                                                 MOV  EAX, [EBX] ; int c;
00000F8C: BB 76 0C 00 00                                        MOV  EBX, __is
00000F91: D1 E0                                                 SHL  EAX, 1
00000F93: D1 E0                                                 SHL  EAX, 1
00000F95: 01 C3                                                 ADD  EBX, EAX
00000F97: 8B 03                                                 MOV  EAX, [EBX]
00000F99: BB 00 02 00 00                                        MOV  EBX, 512	; UPPER
00000F9E: 21 D8                                                 AND  EAX, EBX	; return (_is[c] & UPPER);
00000FA0: 5D                                                    POP  EBP
00000FA1: C3                                                    RETN
                                                                
                                                                ;isxdigit(c) int c; {return (_is[c] & XDIGIT);}
                                                                ; /* '0'-'9', 'a'-'f', 'A'-'F' */
                                                                
                                                                _isxdigit:
00000FA2: 55                                                    PUSH EBP
00000FA3: 89 E5                                                 MOV  EBP, ESP
00000FA5: 8D 5D 08                                              LEA  EBX, [EBP+8]
00000FA8: 8B 03                                                 MOV  EAX, [EBX] ; int c;
00000FAA: BB 76 0C 00 00                                        MOV  EBX, __is
00000FAF: D1 E0                                                 SHL  EAX, 1
00000FB1: D1 E0                                                 SHL  EAX, 1
00000FB3: 01 C3                                                 ADD  EBX, EAX
00000FB5: 8B 03                                                 MOV  EAX, [EBX]
00000FB7: BB 00 04 00 00                                        MOV  EBX, 1024	; XDIGIT
00000FBC: 21 D8                                                 AND  EAX, EBX	; return (_is[c] & XDIGIT);
00000FBE: 5D                                                    POP  EBP
00000FBF: C3                                                    RETN
                                                                
                                                                _itoa:
00000FC0: 55                                                    PUSH EBP
00000FC1: 89 E5                                                 MOV  EBP, ESP
00000FC3: 83 C4 F8                                              ADD  ESP, -8
00000FC6: 8D 45 F8                                              LEA  EAX, [EBP-8]
00000FC9: 50                                                    PUSH EAX
00000FCA: 8D 45 08                                              LEA  EAX, [EBP+8]
00000FCD: 89 C3                                                 MOV  EBX, EAX
00000FCF: 8B 03                                                 MOV  EAX, [EBX]
00000FD1: 5B                                                    POP  EBX
00000FD2: 89 03                                                 MOV  [EBX], EAX
00000FD4: 8D 45 FC                                              LEA  EAX, [EBP-4]
00000FD7: 50                                                    PUSH EAX
00000FD8: 8D 45 0C                                              LEA  EAX, [EBP+12]
00000FDB: 89 C3                                                 MOV  EBX, EAX
00000FDD: 8B 03                                                 MOV  EAX, [EBX]
00000FDF: 5B                                                    POP  EBX
00000FE0: 89 03                                                 MOV  [EBX], EAX
00000FE2: 09 C0                                                 OR   EAX, EAX
00000FE4: 7C 02                                                 JL   short _lib_151
00000FE6: EB 10                                                 JMP  short _lib_150
                                                                _lib_151:
00000FE8: 8D 45 0C                                              LEA  EAX, [EBP+12]
00000FEB: 50                                                    PUSH EAX
00000FEC: 8D 45 0C                                              LEA  EAX, [EBP+12]
00000FEF: 89 C3                                                 MOV  EBX, EAX
00000FF1: 8B 03                                                 MOV  EAX, [EBX]
00000FF3: F7 D8                                                 NEG EAX
00000FF5: 5B                                                    POP  EBX
00000FF6: 89 03                                                 MOV  [EBX], EAX
                                                                _lib_150:
                                                                _lib_152:
00000FF8: 8D 45 F8                                              LEA  EAX, [EBP-8]
00000FFB: 89 C3                                                 MOV  EBX, EAX
00000FFD: 8B 03                                                 MOV  EAX, [EBX]
00000FFF: 40                                                    INC  EAX
00001000: 89 03                                                 MOV  [EBX], EAX
00001002: 48                                                    DEC  EAX
00001003: 50                                                    PUSH EAX
00001004: 8D 45 0C                                              LEA  EAX, [EBP+12]
00001007: 89 C3                                                 MOV  EBX, EAX
00001009: 8B 03                                                 MOV  EAX, [EBX]
0000100B: 89 C3                                                 MOV  EBX, EAX
0000100D: B8 0A 00 00 00                                        MOV  EAX, 10
00001012: 93                                                    XCHG EAX, EBX
00001013: 99                                                    CDQ
00001014: F7 FB                                                 IDIV EBX
00001016: 89 D0                                                 MOV  EAX, EDX
00001018: BB 30 00 00 00                                        MOV  EBX, 48
0000101D: 01 D8                                                 ADD  EAX, EBX
0000101F: 5B                                                    POP  EBX
00001020: 88 03                                                 MOV  [EBX], AL
00001022: 8D 45 0C                                              LEA  EAX, [EBP+12]
00001025: 50                                                    PUSH EAX
00001026: 8D 45 0C                                              LEA  EAX, [EBP+12]
00001029: 89 C3                                                 MOV  EBX, EAX
0000102B: 8B 03                                                 MOV  EAX, [EBX]
0000102D: 89 C3                                                 MOV  EBX, EAX
0000102F: B8 0A 00 00 00                                        MOV  EAX, 10
00001034: 93                                                    XCHG EAX, EBX
00001035: 99                                                    CDQ
00001036: F7 FB                                                 IDIV EBX
00001038: 5B                                                    POP  EBX
00001039: 89 03                                                 MOV  [EBX], EAX
0000103B: 09 C0                                                 OR   EAX, EAX
0000103D: 7F 02                                                 JG   short _lib_154
0000103F: EB 02                                                 JMP  short _lib_153
                                                                _lib_154:
00001041: EB B5                                                 JMP  short _lib_152
                                                                _lib_153:
00001043: 8D 45 FC                                              LEA  EAX, [EBP-4]
00001046: 89 C3                                                 MOV  EBX, EAX
00001048: 8B 03                                                 MOV  EAX, [EBX]
0000104A: 09 C0                                                 OR   EAX, EAX
0000104C: 7C 02                                                 JL   short _lib_156
0000104E: EB 14                                                 JMP  short _lib_155
                                                                _lib_156:
00001050: 8D 45 F8                                              LEA  EAX, [EBP-8]
00001053: 89 C3                                                 MOV  EBX, EAX
00001055: 8B 03                                                 MOV  EAX, [EBX]
00001057: 40                                                    INC  EAX
00001058: 89 03                                                 MOV  [EBX], EAX
0000105A: 48                                                    DEC  EAX
0000105B: 89 C3                                                 MOV  EBX, EAX
0000105D: B8 2D 00 00 00                                        MOV  EAX, 45
00001062: 88 03                                                 MOV  [EBX], AL
                                                                _lib_155:
00001064: 8D 45 F8                                              LEA  EAX, [EBP-8]
00001067: 89 C3                                                 MOV  EBX, EAX
00001069: 8B 03                                                 MOV  EAX, [EBX]
0000106B: 89 C3                                                 MOV  EBX, EAX
0000106D: 31 C0                                                 XOR  EAX, EAX
0000106F: 88 03                                                 MOV  [EBX], AL
00001071: 8D 45 08                                              LEA  EAX, [EBP+8]
00001074: 89 C3                                                 MOV  EBX, EAX
00001076: 8B 03                                                 MOV  EAX, [EBX]
00001078: 50                                                    PUSH EAX
00001079: B1 01                                                 MOV  CL, 1
0000107B: E8 18 F0 FF FF                                        CALL _reverse
00001080: 83 C4 04                                              ADD  ESP, 4
00001083: 89 EC                                                 MOV  ESP, EBP
00001085: 5D                                                    POP  EBP
00001086: C3                                                    RETN
                                                                
                                                                _itoab:
00001087: 55                                                    PUSH EBP
00001088: 89 E5                                                 MOV  EBP, ESP
0000108A: 83 C4 F8                                              ADD  ESP, -8
0000108D: 8D 45 FC                                              LEA  EAX, [EBP-4]
00001090: 50                                                    PUSH EAX
00001091: 8D 45 0C                                              LEA  EAX, [EBP+12]
00001094: 89 C3                                                 MOV  EBX, EAX
00001096: 8B 03                                                 MOV  EAX, [EBX]
00001098: 5B                                                    POP  EBX
00001099: 89 03                                                 MOV  [EBX], EAX
0000109B: 8D 45 08                                              LEA  EAX, [EBP+8]
0000109E: 50                                                    PUSH EAX
0000109F: 89 C3                                                 MOV  EBX, EAX
000010A1: 8B 03                                                 MOV  EAX, [EBX]
000010A3: 89 C3                                                 MOV  EBX, EAX
000010A5: B8 01 00 00 00                                        MOV  EAX, 1
000010AA: 89 C1                                                 MOV  ECX, EAX
000010AC: 89 D8                                                 MOV  EAX, EBX
000010AE: D3 F8                                                 SAR  EAX, CL
000010B0: 5B                                                    POP  EBX
000010B1: 89 03                                                 MOV  [EBX], EAX
                                                                _lib_158:
000010B3: 8D 45 F8                                              LEA  EAX, [EBP-8]
000010B6: 50                                                    PUSH EAX
000010B7: 8D 45 10                                              LEA  EAX, [EBP+16]
000010BA: 89 C3                                                 MOV  EBX, EAX
000010BC: 8B 03                                                 MOV  EAX, [EBX]
000010BE: 89 C3                                                 MOV  EBX, EAX
000010C0: B8 01 00 00 00                                        MOV  EAX, 1
000010C5: 21 D8                                                 AND  EAX, EBX
000010C7: 5B                                                    POP  EBX
000010C8: 89 03                                                 MOV  [EBX], EAX
000010CA: 8D 45 10                                              LEA  EAX, [EBP+16]
000010CD: 50                                                    PUSH EAX
000010CE: 8D 45 10                                              LEA  EAX, [EBP+16]
000010D1: 89 C3                                                 MOV  EBX, EAX
000010D3: 8B 03                                                 MOV  EAX, [EBX]
000010D5: 89 C3                                                 MOV  EBX, EAX
000010D7: B8 01 00 00 00                                        MOV  EAX, 1
000010DC: 89 C1                                                 MOV  ECX, EAX
000010DE: 89 D8                                                 MOV  EAX, EBX
000010E0: D3 F8                                                 SAR  EAX, CL
000010E2: 89 C3                                                 MOV  EBX, EAX
000010E4: B8 FF 7F 00 00                                        MOV  EAX, 32767
000010E9: 21 D8                                                 AND  EAX, EBX
000010EB: 5B                                                    POP  EBX
000010EC: 89 03                                                 MOV  [EBX], EAX
000010EE: 8D 45 FC                                              LEA  EAX, [EBP-4]
000010F1: 89 C3                                                 MOV  EBX, EAX
000010F3: 8B 03                                                 MOV  EAX, [EBX]
000010F5: 50                                                    PUSH EAX
000010F6: 8D 45 10                                              LEA  EAX, [EBP+16]
000010F9: 89 C3                                                 MOV  EBX, EAX
000010FB: 8B 03                                                 MOV  EAX, [EBX]
000010FD: 50                                                    PUSH EAX
000010FE: 8D 45 08                                              LEA  EAX, [EBP+8]
00001101: 89 C3                                                 MOV  EBX, EAX
00001103: 8B 03                                                 MOV  EAX, [EBX]
00001105: 5B                                                    POP  EBX
00001106: 93                                                    XCHG EAX, EBX
00001107: 99                                                    CDQ
00001108: F7 FB                                                 IDIV EBX
0000110A: 89 D0                                                 MOV  EAX, EDX
0000110C: 89 C3                                                 MOV  EBX, EAX
0000110E: B8 01 00 00 00                                        MOV  EAX, 1
00001113: 89 C1                                                 MOV  ECX, EAX
00001115: 89 D8                                                 MOV  EAX, EBX
00001117: D3 E0                                                 SAL  EAX, CL
00001119: 50                                                    PUSH EAX
0000111A: 8D 45 F8                                              LEA  EAX, [EBP-8]
0000111D: 89 C3                                                 MOV  EBX, EAX
0000111F: 8B 03                                                 MOV  EAX, [EBX]
00001121: 5B                                                    POP  EBX
00001122: 01 D8                                                 ADD  EAX, EBX
00001124: 5B                                                    POP  EBX
00001125: 88 03                                                 MOV  [EBX], AL
00001127: 8D 45 FC                                              LEA  EAX, [EBP-4]
0000112A: 89 C3                                                 MOV  EBX, EAX
0000112C: 8B 03                                                 MOV  EAX, [EBX]
0000112E: 89 C3                                                 MOV  EBX, EAX
00001130: 0F BE 03                                              MOVSX EAX, BYTE [EBX]
00001133: 89 C3                                                 MOV  EBX, EAX
00001135: B8 0A 00 00 00                                        MOV  EAX, 10
0000113A: E8 FA EE FF FF                                        CALL __lt
0000113F: 09 C0                                                 OR   EAX, EAX
00001141: 75 02                                                 JNE  short _lib_161
00001143: EB 19                                                 JMP  short _lib_160
                                                                _lib_161:
00001145: 8D 45 FC                                              LEA  EAX, [EBP-4]
00001148: 89 C3                                                 MOV  EBX, EAX
0000114A: 8B 03                                                 MOV  EAX, [EBX]
0000114C: 50                                                    PUSH EAX
0000114D: 89 C3                                                 MOV  EBX, EAX
0000114F: 0F BE 03                                              MOVSX EAX, BYTE [EBX]
00001152: BB 30 00 00 00                                        MOV  EBX, 48
00001157: 01 D8                                                 ADD  EAX, EBX
00001159: 5B                                                    POP  EBX
0000115A: 88 03                                                 MOV  [EBX], AL
0000115C: EB 17                                                 JMP  short _lib_162
                                                                _lib_160:
0000115E: 8D 45 FC                                              LEA  EAX, [EBP-4]
00001161: 89 C3                                                 MOV  EBX, EAX
00001163: 8B 03                                                 MOV  EAX, [EBX]
00001165: 50                                                    PUSH EAX
00001166: 89 C3                                                 MOV  EBX, EAX
00001168: 0F BE 03                                              MOVSX EAX,BYTE [EBX]
0000116B: BB 37 00 00 00                                        MOV  EBX, 55
00001170: 01 D8                                                 ADD  EAX, EBX
00001172: 5B                                                    POP  EBX
00001173: 88 03                                                 MOV  [EBX], AL
                                                                _lib_162:
00001175: 8D 45 FC                                              LEA  EAX, [EBP-4]
00001178: 89 C3                                                 MOV  EBX, EAX
0000117A: 8B 03                                                 MOV  EAX, [EBX]
0000117C: 40                                                    INC  EAX
0000117D: 89 03                                                 MOV  [EBX], EAX
0000117F: 8D 45 10                                              LEA  EAX, [EBP+16]
00001182: 50                                                    PUSH EAX
00001183: 89 C3                                                 MOV  EBX, EAX
00001185: 8B 03                                                 MOV  EAX, [EBX]
00001187: 50                                                    PUSH EAX
00001188: 8D 45 08                                              LEA  EAX, [EBP+8]
0000118B: 89 C3                                                 MOV  EBX, EAX
0000118D: 8B 03                                                 MOV  EAX, [EBX]
0000118F: 5B                                                    POP  EBX
00001190: 93                                                    XCHG EAX, EBX
00001191: 99                                                    CDQ
00001192: F7 FB                                                 IDIV EBX
00001194: 5B                                                    POP  EBX
00001195: 89 03                                                 MOV  [EBX], EAX
00001197: 09 C0                                                 OR   EAX, EAX
00001199: 75 02                                                 JNE  short _lib_163
0000119B: EB 05                                                 JMP  short _lib_159
                                                                _lib_163:
0000119D: E9 11 FF FF FF                                        JMP  _lib_158
                                                                _lib_159:
000011A2: 8D 45 FC                                              LEA  EAX, [EBP-4]
000011A5: 89 C3                                                 MOV  EBX, EAX
000011A7: 8B 03                                                 MOV  EAX, [EBX]
000011A9: 89 C3                                                 MOV  EBX, EAX
000011AB: 31 C0                                                 XOR  EAX, EAX
000011AD: 88 03                                                 MOV  [EBX], AL
000011AF: 8D 45 0C                                              LEA  EAX, [EBP+12]
000011B2: 89 C3                                                 MOV  EBX, EAX
000011B4: 8B 03                                                 MOV  EAX, [EBX]
000011B6: 50                                                    PUSH EAX
000011B7: B1 01                                                 MOV  CL, 1
000011B9: E8 DA EE FF FF                                        CALL _reverse
000011BE: 83 C4 04                                              ADD  ESP, 4
000011C1: 89 EC                                                 MOV  ESP, EBP
000011C3: 5D                                                    POP  EBP
000011C4: C3                                                    RETN
                                                                
                                                                _itod:
000011C5: 55                                                    PUSH EBP
000011C6: 89 E5                                                 MOV  EBP, ESP
000011C8: 83 C4 FC                                              ADD  ESP, -4
000011CB: 8D 45 10                                              LEA  EAX, [EBP+16]
000011CE: 89 C3                                                 MOV  EBX, EAX
000011D0: 8B 03                                                 MOV  EAX, [EBX]
000011D2: 09 C0                                                 OR   EAX, EAX
000011D4: 7C 02                                                 JL   short _lib_166
000011D6: EB 1E                                                 JMP  short _lib_165
                                                                _lib_166:
000011D8: 8D 45 10                                              LEA  EAX, [EBP+16]
000011DB: 50                                                    PUSH EAX
000011DC: 8D 45 10                                              LEA  EAX, [EBP+16]
000011DF: 89 C3                                                 MOV  EBX, EAX
000011E1: 8B 03                                                 MOV  EAX, [EBX]
000011E3: F7 D8                                                 NEG  EAX
000011E5: 5B                                                    POP  EBX
000011E6: 89 03                                                 MOV  [EBX], EAX
000011E8: 8D 45 FC                                              LEA  EAX, [EBP-4]
000011EB: 89 C3                                                 MOV  EBX, EAX
000011ED: B8 2D 00 00 00                                        MOV  EAX, 45
000011F2: 88 03                                                 MOV  [EBX], AL
000011F4: EB 0C                                                 JMP  short _lib_167
                                                                _lib_165:
000011F6: 8D 45 FC                                              LEA  EAX, [EBP-4]
000011F9: 89 C3                                                 MOV  EBX, EAX
000011FB: B8 20 00 00 00                                        MOV  EAX, 32
00001200: 88 03                                                 MOV  [EBX], AL
                                                                _lib_167:
00001202: 8D 45 08                                              LEA  EAX, [EBP+8]
00001205: 89 C3                                                 MOV  EBX, EAX
00001207: 8B 03                                                 MOV  EAX, [EBX]
00001209: 09 C0                                                 OR   EAX, EAX
0000120B: 7F 02                                                 JG   short _lib_169
0000120D: EB 1D                                                 JMP  short _lib_168
                                                                _lib_169:
0000120F: 8D 45 0C                                              LEA  EAX, [EBP+12]
00001212: 89 C3                                                 MOV  EBX, EAX
00001214: 8B 03                                                 MOV  EAX, [EBX]
00001216: 50                                                    PUSH EAX
00001217: 8D 45 08                                              LEA  EAX, [EBP+8]
0000121A: 89 C3                                                 MOV  EBX, EAX
0000121C: 8B 03                                                 MOV  EAX, [EBX]
0000121E: 48                                                    DEC  EAX
0000121F: 89 03                                                 MOV  [EBX], EAX
00001221: 5B                                                    POP  EBX
00001222: 01 D8                                                 ADD  EAX, EBX
00001224: 89 C3                                                 MOV  EBX, EAX
00001226: 31 C0                                                 XOR  EAX, EAX
00001228: 88 03                                                 MOV  [EBX], AL
0000122A: EB 48                                                 JMP  short _lib_170
                                                                _lib_168:
0000122C: 8D 45 08                                              LEA  EAX, [EBP+8]
0000122F: 89 C3                                                 MOV  EBX, EAX
00001231: 8B 03                                                 MOV  EAX, [EBX]
00001233: 09 C0                                                 OR   EAX, EAX
00001235: 7C 02                                                 JL   short _lib_172
00001237: EB 12                                                 JMP  short _lib_171
                                                                _lib_172:
00001239: 8D 45 08                                              LEA  EAX, [EBP+8]
0000123C: 50                                                    PUSH EAX
0000123D: 8D 45 08                                              LEA  EAX, [EBP+8]
00001240: 89 C3                                                 MOV  EBX, EAX
00001242: 8B 03                                                 MOV  EAX, [EBX]
00001244: F7 D8                                                 NEG  EAX
00001246: 5B                                                    POP  EBX
00001247: 89 03                                                 MOV  [EBX], EAX
00001249: EB 29                                                 JMP  short _lib_173
                                                                _lib_171:
                                                                _lib_174:
0000124B: 8D 45 0C                                              LEA  EAX, [EBP+12]
0000124E: 89 C3                                                 MOV  EBX, EAX
00001250: 8B 03                                                 MOV  EAX, [EBX]
00001252: 50                                                    PUSH EAX
00001253: 8D 45 08                                              LEA  EAX, [EBP+8]
00001256: 89 C3                                                 MOV  EBX, EAX
00001258: 8B 03                                                 MOV  EAX, [EBX]
0000125A: 5B                                                    POP  EBX
0000125B: 01 D8                                                 ADD  EAX, EBX
0000125D: 89 C3                                                 MOV  EBX, EAX
0000125F: 0F BE 03                                              MOVSX EAX, BYTE [EBX]
00001262: 09 C0                                                 OR   EAX, EAX
00001264: 75 02                                                 JNE  short _lib_176
00001266: EB 0C                                                 JMP  short _lib_175
                                                                _lib_176:
00001268: 8D 45 08                                              LEA  EAX, [EBP+8]
0000126B: 89 C3                                                 MOV  EBX, EAX
0000126D: 8B 03                                                 MOV  EAX, [EBX]
0000126F: 40                                                    INC  EAX
00001270: 89 03                                                 MOV  [EBX], EAX
00001272: EB D7                                                 JMP  short _lib_174
                                                                _lib_175:
                                                                _lib_173:
                                                                _lib_170:
                                                                _lib_177:
00001274: 8D 45 08                                              LEA  EAX, [EBP+8]
00001277: 89 C3                                                 MOV  EBX, EAX
00001279: 8B 03                                                 MOV  EAX, [EBX]
0000127B: 09 C0                                                 OR   EAX, EAX
0000127D: 75 02                                                 JNE  short _lib_179
0000127F: EB 57                                                 JMP  short _lib_178
                                                                _lib_179:
00001281: 8D 45 0C                                              LEA  EAX, [EBP+12]
00001284: 89 C3                                                 MOV  EBX, EAX
00001286: 8B 03                                                 MOV  EAX, [EBX]
00001288: 50                                                    PUSH EAX
00001289: 8D 45 08                                              LEA  EAX, [EBP+8]
0000128C: 89 C3                                                 MOV  EBX, EAX
0000128E: 8B 03                                                 MOV  EAX, [EBX]
00001290: 48                                                    DEC  EAX
00001291: 89 03                                                 MOV  [EBX], EAX
00001293: 5B                                                    POP  EBX
00001294: 01 D8                                                 ADD  EAX, EBX
00001296: 50                                                    PUSH EAX
00001297: 8D 45 10                                              LEA  EAX, [EBP+16]
0000129A: 89 C3                                                 MOV  EBX, EAX
0000129C: 8B 03                                                 MOV  EAX, [EBX]
0000129E: 89 C3                                                 MOV  EBX, EAX
000012A0: B8 0A 00 00 00                                        MOV  EAX, 10
000012A5: 93                                                    XCHG EAX, EBX
000012A6: 99                                                    CDQ
000012A7: F7 FB                                                 IDIV EBX
000012A9: 89 D0                                                 MOV  EAX, EDX
000012AB: BB 30 00 00 00                                        MOV  EBX, 48
000012B0: 01 D8                                                 ADD  EAX, EBX
000012B2: 5B                                                    POP  EBX
000012B3: 88 03                                                 MOV  [EBX], AL
000012B5: 8D 45 10                                              LEA  EAX, [EBP+16]
000012B8: 50                                                    PUSH EAX
000012B9: 8D 45 10                                              LEA  EAX, [EBP+16]
000012BC: 89 C3                                                 MOV  EBX, EAX
000012BE: 8B 03                                                 MOV  EAX, [EBX]
000012C0: 89 C3                                                 MOV  EBX, EAX
000012C2: B8 0A 00 00 00                                        MOV  EAX, 10
000012C7: 93                                                    XCHG EAX, EBX
000012C8: 99                                                    CDQ
000012C9: F7 FB                                                 IDIV EBX
000012CB: 5B                                                    POP  EBX
000012CC: 89 03                                                 MOV  [EBX], EAX
000012CE: 09 C0                                                 OR   EAX, EAX
000012D0: 74 02                                                 JE   short _lib_181
000012D2: EB 02                                                 JMP  short _lib_180
                                                                _lib_181:
000012D4: EB 02                                                 JMP  short _lib_178
                                                                _lib_180:
000012D6: EB 9C                                                 JMP  short _lib_177
                                                                _lib_178:
000012D8: 8D 45 08                                              LEA  EAX, [EBP+8]
000012DB: 89 C3                                                 MOV  EBX, EAX
000012DD: 8B 03                                                 MOV  EAX, [EBX]
000012DF: 09 C0                                                 OR   EAX, EAX
000012E1: 75 02                                                 JNE  short _lib_183
000012E3: EB 21                                                 JMP  short _lib_182
                                                                _lib_183:
000012E5: 8D 45 0C                                              LEA  EAX, [EBP+12]
000012E8: 89 C3                                                 MOV  EBX, EAX
000012EA: 8B 03                                                 MOV  EAX, [EBX]
000012EC: 50                                                    PUSH EAX
000012ED: 8D 45 08                                              LEA  EAX, [EBP+8]
000012F0: 89 C3                                                 MOV  EBX, EAX
000012F2: 8B 03                                                 MOV  EAX, [EBX]
000012F4: 48                                                    DEC  EAX
000012F5: 89 03                                                 MOV  [EBX], EAX
000012F7: 5B                                                    POP  EBX
000012F8: 01 D8                                                 ADD  EAX, EBX
000012FA: 50                                                    PUSH EAX
000012FB: 8D 45 FC                                              LEA  EAX, [EBP-4]
000012FE: 89 C3                                                 MOV  EBX, EAX
00001300: 0F BE 03                                              MOVSX EAX,BYTE [EBX]
00001303: 5B                                                    POP  EBX
00001304: 88 03                                                 MOV  [EBX], AL
                                                                _lib_182:
                                                                _lib_184:
00001306: 8D 45 08                                              LEA  EAX, [EBP+8]
00001309: 89 C3                                                 MOV  EBX, EAX
0000130B: 8B 03                                                 MOV  EAX, [EBX]
0000130D: 09 C0                                                 OR   EAX, EAX
0000130F: 7F 02                                                 JG   short _lib_186
00001311: EB 20                                                 JMP  short _lib_185
                                                                _lib_186:
00001313: 8D 45 0C                                              LEA  EAX, [EBP+12]
00001316: 89 C3                                                 MOV  EBX, EAX
00001318: 8B 03                                                 MOV  EAX, [EBX]
0000131A: 50                                                    PUSH EAX
0000131B: 8D 45 08                                              LEA  EAX, [EBP+8]
0000131E: 89 C3                                                 MOV  EBX, EAX
00001320: 8B 03                                                 MOV  EAX, [EBX]
00001322: 48                                                    DEC  EAX
00001323: 89 03                                                 MOV  [EBX], EAX
00001325: 5B                                                    POP  EBX
00001326: 01 D8                                                 ADD  EAX, EBX
00001328: 89 C3                                                 MOV  EBX, EAX
0000132A: B8 20 00 00 00                                        MOV  EAX, 32
0000132F: 88 03                                                 MOV  [EBX], AL
00001331: EB D3                                                 JMP  short _lib_184
                                                                _lib_185:
00001333: 8D 45 0C                                              LEA  EAX, [EBP+12]
00001336: 89 C3                                                 MOV  EBX, EAX
00001338: 8B 03                                                 MOV  EAX, [EBX]
0000133A: 89 EC                                                 MOV  ESP, EBP
0000133C: 5D                                                    POP  EBP
0000133D: C3                                                    RETN
                                                                
                                                                _itoo:
0000133E: 55                                                    PUSH EBP
0000133F: 89 E5                                                 MOV  EBP, ESP
00001341: 83 C4 FC                                              ADD  ESP, -4
00001344: 8D 45 08                                              LEA  EAX, [EBP+8]
00001347: 89 C3                                                 MOV  EBX, EAX
00001349: 8B 03                                                 MOV  EAX, [EBX]
0000134B: 09 C0                                                 OR   EAX, EAX
0000134D: 7F 02                                                 JG   short _lib_189
0000134F: EB 1D                                                 JMP  short _lib_188
                                                                _lib_189:
00001351: 8D 45 0C                                              LEA  EAX, [EBP+12]
00001354: 89 C3                                                 MOV  EBX, EAX
00001356: 8B 03                                                 MOV  EAX, [EBX]
00001358: 50                                                    PUSH EAX
00001359: 8D 45 08                                              LEA  EAX, [EBP+8]
0000135C: 89 C3                                                 MOV  EBX, EAX
0000135E: 8B 03                                                 MOV  EAX, [EBX]
00001360: 48                                                    DEC  EAX
00001361: 89 03                                                 MOV  [EBX], EAX
00001363: 5B                                                    POP  EBX
00001364: 01 D8                                                 ADD  EAX, EBX
00001366: 89 C3                                                 MOV  EBX, EAX
00001368: 31 C0                                                 XOR  EAX, EAX
0000136A: 88 03                                                 MOV  [EBX], AL
0000136C: EB 48                                                 JMP  short _lib_190
                                                                _lib_188:
0000136E: 8D 45 08                                              LEA  EAX, [EBP+8]
00001371: 89 C3                                                 MOV  EBX, EAX
00001373: 8B 03                                                 MOV  EAX, [EBX]
00001375: 09 C0                                                 OR   EAX, EAX
00001377: 7C 02                                                 JL   short _lib_192
00001379: EB 12                                                 JMP  short _lib_191
                                                                _lib_192:
0000137B: 8D 45 08                                              LEA  EAX, [EBP+8]
0000137E: 50                                                    PUSH EAX
0000137F: 8D 45 08                                              LEA  EAX, [EBP+8]
00001382: 89 C3                                                 MOV  EBX, EAX
00001384: 8B 03                                                 MOV  EAX, [EBX]
00001386: F7 D8                                                 NEG EAX
00001388: 5B                                                    POP  EBX
00001389: 89 03                                                 MOV  [EBX], EAX
0000138B: EB 29                                                 JMP  short _lib_193
                                                                _lib_191:
                                                                _lib_194:
0000138D: 8D 45 0C                                              LEA  EAX, [EBP+12]
00001390: 89 C3                                                 MOV  EBX, EAX
00001392: 8B 03                                                 MOV  EAX, [EBX]
00001394: 50                                                    PUSH EAX
00001395: 8D 45 08                                              LEA  EAX, [EBP+8]
00001398: 89 C3                                                 MOV  EBX, EAX
0000139A: 8B 03                                                 MOV  EAX, [EBX]
0000139C: 5B                                                    POP  EBX
0000139D: 01 D8                                                 ADD  EAX, EBX
0000139F: 89 C3                                                 MOV  EBX, EAX
000013A1: 0F BE 03                                              MOVSX EAX, BYTE [EBX]
000013A4: 09 C0                                                 OR   EAX, EAX
000013A6: 75 02                                                 JNE  short _lib_196
000013A8: EB 0C                                                 JMP  short _lib_195
                                                                _lib_196:
000013AA: 8D 45 08                                              LEA  EAX, [EBP+8]
000013AD: 89 C3                                                 MOV  EBX, EAX
000013AF: 8B 03                                                 MOV  EAX, [EBX]
000013B1: 40                                                    INC  EAX
000013B2: 89 03                                                 MOV  [EBX], EAX
000013B4: EB D7                                                 JMP  short _lib_194
                                                                _lib_195:
                                                                _lib_193:
                                                                _lib_190:
                                                                _lib_197:
000013B6: 8D 45 08                                              LEA  EAX, [EBP+8]
000013B9: 89 C3                                                 MOV  EBX, EAX
000013BB: 8B 03                                                 MOV  EAX, [EBX]
000013BD: 09 C0                                                 OR   EAX, EAX
000013BF: 75 02                                                 JNE  short _lib_199
000013C1: EB 73                                                 JMP  short _lib_198
                                                                _lib_199:
000013C3: 8D 45 FC                                              LEA  EAX, [EBP-4]
000013C6: 50                                                    PUSH EAX
000013C7: 8D 45 10                                              LEA  EAX, [EBP+16]
000013CA: 89 C3                                                 MOV  EBX, EAX
000013CC: 8B 03                                                 MOV  EAX, [EBX]
000013CE: 89 C3                                                 MOV  EBX, EAX
000013D0: B8 07 00 00 00                                        MOV  EAX, 7
000013D5: 21 D8                                                 AND  EAX, EBX
000013D7: 5B                                                    POP  EBX
000013D8: 89 03                                                 MOV  [EBX], EAX
000013DA: 8D 45 10                                              LEA  EAX, [EBP+16]
000013DD: 50                                                    PUSH EAX
000013DE: 8D 45 10                                              LEA  EAX, [EBP+16]
000013E1: 89 C3                                                 MOV  EBX, EAX
000013E3: 8B 03                                                 MOV  EAX, [EBX]
000013E5: 89 C3                                                 MOV  EBX, EAX
000013E7: B8 03 00 00 00                                        MOV  EAX, 3
000013EC: 89 C1                                                 MOV  ECX, EAX
000013EE: 89 D8                                                 MOV  EAX, EBX
000013F0: D3 F8                                                 SAR  EAX, CL
000013F2: 89 C3                                                 MOV  EBX, EAX
000013F4: B8 FF 1F 00 00                                        MOV  EAX, 8191
000013F9: 21 D8                                                 AND  EAX, EBX
000013FB: 5B                                                    POP  EBX
000013FC: 89 03                                                 MOV  [EBX], EAX
000013FE: 8D 45 0C                                              LEA  EAX, [EBP+12]
00001401: 89 C3                                                 MOV  EBX, EAX
00001403: 8B 03                                                 MOV  EAX, [EBX]
00001405: 50                                                    PUSH EAX
00001406: 8D 45 08                                              LEA  EAX, [EBP+8]
00001409: 89 C3                                                 MOV  EBX, EAX
0000140B: 8B 03                                                 MOV  EAX, [EBX]
0000140D: 48                                                    DEC  EAX
0000140E: 89 03                                                 MOV  [EBX], EAX
00001410: 5B                                                    POP  EBX
00001411: 01 D8                                                 ADD  EAX, EBX
00001413: 50                                                    PUSH EAX
00001414: 8D 45 FC                                              LEA  EAX, [EBP-4]
00001417: 89 C3                                                 MOV  EBX, EAX
00001419: 8B 03                                                 MOV  EAX, [EBX]
0000141B: BB 30 00 00 00                                        MOV  EBX, 48
00001420: 01 D8                                                 ADD  EAX, EBX
00001422: 5B                                                    POP  EBX
00001423: 88 03                                                 MOV  [EBX], AL
00001425: 8D 45 10                                              LEA  EAX, [EBP+16]
00001428: 89 C3                                                 MOV  EBX, EAX
0000142A: 8B 03                                                 MOV  EAX, [EBX]
0000142C: 09 C0                                                 OR   EAX, EAX
0000142E: 74 02                                                 JE   short _lib_201
00001430: EB 02                                                 JMP  short _lib_200
                                                                _lib_201:
00001432: EB 02                                                 JMP  short _lib_198
                                                                _lib_200:
00001434: EB 80                                                 JMP  short _lib_197
                                                                _lib_198:
                                                                _lib_202:
00001436: 8D 45 08                                              LEA  EAX, [EBP+8]
00001439: 89 C3                                                 MOV  EBX, EAX
0000143B: 8B 03                                                 MOV  EAX, [EBX]
0000143D: 09 C0                                                 OR   EAX, EAX
0000143F: 75 02                                                 JNE  short _lib_204
00001441: EB 20                                                 JMP  short _lib_203
                                                                _lib_204:
00001443: 8D 45 0C                                              LEA  EAX, [EBP+12]
00001446: 89 C3                                                 MOV  EBX, EAX
00001448: 8B 03                                                 MOV  EAX, [EBX]
0000144A: 50                                                    PUSH EAX
0000144B: 8D 45 08                                              LEA  EAX, [EBP+8]
0000144E: 89 C3                                                 MOV  EBX, EAX
00001450: 8B 03                                                 MOV  EAX, [EBX]
00001452: 48                                                    DEC  EAX
00001453: 89 03                                                 MOV  [EBX], EAX
00001455: 5B                                                    POP  EBX
00001456: 01 D8                                                 ADD  EAX, EBX
00001458: 89 C3                                                 MOV  EBX, EAX
0000145A: B8 20 00 00 00                                        MOV  EAX, 32
0000145F: 88 03                                                 MOV  [EBX], AL
00001461: EB D3                                                 JMP  short _lib_202
                                                                _lib_203:
00001463: 8D 45 0C                                              LEA  EAX, [EBP+12]
00001466: 89 C3                                                 MOV  EBX, EAX
00001468: 8B 03                                                 MOV  EAX, [EBX]
0000146A: 89 EC                                                 MOV  ESP, EBP
0000146C: 5D                                                    POP  EBP
0000146D: C3                                                    RETN
                                                                
                                                                _itou:
0000146E: 55                                                    PUSH EBP
0000146F: 89 E5                                                 MOV  EBP, ESP
00001471: 83 C4 FC                                              ADD  ESP, -4
00001474: 8D 45 08                                              LEA  EAX, [EBP+8]
00001477: 89 C3                                                 MOV  EBX, EAX
00001479: 8B 03                                                 MOV  EAX, [EBX]
0000147B: 09 C0                                                 OR   EAX, EAX
0000147D: 7F 02                                                 JG   short _lib_207
0000147F: EB 1D                                                 JMP  short _lib_206
                                                                _lib_207:
00001481: 8D 45 0C                                              LEA  EAX, [EBP+12]
00001484: 89 C3                                                 MOV  EBX, EAX
00001486: 8B 03                                                 MOV  EAX, [EBX]
00001488: 50                                                    PUSH EAX
00001489: 8D 45 08                                              LEA  EAX, [EBP+8]
0000148C: 89 C3                                                 MOV  EBX, EAX
0000148E: 8B 03                                                 MOV  EAX, [EBX]
00001490: 48                                                    DEC  EAX
00001491: 89 03                                                 MOV  [EBX], EAX
00001493: 5B                                                    POP  EBX
00001494: 01 D8                                                 ADD  EAX, EBX
00001496: 89 C3                                                 MOV  EBX, EAX
00001498: 31 C0                                                 XOR  EAX, EAX
0000149A: 88 03                                                 MOV  [EBX], AL
0000149C: EB 48                                                 JMP  short _lib_208
                                                                _lib_206:
0000149E: 8D 45 08                                              LEA  EAX, [EBP+8]
000014A1: 89 C3                                                 MOV  EBX, EAX
000014A3: 8B 03                                                 MOV  EAX, [EBX]
000014A5: 09 C0                                                 OR   EAX, EAX
000014A7: 7C 02                                                 JL _lib_210
000014A9: EB 12                                                 JMP  short _lib_209
                                                                _lib_210:
000014AB: 8D 45 08                                              LEA  EAX, [EBP+8]
000014AE: 50                                                    PUSH EAX
000014AF: 8D 45 08                                              LEA  EAX, [EBP+8]
000014B2: 89 C3                                                 MOV  EBX, EAX
000014B4: 8B 03                                                 MOV  EAX, [EBX]
000014B6: F7 D8                                                 NEG EAX
000014B8: 5B                                                    POP  EBX
000014B9: 89 03                                                 MOV  [EBX], EAX
000014BB: EB 29                                                 JMP  short _lib_211
                                                                _lib_209:
                                                                _lib_212:
000014BD: 8D 45 0C                                              LEA  EAX, [EBP+12]
000014C0: 89 C3                                                 MOV  EBX, EAX
000014C2: 8B 03                                                 MOV  EAX, [EBX]
000014C4: 50                                                    PUSH EAX
000014C5: 8D 45 08                                              LEA  EAX, [EBP+8]
000014C8: 89 C3                                                 MOV  EBX, EAX
000014CA: 8B 03                                                 MOV  EAX, [EBX]
000014CC: 5B                                                    POP  EBX
000014CD: 01 D8                                                 ADD  EAX, EBX
000014CF: 89 C3                                                 MOV  EBX, EAX
000014D1: 0F BE 03                                              MOVSX EAX, BYTE [EBX]
000014D4: 09 C0                                                 OR   EAX, EAX
000014D6: 75 02                                                 JNE  short _lib_214
000014D8: EB 0C                                                 JMP  short _lib_213
                                                                _lib_214:
000014DA: 8D 45 08                                              LEA  EAX, [EBP+8]
000014DD: 89 C3                                                 MOV  EBX, EAX
000014DF: 8B 03                                                 MOV  EAX, [EBX]
000014E1: 40                                                    INC  EAX
000014E2: 89 03                                                 MOV  [EBX], EAX
000014E4: EB D7                                                 JMP  short _lib_212
                                                                _lib_213:
                                                                _lib_211:
                                                                _lib_208:
                                                                _lib_215:
000014E6: 8D 45 08                                              LEA  EAX, [EBP+8]
000014E9: 89 C3                                                 MOV  EBX, EAX
000014EB: 8B 03                                                 MOV  EAX, [EBX]
000014ED: 09 C0                                                 OR   EAX, EAX
000014EF: 75 05                                                 JNE  short _lib_217
000014F1: E9 AD 00 00 00                                        JMP  _lib_216
                                                                _lib_217:
000014F6: 8D 45 FC                                              LEA  EAX, [EBP-4]
000014F9: 50                                                    PUSH EAX
000014FA: 8D 45 10                                              LEA  EAX, [EBP+16]
000014FD: 89 C3                                                 MOV  EBX, EAX
000014FF: 8B 03                                                 MOV  EAX, [EBX]
00001501: 89 C3                                                 MOV  EBX, EAX
00001503: B8 01 00 00 00                                        MOV  EAX, 1
00001508: 21 D8                                                 AND  EAX, EBX
0000150A: 5B                                                    POP  EBX
0000150B: 89 03                                                 MOV  [EBX], EAX
0000150D: 8D 45 10                                              LEA  EAX, [EBP+16]
00001510: 50                                                    PUSH EAX
00001511: 8D 45 10                                              LEA  EAX, [EBP+16]
00001514: 89 C3                                                 MOV  EBX, EAX
00001516: 8B 03                                                 MOV  EAX, [EBX]
00001518: 89 C3                                                 MOV  EBX, EAX
0000151A: B8 01 00 00 00                                        MOV  EAX, 1
0000151F: 89 C1                                                 MOV  ECX, EAX
00001521: 89 D8                                                 MOV  EAX, EBX
00001523: D3 F8                                                 SAR  EAX, CL
00001525: 89 C3                                                 MOV  EBX, EAX
00001527: B8 FF 7F 00 00                                        MOV  EAX, 32767
0000152C: 21 D8                                                 AND  EAX, EBX
0000152E: 5B                                                    POP  EBX
0000152F: 89 03                                                 MOV  [EBX], EAX
00001531: 8D 45 0C                                              LEA  EAX, [EBP+12]
00001534: 89 C3                                                 MOV  EBX, EAX
00001536: 8B 03                                                 MOV  EAX, [EBX]
00001538: 50                                                    PUSH EAX
00001539: 8D 45 08                                              LEA  EAX, [EBP+8]
0000153C: 89 C3                                                 MOV  EBX, EAX
0000153E: 8B 03                                                 MOV  EAX, [EBX]
00001540: 48                                                    DEC  EAX
00001541: 89 03                                                 MOV  [EBX], EAX
00001543: 5B                                                    POP  EBX
00001544: 01 D8                                                 ADD  EAX, EBX
00001546: 50                                                    PUSH EAX
00001547: 8D 45 10                                              LEA  EAX, [EBP+16]
0000154A: 89 C3                                                 MOV  EBX, EAX
0000154C: 8B 03                                                 MOV  EAX, [EBX]
0000154E: 89 C3                                                 MOV  EBX, EAX
00001550: B8 05 00 00 00                                        MOV  EAX, 5
00001555: 93                                                    XCHG EAX, EBX
00001556: 99                                                    CDQ
00001557: F7 FB                                                 IDIV EBX
00001559: 89 D0                                                 MOV  EAX, EDX
0000155B: 89 C3                                                 MOV  EBX, EAX
0000155D: B8 01 00 00 00                                        MOV  EAX, 1
00001562: 89 C1                                                 MOV  ECX, EAX
00001564: 89 D8                                                 MOV  EAX, EBX
00001566: D3 E0                                                 SAL  EAX,CL
00001568: 50                                                    PUSH EAX
00001569: 8D 45 FC                                              LEA  EAX, [EBP-4]
0000156C: 89 C3                                                 MOV  EBX, EAX
0000156E: 8B 03                                                 MOV  EAX, [EBX]
00001570: 5B                                                    POP  EBX
00001571: 01 D8                                                 ADD  EAX, EBX
00001573: BB 30 00 00 00                                        MOV  EBX, 48
00001578: 01 D8                                                 ADD  EAX, EBX
0000157A: 5B                                                    POP  EBX
0000157B: 88 03                                                 MOV  [EBX], AL
0000157D: 8D 45 10                                              LEA  EAX, [EBP+16]
00001580: 50                                                    PUSH EAX
00001581: 8D 45 10                                              LEA  EAX, [EBP+16]
00001584: 89 C3                                                 MOV  EBX, EAX
00001586: 8B 03                                                 MOV  EAX, [EBX]
00001588: 89 C3                                                 MOV  EBX, EAX
0000158A: B8 05 00 00 00                                        MOV  EAX, 5
0000158F: 93                                                    XCHG EAX, EBX
00001590: 99                                                    CDQ
00001591: F7 FB                                                 IDIV EBX
00001593: 5B                                                    POP  EBX
00001594: 89 03                                                 MOV  [EBX], EAX
00001596: 09 C0                                                 OR   EAX, EAX
00001598: 74 02                                                 JE   short _lib_219
0000159A: EB 02                                                 JMP  short _lib_218
                                                                _lib_219:
0000159C: EB 05                                                 JMP  short _lib_216
                                                                _lib_218:
0000159E: E9 43 FF FF FF                                        JMP  _lib_215
                                                                _lib_216:
                                                                _lib_220:
000015A3: 8D 45 08                                              LEA  EAX, [EBP+8]
000015A6: 89 C3                                                 MOV  EBX, EAX
000015A8: 8B 03                                                 MOV  EAX, [EBX]
000015AA: 09 C0                                                 OR   EAX, EAX
000015AC: 75 02                                                 JNE  short _lib_222
000015AE: EB 20                                                 JMP  short _lib_221
                                                                _lib_222:
000015B0: 8D 45 0C                                              LEA  EAX, [EBP+12]
000015B3: 89 C3                                                 MOV  EBX, EAX
000015B5: 8B 03                                                 MOV  EAX, [EBX]
000015B7: 50                                                    PUSH EAX
000015B8: 8D 45 08                                              LEA  EAX, [EBP+8]
000015BB: 89 C3                                                 MOV  EBX, EAX
000015BD: 8B 03                                                 MOV  EAX, [EBX]
000015BF: 48                                                    DEC  EAX
000015C0: 89 03                                                 MOV  [EBX], EAX
000015C2: 5B                                                    POP  EBX
000015C3: 01 D8                                                 ADD  EAX, EBX
000015C5: 89 C3                                                 MOV  EBX, EAX
000015C7: B8 20 00 00 00                                        MOV  EAX, 32
000015CC: 88 03                                                 MOV  [EBX], AL
000015CE: EB D3                                                 JMP  short _lib_220
                                                                _lib_221:
000015D0: 8D 45 0C                                              LEA  EAX, [EBP+12]
000015D3: 89 C3                                                 MOV  EBX, EAX
000015D5: 8B 03                                                 MOV  EAX, [EBX]
000015D7: 89 EC                                                 MOV  ESP, EBP
000015D9: 5D                                                    POP  EBP
000015DA: C3                                                    RETN
                                                                
                                                                _itox:
000015DB: 55                                                    PUSH EBP
000015DC: 89 E5                                                 MOV  EBP, ESP
000015DE: 83 C4 F8                                              ADD  ESP,-8
000015E1: 8D 45 08                                              LEA  EAX, [EBP+8]
000015E4: 89 C3                                                 MOV  EBX, EAX
000015E6: 8B 03                                                 MOV  EAX, [EBX]
000015E8: 09 C0                                                 OR   EAX, EAX
000015EA: 7F 02                                                 JG _lib_225
000015EC: EB 1D                                                 JMP  short _lib_224
                                                                _lib_225:
000015EE: 8D 45 0C                                              LEA  EAX, [EBP+12]
000015F1: 89 C3                                                 MOV  EBX, EAX
000015F3: 8B 03                                                 MOV  EAX, [EBX]
000015F5: 50                                                    PUSH EAX
000015F6: 8D 45 08                                              LEA  EAX, [EBP+8]
000015F9: 89 C3                                                 MOV  EBX, EAX
000015FB: 8B 03                                                 MOV  EAX, [EBX]
000015FD: 48                                                    DEC  EAX
000015FE: 89 03                                                 MOV  [EBX], EAX
00001600: 5B                                                    POP  EBX
00001601: 01 D8                                                 ADD  EAX, EBX
00001603: 89 C3                                                 MOV  EBX, EAX
00001605: 31 C0                                                 XOR  EAX, EAX
00001607: 88 03                                                 MOV  [EBX], AL
00001609: EB 48                                                 JMP  short _lib_226
                                                                _lib_224:
0000160B: 8D 45 08                                              LEA  EAX, [EBP+8]
0000160E: 89 C3                                                 MOV  EBX, EAX
00001610: 8B 03                                                 MOV  EAX, [EBX]
00001612: 09 C0                                                 OR   EAX, EAX
00001614: 7C 02                                                 JL   short _lib_228
00001616: EB 12                                                 JMP  short _lib_227
                                                                _lib_228:
00001618: 8D 45 08                                              LEA  EAX, [EBP+8]
0000161B: 50                                                    PUSH EAX
0000161C: 8D 45 08                                              LEA  EAX, [EBP+8]
0000161F: 89 C3                                                 MOV  EBX, EAX
00001621: 8B 03                                                 MOV  EAX, [EBX]
00001623: F7 D8                                                 NEG EAX
00001625: 5B                                                    POP  EBX
00001626: 89 03                                                 MOV  [EBX], EAX
00001628: EB 29                                                 JMP  short _lib_229
                                                                _lib_227:
                                                                _lib_230:
0000162A: 8D 45 0C                                              LEA  EAX, [EBP+12]
0000162D: 89 C3                                                 MOV  EBX, EAX
0000162F: 8B 03                                                 MOV  EAX, [EBX]
00001631: 50                                                    PUSH EAX
00001632: 8D 45 08                                              LEA  EAX, [EBP+8]
00001635: 89 C3                                                 MOV  EBX, EAX
00001637: 8B 03                                                 MOV  EAX, [EBX]
00001639: 5B                                                    POP  EBX
0000163A: 01 D8                                                 ADD  EAX, EBX
0000163C: 89 C3                                                 MOV  EBX, EAX
0000163E: 0F BE 03                                              MOVSX EAX,BYTE [EBX]
00001641: 09 C0                                                 OR   EAX, EAX
00001643: 75 02                                                 JNE  short _lib_232
00001645: EB 0C                                                 JMP  short _lib_231
                                                                _lib_232:
00001647: 8D 45 08                                              LEA  EAX, [EBP+8]
0000164A: 89 C3                                                 MOV  EBX, EAX
0000164C: 8B 03                                                 MOV  EAX, [EBX]
0000164E: 40                                                    INC  EAX
0000164F: 89 03                                                 MOV  [EBX], EAX
00001651: EB D7                                                 JMP  short _lib_230
                                                                _lib_231:
                                                                _lib_229:
                                                                _lib_226:
                                                                _lib_233:
00001653: 8D 45 08                                              LEA  EAX, [EBP+8]
00001656: 89 C3                                                 MOV  EBX, EAX
00001658: 8B 03                                                 MOV  EAX, [EBX]
0000165A: 09 C0                                                 OR   EAX, EAX
0000165C: 75 05                                                 JNE  short _lib_235
0000165E: E9 A2 00 00 00                                        JMP  _lib_234
                                                                _lib_235:
00001663: 8D 45 FC                                              LEA  EAX, [EBP-4]
00001666: 50                                                    PUSH EAX
00001667: 8D 45 10                                              LEA  EAX, [EBP+16]
0000166A: 89 C3                                                 MOV  EBX, EAX
0000166C: 8B 03                                                 MOV  EAX, [EBX]
0000166E: 89 C3                                                 MOV  EBX, EAX
00001670: B8 0F 00 00 00                                        MOV  EAX, 15
00001675: 21 D8                                                 AND  EAX, EBX
00001677: 5B                                                    POP  EBX
00001678: 89 03                                                 MOV  [EBX], EAX
0000167A: 8D 45 10                                              LEA  EAX, [EBP+16]
0000167D: 50                                                    PUSH EAX
0000167E: 8D 45 10                                              LEA  EAX, [EBP+16]
00001681: 89 C3                                                 MOV  EBX, EAX
00001683: 8B 03                                                 MOV  EAX, [EBX]
00001685: 89 C3                                                 MOV  EBX, EAX
00001687: B8 10 00 00 00                                        MOV  EAX, 16
0000168C: 93                                                    XCHG EAX, EBX
0000168D: 99                                                    CDQ
0000168E: F7 FB                                                 IDIV EBX
00001690: 5B                                                    POP  EBX
00001691: 89 03                                                 MOV  [EBX], EAX
00001693: 8D 45 FC                                              LEA  EAX, [EBP-4]
00001696: 89 C3                                                 MOV  EBX, EAX
00001698: 8B 03                                                 MOV  EAX, [EBX]
0000169A: 89 C3                                                 MOV  EBX, EAX
0000169C: B8 0A 00 00 00                                        MOV  EAX, 10
000016A1: E8 93 E9 FF FF                                        CALL __lt
000016A6: 09 C0                                                 OR   EAX, EAX
000016A8: 75 02                                                 JNE  short _lib_237
000016AA: EB 0E                                                 JMP  short _lib_236
                                                                _lib_237:
000016AC: 8D 45 F8                                              LEA  EAX, [EBP-8]
000016AF: 89 C3                                                 MOV  EBX, EAX
000016B1: B8 30 00 00 00                                        MOV  EAX, 48
000016B6: 89 03                                                 MOV  [EBX], EAX
000016B8: EB 0C                                                 JMP  short _lib_238
                                                                _lib_236:
000016BA: 8D 45 F8                                              LEA  EAX, [EBP-8]
000016BD: 89 C3                                                 MOV  EBX, EAX
000016BF: B8 37 00 00 00                                        MOV  EAX, 55
000016C4: 89 03                                                 MOV  [EBX], EAX
                                                                _lib_238:
000016C6: 8D 45 0C                                              LEA  EAX, [EBP+12]
000016C9: 89 C3                                                 MOV  EBX, EAX
000016CB: 8B 03                                                 MOV  EAX, [EBX]
000016CD: 50                                                    PUSH EAX
000016CE: 8D 45 08                                              LEA  EAX, [EBP+8]
000016D1: 89 C3                                                 MOV  EBX, EAX
000016D3: 8B 03                                                 MOV  EAX, [EBX]
000016D5: 48                                                    DEC  EAX
000016D6: 89 03                                                 MOV  [EBX], EAX
000016D8: 5B                                                    POP  EBX
000016D9: 01 D8                                                 ADD  EAX, EBX
000016DB: 50                                                    PUSH EAX
000016DC: 8D 45 FC                                              LEA  EAX, [EBP-4]
000016DF: 89 C3                                                 MOV  EBX, EAX
000016E1: 8B 03                                                 MOV  EAX, [EBX]
000016E3: 50                                                    PUSH EAX
000016E4: 8D 45 F8                                              LEA  EAX, [EBP-8]
000016E7: 89 C3                                                 MOV  EBX, EAX
000016E9: 8B 03                                                 MOV  EAX, [EBX]
000016EB: 5B                                                    POP  EBX
000016EC: 01 D8                                                 ADD  EAX, EBX
000016EE: 5B                                                    POP  EBX
000016EF: 88 03                                                 MOV  [EBX], AL
000016F1: 8D 45 10                                              LEA  EAX, [EBP+16]
000016F4: 89 C3                                                 MOV  EBX, EAX
000016F6: 8B 03                                                 MOV  EAX, [EBX]
000016F8: 09 C0                                                 OR   EAX, EAX
000016FA: 74 02                                                 JE   short _lib_240
000016FC: EB 02                                                 JMP  short _lib_239
                                                                _lib_240:
000016FE: EB 05                                                 JMP  short _lib_234
                                                                _lib_239:
00001700: E9 4E FF FF FF                                        JMP  _lib_233
                                                                _lib_234:
                                                                _lib_241:
00001705: 8D 45 08                                              LEA  EAX, [EBP+8]
00001708: 89 C3                                                 MOV  EBX, EAX
0000170A: 8B 03                                                 MOV  EAX, [EBX]
0000170C: 09 C0                                                 OR   EAX, EAX
0000170E: 75 02                                                 JNE  short _lib_243
00001710: EB 20                                                 JMP  short _lib_242
                                                                _lib_243:
00001712: 8D 45 0C                                              LEA  EAX, [EBP+12]
00001715: 89 C3                                                 MOV  EBX, EAX
00001717: 8B 03                                                 MOV  EAX, [EBX]
00001719: 50                                                    PUSH EAX
0000171A: 8D 45 08                                              LEA  EAX, [EBP+8]
0000171D: 89 C3                                                 MOV  EBX, EAX
0000171F: 8B 03                                                 MOV  EAX, [EBX]
00001721: 48                                                    DEC  EAX
00001722: 89 03                                                 MOV  [EBX], EAX
00001724: 5B                                                    POP  EBX
00001725: 01 D8                                                 ADD  EAX, EBX
00001727: 89 C3                                                 MOV  EBX, EAX
00001729: B8 20 00 00 00                                        MOV  EAX, 32
0000172E: 88 03                                                 MOV  [EBX], AL
00001730: EB D3                                                 JMP  short _lib_241
                                                                _lib_242:
00001732: 8D 45 0C                                              LEA  EAX, [EBP+12]
00001735: 89 C3                                                 MOV  EBX, EAX
00001737: 8B 03                                                 MOV  EAX, [EBX]
00001739: 89 EC                                                 MOV  ESP, EBP
0000173B: 5D                                                    POP  EBP
0000173C: C3                                                    RETN
                                                                
                                                                ;__iob:
                                                                ;times 3*32 db 0x0
                                                                
                                                                
                                                                  ; MenuetOS implement
                                                                  include "OSFUNC.ASM"
                                                                ; -----------------------------------------------------------
                                                                ; Small C Compiler for TRDOS 386 (v2.0.9 and later)
                                                                ; Erdogan Tan - 2024
                                                                ; Beginning: 05/09/2024
                                                                ; Last Update: 23/09/2024
                                                                ; -----------------------------------------------------------
                                                                ; Derived from 'osfunc.asm' file of KolibriOS SCC source code
                                                                ; 2024
                                                                
                                                                ; 20/08/2024 ; TRDOS 386 v2.0.9
                                                                ; 29/04/2016
                                                                _ver 	equ 0
                                                                _exit 	equ 1
                                                                _fork 	equ 2
                                                                _read 	equ 3
                                                                _write	equ 4
                                                                _open	equ 5
                                                                _close 	equ 6
                                                                _wait 	equ 7
                                                                _creat 	equ 8
                                                                _link 	equ 9
                                                                _unlink	equ 10
                                                                _exec	equ 11
                                                                _chdir	equ 12
                                                                _time 	equ 13
                                                                _mkdir 	equ 14
                                                                _chmod	equ 15
                                                                _chown	equ 16
                                                                _break	equ 17
                                                                _stat	equ 18
                                                                _seek	equ 19
                                                                _tell 	equ 20
                                                                _mount	equ 21
                                                                _umount	equ 22
                                                                _setuid	equ 23
                                                                _getuid	equ 24
                                                                _stime	equ 25
                                                                _quit	equ 26
                                                                _intr	equ 27
                                                                _fstat	equ 28
                                                                _emt 	equ 29
                                                                _mdate 	equ 30
                                                                _video 	equ 31
                                                                _audio	equ 32
                                                                _timer	equ 33
                                                                _sleep	equ 34
                                                                _msg    equ 35
                                                                _geterr	equ 36
                                                                _fpsave	equ 37
                                                                _pri	equ 38
                                                                _rele	equ 39
                                                                _fff	equ 40
                                                                _fnf	equ 41
                                                                _alloc	equ 42
                                                                _dalloc equ 43
                                                                _calbac equ 44
                                                                _dma	equ 45
                                                                _stdio  equ 46
                                                                
                                                                    ; 12/09/2024 ('sys' macro in FASM format)
                                                                
                                                                macro sys op1,op2,op3,op4
                                                                {
                                                                    if op4 eq
                                                                    else
                                                                        mov edx, op4
                                                                    end if
                                                                    if op3 eq
                                                                    else
                                                                        mov ecx, op3
                                                                    end if
                                                                    if op2 eq
                                                                    else
                                                                        mov ebx, op2
                                                                    end if
                                                                    mov eax, op1
                                                                    int 40h
                                                                }
                                                                
                                                                ; -----------------------------
                                                                
                                                                ;
                                                                ; OS function implementation
                                                                ; SmallC for KolibriOS
                                                                ;
                                                                
                                                                init_osfunc:
                                                                ; 05/09/2024 - TRDOS 386 v2.0.9
                                                                ; nothing to do for now
0000173D: C3                                                    retn
                                                                
                                                                ;Main OS functions
                                                                
                                                                _OS_fopen:
                                                                ;Implement "fopen"
                                                                  ;esp+4 - mode
                                                                  ;esp+8 - file name
                                                                
0000173E: 8B 44 24 04                                             mov  eax, [esp+4] ; file open mode
00001742: 8B 5C 24 08                                             mov  ebx, [esp+8] ; file name
                                                                 
00001746: 31 C9                                                   xor  ecx, ecx ; 0 ; open for read
00001748: 80 38 72                                                cmp  byte [eax], 'r'
0000174B: 74 09                                                   je   short open_read
0000174D: 41                                                      inc  ecx ; 1 ; open for write
0000174E: 80 38 77                                                cmp  byte [eax], 'w'
00001751: 74 03                                                   je   short open_write
                                                                  ;bad mode
                                                                file_notfound:
                                                                access_error:
00001753: 31 C0                                                   xor  eax, eax ; 0 ; invalid open mode
00001755: C3                                                      retn
                                                                
                                                                open_read:
                                                                ;Open for read
                                                                open_write:
                                                                ;Open for write
00001756: B8 05 00 00 00 CD 40                                    sys  _open
                                                                  ;jc  short file_notfound ; return 0
0000175D: 73 13                                                   jnc  short open_create_ok ; 18/09/2024
                                                                
                                                                  ; 18/09/2024	
                                                                open_create:
0000175F: 09 C9                                                   or   ecx, ecx
00001761: 74 F0                                                   jz   short file_notfound ; return 0
                                                                  ; ecx = 1 -> open for write
00001763: 83 F8 02                                                cmp  eax, 2 ; file not found ?
00001766: 75 EB                                                   jne  short access_error
00001768: 49                                                      dec  ecx ; ecx = 0 -> ordinary file
                                                                  ; ebx = file name
00001769: B8 08 00 00 00 CD 40                                    sys  _creat	  
00001770: 72 E1                                                   jc   short access_error ; create_err
                                                                
                                                                open_create_ok:
                                                                  ; eax = file handle
                                                                  ; 15/09/2024
00001772: 40                                                      inc  eax ; file handle (1 based)
                                                                .close_ok:
                                                                close_ok: ; 12/09/2024
00001773: C3                                                      retn
                                                                
                                                                _OS_fclose:
                                                                ;Close file
                                                                 ;esp+4 - file handle
                                                                
00001774: 8B 5C 24 04                                             mov  ebx, [esp+4] ; file handle (1 based)
00001778: 4B                                                      dec  ebx ; 0 based
                                                                
00001779: B8 06 00 00 00 CD 40                                    sys  _close
00001780: 73 F1                                                   jnc   short close_ok ; eax = 0
                                                                
                                                                .close_err:
                                                                read_err:  ; 12/09/2024
00001782: B8 FF FF FF FF                                          mov  eax, -1 ; BAD
00001787: C3                                                      retn
                                                                
                                                                _OS_fgetc:
                                                                ;Load char from file
                                                                 ;esp+4 - input file
                                                                
00001788: 8B 44 24 04                                             mov  eax, [esp+4] ; file handle, 1 based
                                                                  ; -1 -> STDIN
0000178C: 40                                                      inc  eax ; -1 -> 0
0000178D: 74 2A                                                   jz   short _OS_getc ; 16/09/2024
                                                                
0000178F: 48                                                      dec  eax ; 1 based
00001790: 48                                                      dec  eax ; 0 based file handle
                                                                
00001791: C6 05 C6 17 00 00 00                                    mov  byte [character], 0
                                                                
00001798: BA 01 00 00 00 B9 C6 17 00 00 89 C3 B8 03 00 00         sys  _read, eax, character, 1
          00 CD 40                                              
000017AB: 72 D5                                                   jc   short read_err
                                                                
000017AD: 21 C0                                                   and 	eax,eax	
000017AF: 75 02                                                   jnz	short _OS_fgetc_ok	
000017B1: 48                                                      dec	eax
                                                                  ; eax = -1 ; EOF	
000017B2: C3                                                      retn
                                                                
                                                                _OS_fgetc_ok:	
000017B3: A0 C6 17 00 00                                          mov  al, [character]
000017B8: C3                                                      retn
                                                                
                                                                _OS_getc:
000017B9: BB 00 00 00 00 B8 2E 00 00 00 CD 40                     sys  _stdio, 0 ; read STDIN (wait keypress)
                                                                  ; eax (al) = character (ascii) code
000017C5: C3                                                      retn
                                                                
000017C6: 00                                                    character: db 0
                                                                
                                                                _OS_fputc:
                                                                ;Save char to file
                                                                 ;esp+4 - output file
                                                                 ;esp+8 - char to write
                                                                
000017C7: 8B 4C 24 08                                             mov  ecx, [esp+8]
000017CB: 88 0D C6 17 00 00                                       mov  [character], cl
                                                                
000017D1: 8B 44 24 04                                             mov  eax, [esp+4] ; file handle, 1 based
                                                                  ; -1 -> STDOUT/STDERR
000017D5: 40                                                      inc  eax ; -1 -> 0
000017D6: 74 1A                                                   jz   short _OS_putc_@ ; 16/09/2024
                                                                  	
000017D8: 48                                                      dec  eax ; 1 based
000017D9: 48                                                      dec  eax ; 0 based file handle
                                                                  
000017DA: BA 01 00 00 00 B9 C6 17 00 00 89 C3 B8 04 00 00         sys  _write, eax, character, 1
          00 CD 40                                              
000017ED: C3                                                      retn
                                                                
                                                                _OS_putc:
                                                                ;Save char to file
                                                                 ;esp+4 - char to write
                                                                
000017EE: 8B 4C 24 04                                             mov  ecx, [esp+4]
                                                                _OS_putc_@:
                                                                  ; cl = character to be written
000017F2: BB 02 00 00 00 B8 2E 00 00 00 CD 40                     sys  _stdio, 2 ; write to STDOUT (display char)
                                                                calloc_ok: ; 13/09/2024
000017FE: C3                                                      retn
                                                                
                                                                _OS_calloc:
                                                                ;Alloc memory
                                                                
                                                                  ; TRDOS 386 v2 feature
                                                                  ; default u.break (bss) address is file size for PRG files
                                                                
                                                                  ; temporary - 23/09/2024
                                                                  ;mov  eax,[ubreak]
                                                                  ;and  eax,eax
                                                                  ;jnz  short ubreak_ready
                                                                
000017FF: BB FF FF FF FF B8 11 00 00 00 CD 40                     sys  _break, -1  ; get u.break address
0000180B: 72 1F                                                   jc   short calloc_err
                                                                
                                                                ubreak_ready:	; temporary - 23/09/2024
                                                                  ; eax = [u.break]
0000180D: 83 C0 03                                                add  eax, 3
00001810: 24 FC                                                   and  al, not 3 ; dword aligned allocation (malloc) address
                                                                
00001812: 50                                                      push eax ; *	
00001813: 8B 44 24 08                                             mov  eax, [esp+8] ; element size (integer=4)
00001817: 8B 5C 24 0C                                             mov  ebx, [esp+12] ; structure/area length (element count)
0000181B: F7 E3                                                   mul  ebx
                                                                  ;;;
                                                                  ; temporary - 23/09/2024
                                                                  ;mov ecx, eax
                                                                  ;mov edi,[esp] 
                                                                  ;;;
0000181D: 03 04 24                                                add  eax, [esp] ; *
                                                                
                                                                  ; new break point - old break point = allocation size
                                                                
                                                                  ; temporary - 23/09/2024
                                                                  ;mov  [ubreak],eax
                                                                  ;;;
                                                                  ; temporary - 23/09/2024
                                                                  ;xor eax, eax
                                                                  ;rep stosb
                                                                  ;;;			
                                                                  ;pop  eax ; *
                                                                  ;retn		
                                                                	
00001820: 89 C3 B8 11 00 00 00 CD 40                              sys  _break, eax ; set new u.break address
00001829: 58                                                      pop  eax ; * ; 13/09/2024
                                                                  ;jc  short .calloc_err
                                                                
                                                                  ; return value
                                                                  ; eax = start/beginning address
                                                                  ;retn
                                                                  ; 13/09/2024
0000182A: 73 D2                                                   jnc	short calloc_ok
                                                                
                                                                calloc_err:
                                                                  ; write "malloc error" message to STDERR
0000182C: BE 53 18 00 00                                          mov  esi, .malloc_err_msg
                                                                .calloc_err_p:
00001831: AC                                                      lodsb
00001832: 08 C0                                                   or   al, al
00001834: 74 10                                                   jz   short .calloc_err_x
00001836: 89 C1 BB 03 00 00 00 B8 2E 00 00 00 CD 40               sys  _stdio, 3, eax
00001844: EB EB                                                   jmp  short .calloc_err_p
                                                                
                                                                .calloc_err_x:
00001846: BB FF FF FF FF B8 01 00 00 00 CD 40                     sys  _exit, -1 
00001852: C3                                                      retn ; normally cpu must not come here !
                                                                
                                                                .malloc_err_msg:
00001853: 0D 0A                                                   db 0Dh, 0Ah
00001855: 07                                                      db 07h  ; beep !
00001856: 4D 65 6D 6F 72 79 20 41 6C 6C 6F 63 61 74 69 6F         db "Memory Allocation Error!"
          6E 20 45 72 72 6F 72 21                               
0000186E: 0D 0A 00                                                db 0Dh, 0Ah, 0
                                                                
                                                                ; temporary - 23/09/2024
                                                                ;ubreak: dd 0
                                                                
                                                                _OS_exit:
00001871: 8B 5C 24 04                                             mov	ebx, [esp+4]  ; exit code ; 13/09/2024
00001875: B8 01 00 00 00 CD 40                                    sys  _exit
0000187C: C3                                                      retn ; normally cpu must not come here !
                                                                
                                                                
                                                                _fopen	equ _OS_fopen
                                                                _fputc	equ _OS_fputc
                                                                _fgetc	equ _OS_fgetc
                                                                _fclose equ _OS_fclos
                                                                
                                                                  ; Main program (compiled from C)
                                                                  include "GETARG.ASM"
                                                                ; -----------------------------------------------------------
                                                                ; Small C Compiler for TRDOS 386 (v2.0.9 and later)
                                                                ; Erdogan Tan - 2024
                                                                ; Beginning: 05/09/2024
                                                                ; Last Update: 14/09/2024
                                                                ; -----------------------------------------------------------
                                                                ; Derived from 'getarg.asm' file of KolibriOS SCC source code
                                                                ; 2024
                                                                
                                                                ; Get command line argument. 
                                                                ; Entry: n    = Number of the argument.
                                                                ;        s    = Destination string pointer.
                                                                ;        size = Size of destination string.
                                                                ;        argc = Argument count from main().
                                                                ;        argv = Argument vector(s) from main().
                                                                ; Returns number of characters moved on success,
                                                                ; else EOF.
                                                                
                                                                _getarg:	; int n; char *s; int size,argc,argv[];
0000187D: 55                                                    PUSH EBP
0000187E: 89 E5                                                 MOV EBP,ESP
00001880: 83 C4 F8                                              ADD ESP,-8	; char *str; int i;
00001883: 8D 45 18                                              LEA EAX,[EBP+24] ; n
00001886: 8B 18                                                 MOV EBX,[EAX]	; if(n<0 | n>=argc)
00001888: 31 C0                                                 XOR EAX,EAX	; 0
0000188A: E8 AA E7 FF FF                                        CALL __lt	; if(n<0
0000188F: 50                                                    PUSH EAX	; 0 (false) or 1 (true)
                                                                ;LEA EBX,[EBP+24]
                                                                ;MOV EAX,[EBX]
                                                                ;PUSH EAX
00001890: 53                                                    PUSH EBX	; n
00001891: 8D 5D 0C                                              LEA EBX,[EBP+12] ; argc
00001894: 8B 03                                                 MOV EAX,[EBX]
00001896: 5B                                                    POP EBX
00001897: E8 B2 E7 FF FF                                        CALL __ge	; | n>=argc)
0000189C: 5B                                                    POP EBX
0000189D: 09 D8                                                 OR EAX,EBX	; (condition 1 or condition 2)
                                                                ;OR EAX,EAX
                                                                ;JNZ short _0_3
0000189F: 74 12                                                 JZ short _0_2	; }
                                                                _0_3:		; {*s=NULL;
000018A1: 8D 45 14                                              LEA EAX,[EBP+20] ; pointer to *s address
000018A4: 8B 18                                                 MOV EBX,[EAX]	; (ebx = address of *s)
000018A6: 31 C0                                                 XOR EAX,EAX	; NULL
000018A8: 88 03                                                 MOV [EBX],AL	; *s=NULL;  ; ([ebx] = s value)
000018AA: B8 FF FF FF FF                                        MOV EAX,-1	; return EOF;
000018AF: 89 EC                                                 MOV ESP,EBP
000018B1: 5D                                                    POP EBP
000018B2: C3                                                    RETN
                                                                _0_2:		; }
000018B3: 8D 5D F8                                              LEA EBX,[EBP-8]
                                                                ;XOR EAX,EAX
                                                                ;eax = 0
000018B6: 89 03                                                 MOV [EBX],EAX	; i=0;
000018B8: 8D 45 FC                                              LEA EAX,[EBP-4]
000018BB: 50                                                    PUSH EAX	; str
000018BC: 8D 5D 08                                              LEA EBX,[EBP+8] ; pointer to argv[]
000018BF: 8B 03                                                 MOV EAX,[EBX]
000018C1: 50                                                    PUSH EAX	; argv[] (address)
000018C2: 8D 5D 18                                              LEA EBX,[EBP+24] ; n
000018C5: 8B 03                                                 MOV EAX,[EBX]
000018C7: 5B                                                    POP EBX
000018C8: D1 E0                                                 SHL EAX,1
000018CA: D1 E0                                                 SHL EAX,1	; n*4
000018CC: 01 C3                                                 ADD EBX,EAX	; argv[0]+4*n
000018CE: 8B 03                                                 MOV EAX,[EBX]	; argv[n]
000018D0: 5B                                                    POP EBX		; str (address)
000018D1: 89 03                                                 MOV [EBX],EAX	; str = argv[n]
                                                                _0_4:		; while(i<size)
000018D3: 8D 5D F8                                              LEA EBX,[EBP-8]
000018D6: 8B 03                                                 MOV EAX,[EBX]
000018D8: 50                                                    PUSH EAX	; i
000018D9: 8D 5D 10                                              LEA EBX,[EBP+16] ; pointer to size
000018DC: 8B 03                                                 MOV EAX,[EBX]
000018DE: 5B                                                    POP EBX
000018DF: E8 55 E7 FF FF                                        CALL __lt	; is i<size ?
000018E4: 09 C0                                                 OR EAX,EAX
000018E6: 74 2E                                                 JZ short _0_5	; false, jump to s[i]=NULL;
                                                                _0_6:		; true, if((s[i]=str[i])==NULL) break;
000018E8: 8D 5D 14                                              LEA EBX,[EBP+20]
000018EB: 8B 03                                                 MOV EAX,[EBX]
000018ED: 50                                                    PUSH EAX	; s (address)
000018EE: 8D 5D F8                                              LEA EBX,[EBP-8]
000018F1: 8B 03                                                 MOV EAX,[EBX]	; i (value)
000018F3: 5B                                                    POP EBX
000018F4: 01 D8                                                 ADD EAX,EBX	; (i offset from start of s)
000018F6: 50                                                    PUSH EAX	; s[i]
000018F7: 8D 5D FC                                              LEA EBX,[EBP-4]	; pointer to of *str address
000018FA: 8B 03                                                 MOV EAX,[EBX]	; str
000018FC: 50                                                    PUSH EAX
000018FD: 8D 5D F8                                              LEA EBX,[EBP-8]
00001900: 8B 03                                                 MOV EAX,[EBX]
00001902: 5B                                                    POP EBX		; str (address)
00001903: 01 C3                                                 ADD EBX,EAX	; (i offset from start of str)
00001905: 0F BE 03                                              MOVSX EAX,BYTE [EBX] ; char str[i]
00001908: 5B                                                    POP EBX		; s[i]
00001909: 88 03                                                 MOV [EBX],AL	; s[i] = str[i]
0000190B: 09 C0                                                 OR EAX,EAX	; if((s[i]=str[i])==NULL
0000190D: 74 07                                                 JZ short _0_5	; break;
                                                                _0_7:		; else, ++i;
0000190F: 8D 5D F8                                              LEA EBX,[EBP-8]
                                                                ;MOV EAX,[EBX]
                                                                ;INC EAX
                                                                ;MOV [EBX],EAX
00001912: FF 03                                                 INC DWORD [EBX] ; ++i
00001914: EB BD                                                 JMP short _0_4  ; jump to while(i<size)
                                                                _0_5:
00001916: 8D 5D 14                                              LEA EBX,[EBP+20]
00001919: 8B 03                                                 MOV EAX,[EBX]
0000191B: 50                                                    PUSH EAX	; s
0000191C: 8D 5D F8                                              LEA EBX,[EBP-8] 
0000191F: 8B 03                                                 MOV EAX,[EBX]	; i
00001921: 5B                                                    POP EBX
00001922: 01 C3                                                 ADD EBX,EAX	; start of s + i = s[i]
                                                                ;PUSH EAX	; i
                                                                ;XOR EAX,EAX	; NULL
                                                                ;MOV [EBX],AL	; s[i]=NULL;
00001924: C6 03 00                                              MOV BYTE [EBX],0
                                                                ;;LEA EBX,[EBP-8]
                                                                ;;MOV EAX,[EBX]
                                                                ;POP EAX	; return i;
00001927: 89 EC                                                 MOV ESP,EBP
00001929: 5D                                                    POP EBP
0000192A: C3                                                    RETN
                                                                
                                                                  include "HELLO.ASM"
                                                                
                                                                _main:
0000192B: 55                                                    PUSH EBP
0000192C: 89 E5                                                 MOV EBP,ESP
0000192E: 83 C4 F0                                              ADD ESP,-16
00001931: 8D 45 FC                                              LEA EAX,[EBP-4]
00001934: 89 C3                                                 MOV EBX,EAX
00001936: B8 FF FF FF FF                                        MOV EAX,-1
0000193B: 89 03                                                 MOV [EBX],EAX
0000193D: 8D 45 F8                                              LEA EAX,[EBP-8]
00001940: 89 C3                                                 MOV EBX,EAX
00001942: 31 C0                                                 XOR EAX,EAX
00001944: 89 03                                                 MOV [EBX],EAX
00001946: 8D 45 F4                                              LEA EAX,[EBP-12]
00001949: 89 C3                                                 MOV EBX,EAX
0000194B: B8 00 00 01 00                                        MOV EAX,65536
00001950: 89 03                                                 MOV [EBX],EAX
00001952: 8D 45 F0                                              LEA EAX,[EBP-16]
00001955: 89 C3                                                 MOV EBX,EAX
00001957: B8 40 42 0F 00                                        MOV EAX,1000000
0000195C: 89 03                                                 MOV [EBX],EAX
0000195E: 8D 45 F8                                              LEA EAX,[EBP-8]
00001961: 50                                                    PUSH EAX
00001962: 8D 45 FC                                              LEA EAX,[EBP-4]
00001965: 89 C3                                                 MOV EBX,EAX
00001967: 8B 03                                                 MOV EAX, [EBX]
00001969: 50                                                    PUSH EAX
0000196A: 8D 45 F4                                              LEA EAX,[EBP-12]
0000196D: 89 C3                                                 MOV EBX,EAX
0000196F: 8B 03                                                 MOV EAX, [EBX]
00001971: 5B                                                    POP EBX
00001972: F7 EB                                                 IMUL EBX
00001974: 5B                                                    POP EBX
00001975: 89 03                                                 MOV [EBX],EAX
00001977: B8 8B 19 00 00                                        MOV EAX,_1+0
0000197C: 50                                                    PUSH EAX
0000197D: B1 01                                                 MOV CL,1
0000197F: E8 99 F2 FF FF                                        CALL _printf
00001984: 83 C4 04                                              ADD ESP,4
00001987: 89 EC                                                 MOV ESP,EBP
00001989: 5D                                                    POP EBP
0000198A: C3                                                    RET
0000198B: 48 65 6C 6C 6F 2C 20 57 6F 72                         _1 DB 72,101,108,108,111,44,32,87,111,114
00001995: 6C 64 21 0A 00                                         DB 108,100,33,10,0
                                                                
                                                                ;E:.
                                                                
                                                                START:
                                                                   ; esp = argc
                                                                   ; esp+4 = argv[0] address
0000199A: 58                                                       pop  eax	; argc (value)
0000199B: 89 E3                                                    mov  ebx,esp	; argv[0] address (not value)
0000199D: 50                                                       push	eax	; argc
0000199E: 53                                                       push	ebx
0000199F: E8 87 FF FF FF                                           call _main
                                                                   ;add esp,8
000019A4: 5B                                                       pop	ebx
                                                                   ;
000019A5: 31 DB                                                    xor  ebx,ebx	; exit code = 0
000019A7: B8 01 00 00 00                                           mov	eax,1	; sysexit
000019AC: CD 40                                                    int  40h
                                                                
000019AE: 00                                                      db 0	
000019AF: 53 6D 61 6C 6C 20 43 20 43 6F 6D 70 69 6C 65 72         db "Small C Compiler v1.0 for TRDOS 386"
          20 76 31 2E 30 20 66 6F 72 20 54 52 44 4F 53 20       
          33 38 36                                              
000019D2: 00                                                      db 0
000019D3: 45 72 64 6F 67 61 6E 20 54 61 6E 20 2D 20 32 30         db "Erdogan Tan - 2024"
          32 34                                                 
000019E5: 00                                                      db 0	
