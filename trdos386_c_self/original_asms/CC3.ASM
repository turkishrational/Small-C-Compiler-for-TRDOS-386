
_constexp:
PUSH EBP
MOV EBP,ESP
ADD ESP,-12
LEA EAX,[EBP-8]
PUSH EAX
LEA EAX,[EBP-12]
PUSH EAX
MOV CL,2
CALL _setstage
ADD ESP,8
LEA EAX,[EBP-4]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _expressi
ADD ESP,8
LEA EAX,[EBP-8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _clearsta
ADD ESP,8
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JE _3
JMP _2
_3:
MOV EAX,_1+0
PUSH EAX
MOV CL,1
CALL _error
ADD ESP,4
_2:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV ESP,EBP
POP EBP
RET
_1 DB 109,117,115,116,32,98,101,32,99,111
 DB 110,115,116,97,110,116,32,101,120,112
 DB 114,101,115,115,105,111,110,0

_null_is:
PUSH EBP
MOV EBP,ESP
ADD ESP,-4
LEA EAX,[EBP-4]
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
_7:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,7
CALL __lt
OR EAX,EAX
JNE _9
JMP _6
_9:
JMP _8
_5:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
INC EAX
MOV [EBX],EAX
JMP _7
_8:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
SHL EAX,1
SHL EAX,1
ADD EAX,EBX
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
JMP _5
_6:
MOV ESP,EBP
POP EBP
RET

_expressi:
PUSH EBP
MOV EBP,ESP
ADD ESP,-32
LEA EAX,[EBP-32]
PUSH EAX
MOV CL,1
CALL _null_is
ADD ESP,4
LEA EAX,[EBP-32]
PUSH EAX
MOV CL,1
CALL _level1
ADD ESP,4
OR EAX,EAX
JNE _12
JMP _11
_12:
LEA EAX,[EBP-32]
PUSH EAX
MOV CL,1
CALL _fetch
ADD ESP,4
_11:
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-32]
MOV EBX,12
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-32]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
MOV ESP,EBP
POP EBP
RET

_test:
PUSH EBP
MOV EBP,ESP
ADD ESP,-36
LEA EAX,[EBP-28]
PUSH EAX
MOV CL,1
CALL _null_is
ADD ESP,4
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _15
JMP _14
_15:
MOV EAX,_13+0
PUSH EAX
MOV CL,1
CALL _need
ADD ESP,4
_14:
_16:
LEA EAX,[EBP-32]
PUSH EAX
LEA EAX,[EBP-36]
PUSH EAX
MOV CL,2
CALL _setstage
ADD ESP,8
LEA EAX,[EBP-28]
PUSH EAX
MOV CL,1
CALL _level1
ADD ESP,4
OR EAX,EAX
JNE _19
JMP _18
_19:
LEA EAX,[EBP-28]
PUSH EAX
MOV CL,1
CALL _fetch
ADD ESP,4
_18:
MOV EAX,_13+2
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _21
JMP _20
_21:
LEA EAX,[EBP-32]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-36]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _clearsta
ADD ESP,8
JMP _22
_20:
JMP _17
_22:
JMP _16
_17:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _24
JMP _23
_24:
MOV EAX,_13+4
PUSH EAX
MOV CL,1
CALL _need
ADD ESP,4
_23:
LEA EAX,[EBP-28]
MOV EBX,12
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _26
JMP _25
_26:
LEA EAX,[EBP-32]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _clearsta
ADD ESP,8
LEA EAX,[EBP-28]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _28
JMP _27
_28:
MOV ESP,EBP
POP EBP
RET
_27:
MOV EAX,40
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
MOV ESP,EBP
POP EBP
RET
_25:
LEA EAX,[EBP-28]
MOV EBX,24
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _30
JMP _29
_30:
LEA EAX,[EBP-28]
MOV EBX,20
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
JMP _33
_34:
_35:
MOV EAX,19
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-28]
PUSH EAX
MOV CL,3
CALL _zerojump
ADD ESP,12
JMP _32
_36:
_37:
MOV EAX,54
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-28]
PUSH EAX
MOV CL,3
CALL _zerojump
ADD ESP,12
JMP _32
_38:
MOV EAX,34
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-28]
PUSH EAX
MOV CL,3
CALL _zerojump
ADD ESP,12
JMP _32
_39:
MOV EAX,21
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-28]
PUSH EAX
MOV CL,3
CALL _zerojump
ADD ESP,12
JMP _32
_40:
LEA EAX,[EBP-28]
MOV EBX,24
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _clearsta
ADD ESP,8
JMP _32
_41:
MOV EAX,46
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-28]
PUSH EAX
MOV CL,3
CALL _zerojump
ADD ESP,12
JMP _32
_42:
MOV EAX,40
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-28]
PUSH EAX
MOV CL,3
CALL _zerojump
ADD ESP,12
JMP _32
_43:
MOV EAX,42
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-28]
PUSH EAX
MOV CL,3
CALL _zerojump
ADD ESP,12
JMP _32
_44:
MOV EAX,54
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
JMP _32
JMP _32
_33:
CALL __switch
 DD _34
 DD 20
 DD _35
 DD 44
 DD _36
 DD 55
 DD _37
 DD 36
 DD _38
 DD 35
 DD _39
 DD 22
 DD _40
 DD 23
 DD _41
 DD 47
 DD _42
 DD 48
 DD _43
 DD 43
 DD 0
JMP _44
_32:
JMP _45
_29:
MOV EAX,54
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
_45:
LEA EAX,[EBP-32]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-36]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _clearsta
ADD ESP,8
MOV ESP,EBP
POP EBP
RET
_13 DB 40,0,44,0,41,0

_zerojump:
PUSH EBP
MOV EBP,ESP
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,24
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _clearsta
ADD ESP,8
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
POP EBP
RET

_level1:
PUSH EBP
MOV EBP,ESP
ADD ESP,-48
LEA EAX,[EBP-32]
PUSH EAX
MOV CL,1
CALL _null_is
ADD ESP,4
LEA EAX,[EBP-40]
PUSH EAX
MOV CL,1
CALL _null_is
ADD ESP,4
LEA EAX,[EBP-4]
PUSH EAX
MOV EAX,_level2
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _down1
ADD ESP,8
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,12
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _49
JMP _48
_49:
MOV EAX,108
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
_48:
MOV EAX,_47+0
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _51
JMP _50
_51:
LEA EAX,[EBP-44]
PUSH EAX
LEA EAX,[EBP-48]
MOV EBX,EAX
MOV EAX,57
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
JMP _52
_50:
MOV EAX,_47+3
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _54
JMP _53
_54:
LEA EAX,[EBP-44]
PUSH EAX
LEA EAX,[EBP-48]
MOV EBX,EAX
MOV EAX,73
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
JMP _55
_53:
MOV EAX,_47+6
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _57
JMP _56
_57:
LEA EAX,[EBP-44]
PUSH EAX
LEA EAX,[EBP-48]
MOV EBX,EAX
MOV EAX,3
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
JMP _58
_56:
MOV EAX,_47+9
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _60
JMP _59
_60:
LEA EAX,[EBP-44]
PUSH EAX
LEA EAX,[EBP-48]
MOV EBX,EAX
MOV EAX,1
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
JMP _61
_59:
MOV EAX,_47+12
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _63
JMP _62
_63:
LEA EAX,[EBP-44]
PUSH EAX
LEA EAX,[EBP-48]
MOV EBX,EAX
MOV EAX,69
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
JMP _64
_62:
MOV EAX,_47+15
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _66
JMP _65
_66:
LEA EAX,[EBP-44]
MOV EBX,EAX
MOV EAX,52
MOV [EBX],EAX
LEA EAX,[EBP-48]
MOV EBX,EAX
MOV EAX,53
MOV [EBX],EAX
JMP _67
_65:
MOV EAX,_47+18
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _69
JMP _68
_69:
LEA EAX,[EBP-44]
MOV EBX,EAX
MOV EAX,16
MOV [EBX],EAX
LEA EAX,[EBP-48]
MOV EBX,EAX
MOV EAX,17
MOV [EBX],EAX
JMP _70
_68:
MOV EAX,_47+21
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _72
JMP _71
_72:
LEA EAX,[EBP-44]
MOV EBX,EAX
MOV EAX,49
MOV [EBX],EAX
LEA EAX,[EBP-48]
MOV EBX,EAX
MOV EAX,50
MOV [EBX],EAX
JMP _73
_71:
MOV EAX,_47+24
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _75
JMP _74
_75:
LEA EAX,[EBP-44]
PUSH EAX
LEA EAX,[EBP-48]
MOV EBX,EAX
MOV EAX,7
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
JMP _76
_74:
MOV EAX,_47+28
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _78
JMP _77
_78:
LEA EAX,[EBP-44]
PUSH EAX
LEA EAX,[EBP-48]
MOV EBX,EAX
MOV EAX,6
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
JMP _79
_77:
MOV EAX,_47+32
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _81
JMP _80
_81:
LEA EAX,[EBP-44]
PUSH EAX
LEA EAX,[EBP-48]
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
JMP _82
_80:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV ESP,EBP
POP EBP
RET
_82:
_79:
_76:
_73:
_70:
_67:
_64:
_61:
_58:
_55:
_52:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JE _84
JMP _83
_84:
XOR CL,CL
CALL _needlval
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_83:
LEA EAX,[EBP-40]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP-40]
MOV EBX,4
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _86
JMP _85
_86:
LEA EAX,[EBP-44]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _88
JMP _87
_88:
MOV EAX,60
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _fetch
ADD ESP,4
_87:
LEA EAX,[EBP-44]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-48]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV EAX,_level1
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-32]
PUSH EAX
MOV CL,5
CALL _down2
ADD ESP,20
LEA EAX,[EBP-44]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _90
JMP _89
_90:
MOV EAX,59
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
_89:
JMP _91
_85:
LEA EAX,[EBP-44]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _93
JMP _92
_93:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _fetch
ADD ESP,4
LEA EAX,[EBP-44]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-48]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV EAX,_level1
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-32]
PUSH EAX
MOV CL,5
CALL _down2
ADD ESP,20
JMP _94
_92:
LEA EAX,[EBP-32]
PUSH EAX
MOV CL,1
CALL _level1
ADD ESP,4
OR EAX,EAX
JNE _96
JMP _95
_96:
LEA EAX,[EBP-32]
PUSH EAX
MOV CL,1
CALL _fetch
ADD ESP,4
_95:
_94:
_91:
LEA EAX,[EBP-40]
PUSH EAX
MOV CL,1
CALL _store
ADD ESP,4
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_47 DB 124,61,0,94,61,0,38,61,0,43
 DB 61,0,45,61,0,42,61,0,47,61
 DB 0,37,61,0,62,62,61,0,60,60
 DB 61,0,61,0

_level2:
PUSH EBP
MOV EBP,ESP
ADD ESP,-76
LEA EAX,[EBP-28]
PUSH EAX
MOV CL,1
CALL _null_is
ADD ESP,4
LEA EAX,[EBP-56]
PUSH EAX
MOV CL,1
CALL _null_is
ADD ESP,4
LEA EAX,[EBP-60]
PUSH EAX
MOV EAX,_level3
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _down1
ADD ESP,8
POP EBX
MOV [EBX],EAX
MOV EAX,_97+0
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JE _99
JMP _98
_99:
LEA EAX,[EBP-60]
MOV EBX,EAX
MOV EAX, [EBX]
MOV ESP,EBP
POP EBP
RET
_98:
LEA EAX,[EBP-60]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV EAX,54
PUSH EAX
LEA EAX,[EBP-64]
PUSH EAX
XOR CL,CL
CALL _getlabel
POP EBX
MOV [EBX],EAX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,4
CALL _dropout
ADD ESP,16
MOV EAX,_level2
PUSH EAX
LEA EAX,[EBP-28]
PUSH EAX
MOV CL,2
CALL _down1
ADD ESP,8
OR EAX,EAX
JNE _101
JMP _100
_101:
LEA EAX,[EBP-28]
PUSH EAX
MOV CL,1
CALL _fetch
ADD ESP,4
JMP _102
_100:
LEA EAX,[EBP-28]
MOV EBX,12
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _104
JMP _103
_104:
MOV EAX,108
PUSH EAX
LEA EAX,[EBP-28]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
_103:
_102:
MOV EAX,_97+2
PUSH EAX
MOV CL,1
CALL _need
ADD ESP,4
MOV EAX,40
PUSH EAX
LEA EAX,[EBP-68]
PUSH EAX
XOR CL,CL
CALL _getlabel
POP EBX
MOV [EBX],EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
MOV EAX,41
PUSH EAX
LEA EAX,[EBP-64]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
MOV EAX,_level2
PUSH EAX
LEA EAX,[EBP-56]
PUSH EAX
MOV CL,2
CALL _down1
ADD ESP,8
OR EAX,EAX
JNE _106
JMP _105
_106:
LEA EAX,[EBP-56]
PUSH EAX
MOV CL,1
CALL _fetch
ADD ESP,4
JMP _107
_105:
LEA EAX,[EBP-56]
MOV EBX,12
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _109
JMP _108
_109:
MOV EAX,108
PUSH EAX
LEA EAX,[EBP-56]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
_108:
_107:
MOV EAX,41
PUSH EAX
LEA EAX,[EBP-68]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,12
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP-28]
MOV EBX,12
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _113
JMP _111
_113:
LEA EAX,[EBP-56]
MOV EBX,12
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _114
JMP _111
_114:
MOV EAX,1
JMP _112
_111:
XOR EAX,EAX
_112:
OR EAX,EAX
JNE _115
JMP _110
_115:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,24
ADD EAX,EBX
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
JMP _116
_110:
LEA EAX,[EBP-56]
MOV EBX,12
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _118
JMP _117
_118:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP-28]
MOV EBX,8
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP-28]
MOV EBX,4
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,24
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP-28]
MOV EBX,24
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
JMP _119
_117:
LEA EAX,[EBP-28]
MOV EBX,12
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JE _123
JMP _121
_123:
LEA EAX,[EBP-28]
MOV EBX,8
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-56]
MOV EBX,8
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
CALL __eq
OR EAX,EAX
JE _124
JMP _121
_124:
XOR EAX,EAX
JMP _122
_121:
MOV EAX,1
_122:
OR EAX,EAX
JNE _125
JMP _120
_125:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP-56]
MOV EBX,8
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP-56]
MOV EBX,4
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,24
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP-56]
MOV EBX,24
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
JMP _126
_120:
MOV EAX,_97+4
PUSH EAX
MOV CL,1
CALL _error
ADD ESP,4
_126:
_119:
_116:
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_97 DB 63,0,58,0,109,105,115,109,97,116
 DB 99,104,101,100,32,101,120,112,114,101
 DB 115,115,105,111,110,115,0

_level3:
PUSH EBP
MOV EBP,ESP
MOV EAX,_127+0
PUSH EAX
MOV EAX,19
PUSH EAX
MOV EAX,1
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV EAX,_level4
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,6
CALL _skim
ADD ESP,24
POP EBP
RET
_127 DB 124,124,0

_level4:
PUSH EBP
MOV EBP,ESP
MOV EAX,_128+0
PUSH EAX
MOV EAX,54
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV EAX,1
PUSH EAX
MOV EAX,_level5
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,6
CALL _skim
ADD ESP,24
POP EBP
RET
_128 DB 38,38,0

_level5:
PUSH EBP
MOV EBP,ESP
MOV EAX,_129+0
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV EAX,_level6
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,4
CALL _down
ADD ESP,16
POP EBP
RET
_129 DB 124,0

_level6:
PUSH EBP
MOV EBP,ESP
MOV EAX,_130+0
PUSH EAX
MOV EAX,1
PUSH EAX
MOV EAX,_level7
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,4
CALL _down
ADD ESP,16
POP EBP
RET
_130 DB 94,0

_level7:
PUSH EBP
MOV EBP,ESP
MOV EAX,_131+0
PUSH EAX
MOV EAX,2
PUSH EAX
MOV EAX,_level8
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,4
CALL _down
ADD ESP,16
POP EBP
RET
_131 DB 38,0

_level8:
PUSH EBP
MOV EBP,ESP
MOV EAX,_132+0
PUSH EAX
MOV EAX,3
PUSH EAX
MOV EAX,_level9
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,4
CALL _down
ADD ESP,16
POP EBP
RET
_132 DB 61,61,32,33,61,0

_level9:
PUSH EBP
MOV EBP,ESP
MOV EAX,_133+0
PUSH EAX
MOV EAX,5
PUSH EAX
MOV EAX,_level10
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,4
CALL _down
ADD ESP,16
POP EBP
RET
_133 DB 60,61,32,62,61,32,60,32,62,0

_level10:
PUSH EBP
MOV EBP,ESP
MOV EAX,_134+0
PUSH EAX
MOV EAX,9
PUSH EAX
MOV EAX,_level11
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,4
CALL _down
ADD ESP,16
POP EBP
RET
_134 DB 62,62,32,60,60,0

_level11:
PUSH EBP
MOV EBP,ESP
MOV EAX,_135+0
PUSH EAX
MOV EAX,11
PUSH EAX
MOV EAX,_level12
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,4
CALL _down
ADD ESP,16
POP EBP
RET
_135 DB 43,32,45,0

_level12:
PUSH EBP
MOV EBP,ESP
MOV EAX,_136+0
PUSH EAX
MOV EAX,13
PUSH EAX
MOV EAX,_level13
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,4
CALL _down
ADD ESP,16
POP EBP
RET
_136 DB 42,32,47,32,37,0

_level13:
PUSH EBP
MOV EBP,ESP
ADD ESP,-8
MOV EAX,_137+0
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _139
JMP _138
_139:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _level13
ADD ESP,4
OR EAX,EAX
JE _141
JMP _140
_141:
XOR CL,CL
CALL _needlval
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_140:
MOV EAX,68
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,3
CALL _step
ADD ESP,12
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_138:
MOV EAX,_137+3
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _144
JMP _143
_144:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _level13
ADD ESP,4
OR EAX,EAX
JE _146
JMP _145
_146:
XOR CL,CL
CALL _needlval
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_145:
MOV EAX,65
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,3
CALL _step
ADD ESP,12
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_143:
MOV EAX,_137+6
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _149
JMP _148
_149:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _level13
ADD ESP,4
OR EAX,EAX
JNE _151
JMP _150
_151:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _fetch
ADD ESP,4
_150:
MOV EAX,13
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
NOT EAX
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,24
ADD EAX,EBX
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
MOV ESP,EBP
POP EBP
RET
_148:
MOV EAX,_137+8
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _154
JMP _153
_154:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _level13
ADD ESP,4
OR EAX,EAX
JNE _156
JMP _155
_156:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _fetch
ADD ESP,4
_155:
MOV EAX,45
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
CALL __lneg
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,24
ADD EAX,EBX
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
MOV ESP,EBP
POP EBP
RET
_153:
MOV EAX,_137+10
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _159
JMP _158
_159:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _level13
ADD ESP,4
OR EAX,EAX
JNE _161
JMP _160
_161:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _fetch
ADD ESP,4
_160:
MOV EAX,4
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
NEG EAX
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,24
ADD EAX,EBX
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
MOV ESP,EBP
POP EBP
RET
_158:
MOV EAX,_137+12
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _164
JMP _163
_164:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _level13
ADD ESP,4
OR EAX,EAX
JNE _166
JMP _165
_166:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _fetch
ADD ESP,4
_165:
LEA EAX,[EBP-8]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
OR EAX,EAX
JNE _168
JMP _167
_168:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP-8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,1
ADD EAX,EBX
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
POP EBX
MOV [EBX],EAX
JMP _169
_167:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
MOV EBX,EAX
MOV EAX,16
MOV [EBX],EAX
_169:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,24
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,12
ADD EAX,EBX
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX,1
MOV [EBX],EAX
MOV EAX,1
MOV ESP,EBP
POP EBP
RET
_163:
MOV EAX,_137+14
PUSH EAX
MOV EAX,6
PUSH EAX
MOV CL,2
CALL _amatch
ADD ESP,8
OR EAX,EAX
JNE _172
JMP _171
_172:
ADD ESP,-24
MOV EAX,_137+21
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _174
JMP _173
_174:
LEA EAX,[EBP-16]
MOV EBX,EAX
MOV EAX,1
MOV [EBX],EAX
JMP _175
_173:
LEA EAX,[EBP-16]
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
_175:
LEA EAX,[EBP-12]
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
MOV EAX,_137+23
PUSH EAX
MOV EAX,8
PUSH EAX
MOV CL,2
CALL _amatch
ADD ESP,8
OR EAX,EAX
JNE _177
JMP _176
_177:
LEA EAX,[EBP-12]
MOV EBX,EAX
MOV EAX,4
MOV [EBX],EAX
_176:
MOV EAX,_137+32
PUSH EAX
MOV EAX,3
PUSH EAX
MOV CL,2
CALL _amatch
ADD ESP,8
OR EAX,EAX
JNE _179
JMP _178
_179:
LEA EAX,[EBP-12]
MOV EBX,EAX
MOV EAX,4
MOV [EBX],EAX
JMP _180
_178:
MOV EAX,_137+36
PUSH EAX
MOV EAX,4
PUSH EAX
MOV CL,2
CALL _amatch
ADD ESP,8
OR EAX,EAX
JNE _182
JMP _181
_182:
LEA EAX,[EBP-12]
MOV EBX,EAX
MOV EAX,1
MOV [EBX],EAX
_181:
_180:
LEA EAX,[EBP-12]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _184
JMP _183
_184:
MOV EAX,_137+41
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _186
JMP _185
_186:
LEA EAX,[EBP-12]
MOV EBX,EAX
MOV EAX,4
MOV [EBX],EAX
_185:
JMP _187
_183:
LEA EAX,[EBP-32]
PUSH EAX
MOV CL,1
CALL _symname
ADD ESP,4
OR EAX,EAX
JNE _193
JMP _189
_193:
LEA EAX,[EBP-20]
PUSH EAX
LEA EAX,[EBP-32]
PUSH EAX
MOV CL,1
CALL _findloc
ADD ESP,4
POP EBX
MOV [EBX],EAX
OR EAX,EAX
JE _194
JMP _190
_194:
LEA EAX,[EBP-20]
PUSH EAX
LEA EAX,[EBP-32]
PUSH EAX
MOV CL,1
CALL _findglb
ADD ESP,4
POP EBX
MOV [EBX],EAX
OR EAX,EAX
JE _195
JMP _190
_195:
XOR EAX,EAX
JMP _191
_190:
MOV EAX,1
_191:
OR EAX,EAX
JNE _196
JMP _189
_196:
LEA EAX,[EBP-20]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
MOV EBX,EAX
MOV EAX,4
CALL __ne
OR EAX,EAX
JNE _197
JMP _189
_197:
LEA EAX,[EBP-20]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
MOV EBX,EAX
XOR EAX,EAX
CALL __ne
OR EAX,EAX
JNE _198
JMP _189
_198:
MOV EAX,1
JMP _192
_189:
XOR EAX,EAX
_192:
OR EAX,EAX
JNE _199
JMP _188
_199:
LEA EAX,[EBP-12]
PUSH EAX
LEA EAX,[EBP-20]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,3
ADD EAX,EBX
PUSH EAX
MOV EAX,4
PUSH EAX
MOV CL,2
CALL _getint
ADD ESP,8
POP EBX
MOV [EBX],EAX
JMP _200
_188:
LEA EAX,[EBP-12]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JE _202
JMP _201
_202:
MOV EAX,_137+43
PUSH EAX
MOV CL,1
CALL _error
ADD ESP,4
_201:
_200:
_187:
LEA EAX,[EBP-16]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _204
JMP _203
_204:
MOV EAX,_137+66
PUSH EAX
MOV CL,1
CALL _need
ADD ESP,4
_203:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,12
ADD EAX,EBX
MOV EBX,EAX
MOV EAX,16
MOV [EBX],EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP-12]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_171:
MOV EAX,_137+68
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _207
JMP _206
_207:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _level13
ADD ESP,4
OR EAX,EAX
JE _209
JMP _208
_209:
MOV EAX,_137+70
PUSH EAX
MOV CL,1
CALL _error
ADD ESP,4
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_208:
LEA EAX,[EBP-8]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP-8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,1
ADD EAX,EBX
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _211
JMP _210
_211:
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_210:
MOV EAX,25
PUSH EAX
LEA EAX,[EBP-8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP-8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,1
ADD EAX,EBX
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
POP EBX
MOV [EBX],EAX
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_206:
LEA EAX,[EBP-4]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _level14
ADD ESP,4
POP EBX
MOV [EBX],EAX
MOV EAX,_137+86
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _214
JMP _213
_214:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JE _216
JMP _215
_216:
XOR CL,CL
CALL _needlval
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_215:
MOV EAX,68
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV EAX,65
PUSH EAX
MOV CL,3
CALL _step
ADD ESP,12
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_213:
MOV EAX,_137+89
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _219
JMP _218
_219:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JE _221
JMP _220
_221:
XOR CL,CL
CALL _needlval
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_220:
MOV EAX,65
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV EAX,68
PUSH EAX
MOV CL,3
CALL _step
ADD ESP,12
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_218:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV ESP,EBP
POP EBP
RET
_222:
_217:
_212:
_205:
_170:
_162:
_157:
_152:
_147:
_142:
MOV ESP,EBP
POP EBP
RET
_137 DB 43,43,0,45,45,0,126,0,33,0
 DB 45,0,42,0,115,105,122,101,111,102
 DB 0,40,0,117,110,115,105,103,110,101
 DB 100,0,105,110,116,0,99,104,97,114
 DB 0,42,0,109,117,115,116,32,98,101
 DB 32,111,98,106,101,99,116,32,111,114
 DB 32,116,121,112,101,0,41,0,38,0
 DB 105,108,108,101,103,97,108,32,97,100
 DB 100,114,101,115,115,0,43,43,0,45
 DB 45,0

_level14:
PUSH EBP
MOV EBP,ESP
ADD ESP,-24
LEA EAX,[EBP-4]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _primary
ADD ESP,4
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP-16]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
XOR CL,CL
CALL _blanks
MOV EAX,[_ch]
MOV EBX,EAX
MOV EAX,91
CALL __eq
OR EAX,EAX
JE _227
JMP _225
_227:
MOV EAX,[_ch]
MOV EBX,EAX
MOV EAX,40
CALL __eq
OR EAX,EAX
JE _228
JMP _225
_228:
XOR EAX,EAX
JMP _226
_225:
MOV EAX,1
_226:
OR EAX,EAX
JNE _229
JMP _224
_229:
ADD ESP,-28
LEA EAX,[EBP-52]
PUSH EAX
MOV CL,1
CALL _null_is
ADD ESP,4
_230:
MOV EAX,_223+0
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _233
JMP _232
_233:
LEA EAX,[EBP-16]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JE _235
JMP _234
_235:
MOV EAX,_223+2
PUSH EAX
MOV CL,1
CALL _error
ADD ESP,4
XOR CL,CL
CALL _skip
MOV EAX,_223+18
PUSH EAX
MOV CL,1
CALL _need
ADD ESP,4
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_234:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _237
JMP _236
_237:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _239
JMP _238
_239:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _fetch
ADD ESP,4
_238:
JMP _240
_236:
MOV EAX,_223+20
PUSH EAX
MOV CL,1
CALL _error
ADD ESP,4
LEA EAX,[EBP-4]
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
_240:
LEA EAX,[EBP-20]
PUSH EAX
LEA EAX,[EBP-24]
PUSH EAX
MOV CL,2
CALL _setstage
ADD ESP,8
LEA EAX,[EBP-52]
MOV EBX,12
ADD EAX,EBX
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
XOR EAX,EAX
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV EAX,_level1
PUSH EAX
LEA EAX,[EBP-52]
PUSH EAX
LEA EAX,[EBP-52]
PUSH EAX
MOV CL,5
CALL _down2
ADD ESP,20
MOV EAX,_223+36
PUSH EAX
MOV CL,1
CALL _need
ADD ESP,4
LEA EAX,[EBP-52]
MOV EBX,12
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _242
JMP _241
_242:
LEA EAX,[EBP-20]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _clearsta
ADD ESP,8
LEA EAX,[EBP-52]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _244
JMP _243
_244:
LEA EAX,[EBP-16]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,1
ADD EAX,EBX
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
MOV EBX,EAX
MOV EAX,2
MOV ECX,EAX
MOV EAX,EBX
SAR EAX,CL
MOV EBX,EAX
MOV EAX,4
CALL __eq
OR EAX,EAX
JNE _246
JMP _245
_246:
MOV EAX,110
PUSH EAX
LEA EAX,[EBP-52]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,2
MOV ECX,EAX
MOV EAX,EBX
SAL EAX,CL
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
JMP _247
_245:
LEA EAX,[EBP-16]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,1
ADD EAX,EBX
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
MOV EBX,EAX
MOV EAX,2
MOV ECX,EAX
MOV EAX,EBX
SAR EAX,CL
MOV EBX,EAX
MOV EAX,2
CALL __eq
OR EAX,EAX
JNE _249
JMP _248
_249:
MOV EAX,110
PUSH EAX
LEA EAX,[EBP-52]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,1
MOV ECX,EAX
MOV EAX,EBX
SAL EAX,CL
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
JMP _250
_248:
MOV EAX,110
PUSH EAX
LEA EAX,[EBP-52]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
_250:
_247:
MOV EAX,1
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
_243:
JMP _251
_241:
LEA EAX,[EBP-16]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,1
ADD EAX,EBX
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
MOV EBX,EAX
MOV EAX,2
MOV ECX,EAX
MOV EAX,EBX
SAR EAX,CL
MOV EBX,EAX
MOV EAX,4
CALL __eq
OR EAX,EAX
JNE _253
JMP _252
_253:
MOV EAX,14
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
MOV EAX,14
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
JMP _254
_252:
LEA EAX,[EBP-16]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,1
ADD EAX,EBX
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
MOV EBX,EAX
MOV EAX,2
MOV ECX,EAX
MOV EAX,EBX
SAR EAX,CL
MOV EBX,EAX
MOV EAX,2
CALL __eq
OR EAX,EAX
JNE _256
JMP _255
_256:
MOV EAX,14
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
_255:
_254:
MOV EAX,1
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
_251:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP-16]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,1
ADD EAX,EBX
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX,1
MOV [EBX],EAX
JMP _257
_232:
MOV EAX,_223+38
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _259
JMP _258
_259:
LEA EAX,[EBP-16]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JE _261
JMP _260
_261:
XOR EAX,EAX
PUSH EAX
MOV CL,1
CALL _callfunc
ADD ESP,4
JMP _262
_260:
LEA EAX,[EBP-16]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
MOV EBX,EAX
MOV EAX,4
CALL __ne
OR EAX,EAX
JNE _264
JMP _263
_264:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _268
JMP _266
_268:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
CALL __lneg
OR EAX,EAX
JNE _269
JMP _266
_269:
MOV EAX,1
JMP _267
_266:
XOR EAX,EAX
_267:
OR EAX,EAX
JNE _270
JMP _265
_270:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _fetch
ADD ESP,4
_265:
XOR EAX,EAX
PUSH EAX
MOV CL,1
CALL _callfunc
ADD ESP,4
JMP _271
_263:
LEA EAX,[EBP-16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _callfunc
ADD ESP,4
_271:
_262:
LEA EAX,[EBP-4]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,12
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
JMP _272
_258:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV ESP,EBP
POP EBP
RET
_272:
_257:
JMP _230
_231:
ADD ESP,28
_224:
LEA EAX,[EBP-16]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _276
JMP _274
_276:
LEA EAX,[EBP-16]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
MOV EBX,EAX
MOV EAX,4
CALL __eq
OR EAX,EAX
JNE _277
JMP _274
_277:
MOV EAX,1
JMP _275
_274:
XOR EAX,EAX
_275:
OR EAX,EAX
JNE _278
JMP _273
_278:
MOV EAX,25
PUSH EAX
LEA EAX,[EBP-16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_273:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV ESP,EBP
POP EBP
RET
_223 DB 91,0,99,97,110,39,116,32,115,117
 DB 98,115,99,114,105,112,116,0,93,0
 DB 99,97,110,39,116,32,115,117,98,115
 DB 99,114,105,112,116,0,93,0,40,0

_primary:
PUSH EBP
MOV EBP,ESP
ADD ESP,-20
MOV EAX,_279+0
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _281
JMP _280
_281:
_282:
LEA EAX,[EBP-20]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _level1
ADD ESP,4
POP EBX
MOV [EBX],EAX
MOV EAX,_279+2
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _284
JMP _283
_284:
JMP _282
_283:
MOV EAX,_279+4
PUSH EAX
MOV CL,1
CALL _need
ADD ESP,4
LEA EAX,[EBP-20]
MOV EBX,EAX
MOV EAX, [EBX]
MOV ESP,EBP
POP EBP
RET
_280:
XOR EAX,EAX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV EAX,14
PUSH EAX
MOV CL,3
CALL _putint
ADD ESP,12
LEA EAX,[EBP-16]
PUSH EAX
MOV CL,1
CALL _symname
ADD ESP,4
OR EAX,EAX
JNE _286
JMP _285
_286:
LEA EAX,[EBP-4]
PUSH EAX
LEA EAX,[EBP-16]
PUSH EAX
MOV CL,1
CALL _findloc
ADD ESP,4
POP EBX
MOV [EBX],EAX
OR EAX,EAX
JNE _288
JMP _287
_288:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
OR EAX,EAX
JE _290
JMP _289
_290:
XOR CL,CL
CALL _experr
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_289:
MOV EAX,58
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,5
ADD EAX,EBX
MOV EBX,2
ADD EAX,EBX
PUSH EAX
MOV EAX,4
PUSH EAX
MOV CL,2
CALL _getint
ADD ESP,8
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,1
ADD EAX,EBX
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
MOV EBX,EAX
MOV EAX,2
CALL __eq
OR EAX,EAX
JNE _292
JMP _291
_292:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,1
ADD EAX,EBX
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
POP EBX
MOV [EBX],EAX
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_291:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
MOV EBX,EAX
MOV EAX,3
CALL __eq
OR EAX,EAX
JNE _294
JMP _293
_294:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
MOV EBX,EAX
MOV EAX,17
MOV [EBX],EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,1
ADD EAX,EBX
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
POP EBX
MOV [EBX],EAX
_293:
MOV EAX,1
MOV ESP,EBP
POP EBP
RET
_287:
LEA EAX,[EBP-4]
PUSH EAX
LEA EAX,[EBP-16]
PUSH EAX
MOV CL,1
CALL _findglb
ADD ESP,4
POP EBX
MOV [EBX],EAX
OR EAX,EAX
JNE _296
JMP _295
_296:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
MOV EBX,EAX
MOV EAX,4
CALL __ne
OR EAX,EAX
JNE _298
JMP _297
_298:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
MOV EBX,EAX
MOV EAX,2
CALL __eq
OR EAX,EAX
JNE _300
JMP _299
_300:
MOV EAX,25
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,1
ADD EAX,EBX
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
POP EBX
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_299:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
MOV EBX,EAX
MOV EAX,3
CALL __eq
OR EAX,EAX
JNE _302
JMP _301
_302:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,1
ADD EAX,EBX
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
POP EBX
MOV [EBX],EAX
_301:
MOV EAX,1
MOV ESP,EBP
POP EBP
RET
_297:
JMP _303
_295:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-16]
PUSH EAX
MOV EAX,4
PUSH EAX
MOV EAX,16
PUSH EAX
XOR EAX,EAX
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV EAX,_glbptr
PUSH EAX
MOV EAX,4
PUSH EAX
MOV CL,7
CALL _addsym
ADD ESP,28
POP EBX
MOV [EBX],EAX
_303:
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_285:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _constant
ADD ESP,4
OR EAX,EAX
JE _305
JMP _304
_305:
XOR CL,CL
CALL _experr
_304:
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_279 DB 40,0,44,0,41,0

_experr:
PUSH EBP
MOV EBP,ESP
MOV EAX,_306+0
PUSH EAX
MOV CL,1
CALL _error
ADD ESP,4
MOV EAX,108
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
XOR CL,CL
CALL _skip
POP EBP
RET
_306 DB 105,110,118,97,108,105,100,32,101,120
 DB 112,114,101,115,115,105,111,110,0

_callfunc:
PUSH EBP
MOV EBP,ESP
ADD ESP,-12
LEA EAX,[EBP-4]
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
XOR CL,CL
CALL _blanks
_308:
MOV EAX,[_lptr]
PUSH EAX
MOV EAX,_307+0
PUSH EAX
MOV CL,2
CALL _streq
ADD ESP,8
OR EAX,EAX
JE _310
JMP _309
_310:
XOR CL,CL
CALL _endst
OR EAX,EAX
JNE _312
JMP _311
_312:
JMP _309
_311:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _314
JMP _313
_314:
LEA EAX,[EBP-8]
PUSH EAX
LEA EAX,[EBP-12]
PUSH EAX
MOV CL,2
CALL _expressi
ADD ESP,8
MOV EAX,60
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
JMP _315
_313:
MOV EAX,60
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
LEA EAX,[EBP-8]
PUSH EAX
LEA EAX,[EBP-12]
PUSH EAX
MOV CL,2
CALL _expressi
ADD ESP,8
MOV EAX,71
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
_315:
LEA EAX,[EBP-4]
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
POP EBX
MOV [EBX],EAX
MOV EAX,_307+2
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JE _317
JMP _316
_317:
JMP _309
_316:
JMP _308
_309:
MOV EAX,_307+4
PUSH EAX
MOV CL,1
CALL _need
ADD ESP,4
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _321
JMP _319
_321:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,11
ADD EAX,EBX
PUSH EAX
MOV EAX,_307+6
PUSH EAX
MOV CL,2
CALL _streq
ADD ESP,8
MOV EBX,EAX
XOR EAX,EAX
CALL __eq
OR EAX,EAX
JNE _322
JMP _319
_322:
MOV EAX,1
JMP _320
_319:
XOR EAX,EAX
_320:
OR EAX,EAX
JNE _323
JMP _318
_323:
MOV EAX,5
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,2
MOV ECX,EAX
MOV EAX,EBX
SAR EAX,CL
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
_318:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _325
JMP _324
_325:
MOV EAX,9
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
JMP _326
_324:
MOV EAX,8
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
_326:
MOV EAX,2
PUSH EAX
MOV EAX,[_csp]
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
ADD EAX,EBX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
MOV ESP,EBP
POP EBP
RET
_307 DB 41,0,44,0,41,0,67,67,65,82
 DB 71,67,0

_fdouble:
PUSH EBP
MOV EBP,ESP
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,1
CALL __eq
OR EAX,EAX
JE _333
JMP _329
_333:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,69
CALL __eq
OR EAX,EAX
JE _334
JMP _329
_334:
XOR EAX,EAX
JMP _330
_329:
MOV EAX,1
_330:
OR EAX,EAX
JNE _335
JMP _331
_335:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
XOR EAX,EAX
CALL __eq
OR EAX,EAX
JNE _336
JMP _331
_336:
MOV EAX,1
JMP _332
_331:
XOR EAX,EAX
_332:
OR EAX,EAX
JNE _337
JMP _328
_337:
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,2
MOV ECX,EAX
MOV EAX,EBX
SAR EAX,CL
JMP _340
_341:
_342:
XOR EAX,EAX
POP EBP
RET
_343:
MOV EAX,1
POP EBP
RET
_344:
MOV EAX,2
POP EBP
RET
JMP _339
_340:
CALL __switch
 DD _342
 DD 1
 DD _343
 DD 2
 DD _344
 DD 4
 DD 0
JMP _341
_339:
_328:
XOR EAX,EAX
POP EBP
RET

_step:
PUSH EBP
MOV EBP,ESP
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _fetch
ADD ESP,4
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _348
JMP _346
_348:
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,2
MOV ECX,EAX
MOV EAX,EBX
SAR EAX,CL
JMP _347
_346:
MOV EAX,1
_347:
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _store
ADD ESP,4
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _350
JMP _349
_350:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _353
JMP _351
_353:
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,2
MOV ECX,EAX
MOV EAX,EBX
SAR EAX,CL
JMP _352
_351:
MOV EAX,1
_352:
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
_349:
POP EBP
RET

_store:
PUSH EBP
MOV EBP,ESP
ADD ESP,-4
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _356
JMP _355
_356:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,2
MOV ECX,EAX
MOV EAX,EBX
SAR EAX,CL
MOV EBX,EAX
MOV EAX,1
CALL __eq
OR EAX,EAX
JNE _358
JMP _357
_358:
MOV EAX,62
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
JMP _359
_357:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,2
MOV ECX,EAX
MOV EAX,EBX
SAR EAX,CL
MOV EBX,EAX
MOV EAX,2
CALL __eq
OR EAX,EAX
JNE _361
JMP _360
_361:
MOV EAX,64
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
JMP _362
_360:
MOV EAX,115
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
_362:
_359:
JMP _363
_355:
LEA EAX,[EBP-4]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
MOV EBX,EAX
MOV EAX,3
CALL __eq
OR EAX,EAX
JNE _365
JMP _364
_365:
MOV EAX,114
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
JMP _366
_364:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,1
ADD EAX,EBX
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
MOV EBX,EAX
MOV EAX,2
MOV ECX,EAX
MOV EAX,EBX
SAR EAX,CL
MOV EBX,EAX
MOV EAX,1
CALL __eq
OR EAX,EAX
JNE _368
JMP _367
_368:
MOV EAX,61
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
JMP _369
_367:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,1
ADD EAX,EBX
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
MOV EBX,EAX
MOV EAX,2
MOV ECX,EAX
MOV EAX,EBX
SAR EAX,CL
MOV EBX,EAX
MOV EAX,2
CALL __eq
OR EAX,EAX
JNE _371
JMP _370
_371:
MOV EAX,63
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
JMP _372
_370:
MOV EAX,114
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
_372:
_369:
_366:
_363:
MOV ESP,EBP
POP EBP
RET

_fetch:
PUSH EBP
MOV EBP,ESP
ADD ESP,-4
LEA EAX,[EBP-4]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _375
JMP _374
_375:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,2
MOV ECX,EAX
MOV EAX,EBX
SAR EAX,CL
MOV EBX,EAX
MOV EAX,4
CALL __eq
OR EAX,EAX
JNE _377
JMP _376
_377:
MOV EAX,109
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
JMP _378
_376:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,2
MOV ECX,EAX
MOV EAX,EBX
SAR EAX,CL
MOV EBX,EAX
MOV EAX,2
CALL __eq
OR EAX,EAX
JNE _380
JMP _379
_380:
MOV EAX,32
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
JMP _381
_379:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,1
ADD EAX,EBX
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
MOV EBX,EAX
MOV EAX,1
AND EAX,EBX
OR EAX,EAX
JNE _383
JMP _382
_383:
MOV EAX,29
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
JMP _384
_382:
MOV EAX,28
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
_384:
_381:
_378:
JMP _385
_374:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
MOV EBX,EAX
MOV EAX,3
CALL __eq
OR EAX,EAX
JNE _387
JMP _386
_387:
MOV EAX,107
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
JMP _388
_386:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,1
ADD EAX,EBX
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
MOV EBX,EAX
MOV EAX,2
MOV ECX,EAX
MOV EAX,EBX
SAR EAX,CL
MOV EBX,EAX
MOV EAX,4
CALL __eq
OR EAX,EAX
JNE _390
JMP _389
_390:
MOV EAX,107
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
JMP _391
_389:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,1
ADD EAX,EBX
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
MOV EBX,EAX
MOV EAX,2
MOV ECX,EAX
MOV EAX,EBX
SAR EAX,CL
MOV EBX,EAX
MOV EAX,2
CALL __eq
OR EAX,EAX
JNE _393
JMP _392
_393:
MOV EAX,30
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
JMP _394
_392:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,1
ADD EAX,EBX
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
MOV EBX,EAX
MOV EAX,1
AND EAX,EBX
OR EAX,EAX
JNE _396
JMP _395
_396:
MOV EAX,27
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
JMP _397
_395:
MOV EAX,26
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
_397:
_394:
_391:
_388:
_385:
MOV ESP,EBP
POP EBP
RET

_constant:
PUSH EBP
MOV EBP,ESP
ADD ESP,-4
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,12
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
PUSH EAX
MOV CL,1
CALL _number
ADD ESP,4
POP EBX
MOV [EBX],EAX
OR EAX,EAX
JNE _400
JMP _399
_400:
MOV EAX,108
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
JMP _401
_399:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,12
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
PUSH EAX
MOV CL,1
CALL _chrcon
ADD ESP,4
POP EBX
MOV [EBX],EAX
OR EAX,EAX
JNE _403
JMP _402
_403:
MOV EAX,108
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
JMP _404
_402:
LEA EAX,[EBP-4]
PUSH EAX
MOV CL,1
CALL _string
ADD ESP,4
OR EAX,EAX
JNE _406
JMP _405
_406:
MOV EAX,24
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
JMP _407
_405:
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_407:
_404:
_401:
MOV EAX,1
MOV ESP,EBP
POP EBP
RET

_number:
PUSH EBP
MOV EBP,ESP
ADD ESP,-8
LEA EAX,[EBP-4]
PUSH EAX
LEA EAX,[EBP-8]
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
_409:
MOV EAX,_408+0
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _412
JMP _411
_412:
JMP _413
_411:
MOV EAX,_408+2
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JNE _415
JMP _414
_415:
LEA EAX,[EBP-8]
MOV EBX,EAX
MOV EAX,1
MOV [EBX],EAX
JMP _416
_414:
JMP _410
_416:
_413:
JMP _409
_410:
MOV EAX,[_ch]
PUSH EAX
MOV CL,1
CALL _isdigit
ADD ESP,4
OR EAX,EAX
JE _418
JMP _417
_418:
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_417:
MOV EAX,[_ch]
MOV EBX,EAX
MOV EAX,48
CALL __eq
OR EAX,EAX
JNE _420
JMP _419
_420:
_421:
MOV EAX,[_ch]
MOV EBX,EAX
MOV EAX,48
CALL __eq
OR EAX,EAX
JNE _423
JMP _422
_423:
XOR CL,CL
CALL _inbyte
JMP _421
_422:
MOV EAX,[_ch]
PUSH EAX
MOV CL,1
CALL _toupper
ADD ESP,4
MOV EBX,EAX
MOV EAX,88
CALL __eq
OR EAX,EAX
JNE _425
JMP _424
_425:
XOR CL,CL
CALL _inbyte
_426:
MOV EAX,[_ch]
PUSH EAX
MOV CL,1
CALL _isxdigit
ADD ESP,4
OR EAX,EAX
JNE _428
JMP _427
_428:
MOV EAX,[_ch]
PUSH EAX
MOV CL,1
CALL _isdigit
ADD ESP,4
OR EAX,EAX
JNE _430
JMP _429
_430:
LEA EAX,[EBP-4]
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,16
IMUL EBX
PUSH EAX
XOR CL,CL
CALL _inbyte
MOV EBX,EAX
MOV EAX,48
XCHG EAX,EBX
SUB EAX,EBX
POP EBX
ADD EAX,EBX
POP EBX
MOV [EBX],EAX
JMP _431
_429:
LEA EAX,[EBP-4]
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,16
IMUL EBX
MOV EBX,10
ADD EAX,EBX
PUSH EAX
XOR CL,CL
CALL _inbyte
PUSH EAX
MOV CL,1
CALL _toupper
ADD ESP,4
MOV EBX,EAX
MOV EAX,65
XCHG EAX,EBX
SUB EAX,EBX
POP EBX
ADD EAX,EBX
POP EBX
MOV [EBX],EAX
_431:
JMP _426
_427:
JMP _432
_424:
_433:
MOV EAX,[_ch]
MOV EBX,EAX
MOV EAX,48
CALL __ge
OR EAX,EAX
JNE _437
JMP _435
_437:
MOV EAX,[_ch]
MOV EBX,EAX
MOV EAX,55
CALL __le
OR EAX,EAX
JNE _438
JMP _435
_438:
MOV EAX,1
JMP _436
_435:
XOR EAX,EAX
_436:
OR EAX,EAX
JNE _439
JMP _434
_439:
LEA EAX,[EBP-4]
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,8
IMUL EBX
PUSH EAX
XOR CL,CL
CALL _inbyte
MOV EBX,EAX
MOV EAX,48
XCHG EAX,EBX
SUB EAX,EBX
POP EBX
ADD EAX,EBX
POP EBX
MOV [EBX],EAX
JMP _433
_434:
_432:
JMP _440
_419:
_441:
MOV EAX,[_ch]
PUSH EAX
MOV CL,1
CALL _isdigit
ADD ESP,4
OR EAX,EAX
JNE _443
JMP _442
_443:
LEA EAX,[EBP-4]
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,10
IMUL EBX
PUSH EAX
XOR CL,CL
CALL _inbyte
MOV EBX,EAX
MOV EAX,48
XCHG EAX,EBX
SUB EAX,EBX
POP EBX
ADD EAX,EBX
POP EBX
MOV [EBX],EAX
JMP _441
_442:
_440:
LEA EAX,[EBP-8]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _445
JMP _444
_445:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
NEG EAX
POP EBX
MOV [EBX],EAX
MOV EAX,16
MOV ESP,EBP
POP EBP
RET
_444:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
OR EAX,EAX
JL _447
JMP _446
_447:
MOV EAX,17
MOV ESP,EBP
POP EBP
RET
_446:
MOV EAX,16
MOV ESP,EBP
POP EBP
RET
_448:
MOV ESP,EBP
POP EBP
RET
_408 DB 43,0,45,0

_chrcon:
PUSH EBP
MOV EBP,ESP
ADD ESP,-4
LEA EAX,[EBP-4]
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
MOV EAX,_449+0
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JE _451
JMP _450
_451:
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_450:
_452:
MOV EAX,[_ch]
MOV EBX,EAX
MOV EAX,39
CALL __ne
OR EAX,EAX
JNE _454
JMP _453
_454:
LEA EAX,[EBP-4]
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,8
MOV ECX,EAX
MOV EAX,EBX
SAL EAX,CL
PUSH EAX
XOR CL,CL
CALL _litchar
MOV EBX,EAX
MOV EAX,255
AND EAX,EBX
POP EBX
ADD EAX,EBX
POP EBX
MOV [EBX],EAX
JMP _452
_453:
XOR CL,CL
CALL _gch
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
MOV EAX,16
MOV ESP,EBP
POP EBP
RET
_449 DB 39,0

_string:
PUSH EBP
MOV EBP,ESP
ADD ESP,-4
MOV EAX,_quote
PUSH EAX
MOV CL,1
CALL _match
ADD ESP,4
OR EAX,EAX
JE _457
JMP _456
_457:
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_456:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV EAX,[_litptr]
POP EBX
MOV [EBX],EAX
_458:
MOV EAX,[_ch]
MOV EBX,EAX
MOV EAX,34
CALL __ne
OR EAX,EAX
JNE _460
JMP _459
_460:
MOV EAX,[_ch]
OR EAX,EAX
JE _462
JMP _461
_462:
JMP _459
_461:
XOR CL,CL
CALL _litchar
PUSH EAX
MOV EAX,1
PUSH EAX
MOV CL,2
CALL _stowlit
ADD ESP,8
JMP _458
_459:
XOR CL,CL
CALL _gch
MOV EAX,[_litq]
PUSH EAX
MOV EAX,[_litptr]
INC EAX
MOV DWORD [_litptr],EAX
DEC EAX
POP EBX
ADD EAX,EBX
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],AL
MOV EAX,1
MOV ESP,EBP
POP EBP
RET

_stowlit:
PUSH EBP
MOV EBP,ESP
MOV EAX,[_litptr]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
ADD EAX,EBX
MOV EBX,EAX
MOV EAX,2999
CALL __ge
OR EAX,EAX
JNE _465
JMP _464
_465:
MOV EAX,_463+0
PUSH EAX
MOV CL,1
CALL _error
ADD ESP,4
MOV EAX,7
PUSH EAX
MOV CL,1
CALL _OS_exit
ADD ESP,4
_464:
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV EAX,[_litq]
PUSH EAX
MOV EAX,[_litptr]
POP EBX
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,3
CALL _putint
ADD ESP,12
MOV EAX,[_litptr]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
ADD EAX,EBX
MOV DWORD [_litptr],EAX
POP EBP
RET
_463 DB 108,105,116,101,114,97,108,32,113,117
 DB 101,117,101,32,111,118,101,114,102,108
 DB 111,119,0

_litchar:
PUSH EBP
MOV EBP,ESP
ADD ESP,-8
MOV EAX,[_ch]
MOV EBX,EAX
MOV EAX,92
CALL __ne
OR EAX,EAX
JE _470
JMP _468
_470:
MOV EAX,[_nch]
MOV EBX,EAX
XOR EAX,EAX
CALL __eq
OR EAX,EAX
JE _471
JMP _468
_471:
XOR EAX,EAX
JMP _469
_468:
MOV EAX,1
_469:
OR EAX,EAX
JNE _472
JMP _467
_472:
XOR CL,CL
CALL _gch
MOV ESP,EBP
POP EBP
RET
_467:
XOR CL,CL
CALL _gch
MOV EAX,[_ch]
JMP _475
_476:
XOR CL,CL
CALL _gch
MOV EAX,10
MOV ESP,EBP
POP EBP
RET
_477:
XOR CL,CL
CALL _gch
MOV EAX,9
MOV ESP,EBP
POP EBP
RET
_478:
XOR CL,CL
CALL _gch
MOV EAX,8
MOV ESP,EBP
POP EBP
RET
_479:
XOR CL,CL
CALL _gch
MOV EAX,12
MOV ESP,EBP
POP EBP
RET
JMP _474
_475:
CALL __switch
 DD _476
 DD 110
 DD _477
 DD 116
 DD _478
 DD 98
 DD _479
 DD 102
 DD 0
_474:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX,3
MOV [EBX],EAX
LEA EAX,[EBP-8]
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
_480:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
DEC EAX
MOV [EBX],EAX
INC EAX
MOV EBX,EAX
XOR EAX,EAX
CALL __gt
OR EAX,EAX
JNE _484
JMP _482
_484:
MOV EAX,[_ch]
MOV EBX,EAX
MOV EAX,48
CALL __ge
OR EAX,EAX
JNE _485
JMP _482
_485:
MOV EAX,[_ch]
MOV EBX,EAX
MOV EAX,55
CALL __le
OR EAX,EAX
JNE _486
JMP _482
_486:
MOV EAX,1
JMP _483
_482:
XOR EAX,EAX
_483:
OR EAX,EAX
JNE _487
JMP _481
_487:
LEA EAX,[EBP-8]
PUSH EAX
LEA EAX,[EBP-8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,3
MOV ECX,EAX
MOV EAX,EBX
SAL EAX,CL
PUSH EAX
XOR CL,CL
CALL _gch
POP EBX
ADD EAX,EBX
MOV EBX,EAX
MOV EAX,48
XCHG EAX,EBX
SUB EAX,EBX
POP EBX
MOV [EBX],EAX
JMP _480
_481:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,2
CALL __eq
OR EAX,EAX
JNE _489
JMP _488
_489:
XOR CL,CL
CALL _gch
MOV ESP,EBP
POP EBP
RET
_488:
LEA EAX,[EBP-8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV ESP,EBP
POP EBP
RET
_490:
MOV ESP,EBP
POP EBP
RET

_skim:
PUSH EBP
MOV EBP,ESP
ADD ESP,-12
LEA EAX,[EBP-8]
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
_492:
LEA EAX,[EBP-4]
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _down1
ADD ESP,8
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP+28]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _nextop
ADD ESP,4
OR EAX,EAX
JNE _495
JMP _494
_495:
MOV EAX,[_opsize]
PUSH EAX
MOV CL,1
CALL _bump
ADD ESP,4
LEA EAX,[EBP-8]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JE _497
JMP _496
_497:
LEA EAX,[EBP-8]
PUSH EAX
XOR CL,CL
CALL _getlabel
POP EBX
MOV [EBX],EAX
_496:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+24]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,4
CALL _dropout
ADD ESP,16
JMP _498
_494:
LEA EAX,[EBP-8]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _500
JMP _499
_500:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+24]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,4
CALL _dropout
ADD ESP,16
MOV EAX,108
PUSH EAX
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
MOV EAX,40
PUSH EAX
LEA EAX,[EBP-12]
PUSH EAX
XOR CL,CL
CALL _getlabel
POP EBX
MOV [EBX],EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
MOV EAX,41
PUSH EAX
LEA EAX,[EBP-8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
MOV EAX,108
PUSH EAX
LEA EAX,[EBP+20]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
MOV EAX,41
PUSH EAX
LEA EAX,[EBP-12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,12
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,24
ADD EAX,EBX
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
POP EBX
MOV [EBX],EAX
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_499:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV ESP,EBP
POP EBP
RET
_501:
_498:
JMP _492
_493:
MOV ESP,EBP
POP EBP
RET

_dropout:
PUSH EBP
MOV EBP,ESP
LEA EAX,[EBP+20]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _504
JMP _503
_504:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _fetch
ADD ESP,4
JMP _505
_503:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,12
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _507
JMP _506
_507:
MOV EAX,108
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
_506:
_505:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
POP EBP
RET

_down:
PUSH EBP
MOV EBP,ESP
ADD ESP,-4
LEA EAX,[EBP-4]
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _down1
ADD ESP,8
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP+20]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _nextop
ADD ESP,4
OR EAX,EAX
JE _510
JMP _509
_510:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV ESP,EBP
POP EBP
RET
_509:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _512
JMP _511
_512:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _fetch
ADD ESP,4
_511:
_513:
LEA EAX,[EBP+20]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _nextop
ADD ESP,4
OR EAX,EAX
JNE _516
JMP _515
_516:
ADD ESP,-28
LEA EAX,[EBP-32]
PUSH EAX
MOV CL,1
CALL _null_is
ADD ESP,4
MOV EAX,[_opsize]
PUSH EAX
MOV CL,1
CALL _bump
ADD ESP,4
MOV EAX,[_opindex]
PUSH EAX
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
ADD EAX,EBX
MOV DWORD [_opindex],EAX
MOV EAX,_op
PUSH EAX
MOV EAX,[_opindex]
POP EBX
SHL EAX,1
SHL EAX,1
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV EAX,_op2
PUSH EAX
MOV EAX,[_opindex]
POP EBX
SHL EAX,1
SHL EAX,1
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP-32]
PUSH EAX
MOV CL,5
CALL _down2
ADD ESP,20
ADD ESP,28
JMP _517
_515:
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET
_517:
JMP _513
_514:
MOV ESP,EBP
POP EBP
RET

_down1:
PUSH EBP
MOV EBP,ESP
ADD ESP,-12
LEA EAX,[EBP-8]
PUSH EAX
LEA EAX,[EBP-12]
PUSH EAX
MOV CL,2
CALL _setstage
ADD ESP,8
LEA EAX,[EBP-4]
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
XCHG EAX,EBX
PUSH EBX
CALL EAX
ADD ESP,4
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,12
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _520
JMP _519
_520:
LEA EAX,[EBP-8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _clearsta
ADD ESP,8
_519:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV ESP,EBP
POP EBP
RET

_down2:
PUSH EBP
MOV EBP,ESP
ADD ESP,-16
LEA EAX,[EBP-4]
PUSH EAX
LEA EAX,[EBP-8]
PUSH EAX
MOV CL,2
CALL _setstage
ADD ESP,8
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,24
ADD EAX,EBX
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,12
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _523
JMP _522
_523:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _down1
ADD ESP,8
OR EAX,EAX
JNE _525
JMP _524
_525:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _fetch
ADD ESP,4
_524:
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JE _527
JMP _526
_527:
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,24
ADD EAX,EBX
PUSH EAX
MOV EAX,[_snext]
POP EBX
MOV [EBX],EAX
_526:
MOV EAX,33
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+24]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,3
CALL _fdouble
ADD ESP,12
POP EBX
MOV ECX,EAX
MOV EAX,EBX
SAL EAX,CL
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
JMP _528
_522:
MOV EAX,60
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,2
CALL _down1
ADD ESP,8
OR EAX,EAX
JNE _530
JMP _529
_530:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _fetch
ADD ESP,4
_529:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,12
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _532
JMP _531
_532:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JE _534
JMP _533
_534:
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,24
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP-8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
_533:
MOV EAX,[_csp]
MOV EBX,4
ADD EAX,EBX
MOV DWORD [_csp],EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _clearsta
ADD ESP,8
LEA EAX,[EBP+24]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,1
CALL __eq
OR EAX,EAX
JNE _536
JMP _535
_536:
MOV EAX,110
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+24]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,3
CALL _fdouble
ADD ESP,12
POP EBX
MOV ECX,EAX
MOV EAX,EBX
SAL EAX,CL
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
JMP _537
_535:
MOV EAX,51
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
MOV EAX,108
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+24]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,3
CALL _fdouble
ADD ESP,12
POP EBX
MOV ECX,EAX
MOV EAX,EBX
SAL EAX,CL
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
_537:
JMP _538
_531:
MOV EAX,59
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
LEA EAX,[EBP-16]
PUSH EAX
LEA EAX,[EBP+24]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,3
CALL _fdouble
ADD ESP,12
POP EBX
MOV [EBX],EAX
OR EAX,EAX
JNE _540
JMP _539
_540:
MOV EAX,14
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
LEA EAX,[EBP-16]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,1
CALL __gt
OR EAX,EAX
JNE _542
JMP _541
_542:
MOV EAX,14
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
_541:
_539:
LEA EAX,[EBP-16]
PUSH EAX
LEA EAX,[EBP+24]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,3
CALL _fdouble
ADD ESP,12
POP EBX
MOV [EBX],EAX
OR EAX,EAX
JNE _544
JMP _543
_544:
MOV EAX,15
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
LEA EAX,[EBP-16]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,1
CALL __gt
OR EAX,EAX
JNE _546
JMP _545
_546:
MOV EAX,15
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
_545:
_543:
_538:
_528:
LEA EAX,[EBP+24]
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _548
JMP _547
_548:
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _nosign
ADD ESP,4
OR EAX,EAX
JE _552
JMP _550
_552:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,1
CALL _nosign
ADD ESP,4
OR EAX,EAX
JE _553
JMP _550
_553:
XOR EAX,EAX
JMP _551
_550:
MOV EAX,1
_551:
OR EAX,EAX
JNE _554
JMP _549
_554:
LEA EAX,[EBP+24]
PUSH EAX
LEA EAX,[EBP+20]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
_549:
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,12
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,12
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,12
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
AND EAX,EBX
POP EBX
MOV [EBX],EAX
OR EAX,EAX
JNE _556
JMP _555
_556:
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+24]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,16
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,3
CALL _calc
ADD ESP,12
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _clearsta
ADD ESP,8
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,12
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,17
CALL __eq
OR EAX,EAX
JNE _558
JMP _557
_558:
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,12
ADD EAX,EBX
MOV EBX,EAX
MOV EAX,17
MOV [EBX],EAX
_557:
JMP _559
_555:
LEA EAX,[EBP+24]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
LEA EAX,[EBP+24]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,69
CALL __eq
OR EAX,EAX
JNE _563
JMP _561
_563:
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,2
MOV ECX,EAX
MOV EAX,EBX
SAR EAX,CL
MOV EBX,EAX
MOV EAX,2
CALL __eq
OR EAX,EAX
JNE _564
JMP _561
_564:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,2
MOV ECX,EAX
MOV EAX,EBX
SAR EAX,CL
MOV EBX,EAX
MOV EAX,2
CALL __eq
OR EAX,EAX
JNE _565
JMP _561
_565:
MOV EAX,1
JMP _562
_561:
XOR EAX,EAX
_562:
OR EAX,EAX
JNE _566
JMP _560
_566:
MOV EAX,70
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
MOV EAX,31
PUSH EAX
MOV EAX,1
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
MOV EAX,7
PUSH EAX
XOR EAX,EAX
PUSH EAX
MOV CL,2
CALL _gen
ADD ESP,8
_560:
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,20
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+24]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
_559:
LEA EAX,[EBP+24]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,69
CALL __eq
OR EAX,EAX
JE _570
JMP _568
_570:
LEA EAX,[EBP+24]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,1
CALL __eq
OR EAX,EAX
JE _571
JMP _568
_571:
XOR EAX,EAX
JMP _569
_568:
MOV EAX,1
_569:
OR EAX,EAX
JNE _572
JMP _567
_572:
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _576
JMP _574
_576:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _577
JMP _574
_577:
MOV EAX,1
JMP _575
_574:
XOR EAX,EAX
_575:
OR EAX,EAX
JNE _578
JMP _573
_578:
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
MOV EBX,EAX
XOR EAX,EAX
MOV [EBX],EAX
JMP _579
_573:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JNE _581
JMP _580
_581:
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,4
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
_580:
_579:
_567:
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
XOR EAX,EAX
CALL __eq
OR EAX,EAX
JE _587
JMP _583
_587:
LEA EAX,[EBP-12]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
OR EAX,EAX
JNE _588
JMP _584
_588:
LEA EAX,[EBP-12]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,1
ADD EAX,EBX
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
MOV EBX,EAX
MOV EAX,1
AND EAX,EBX
OR EAX,EAX
JNE _589
JMP _584
_589:
MOV EAX,1
JMP _585
_584:
XOR EAX,EAX
_585:
OR EAX,EAX
JE _590
JMP _583
_590:
XOR EAX,EAX
JMP _586
_583:
MOV EAX,1
_586:
OR EAX,EAX
JNE _591
JMP _582
_591:
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
_582:
_547:
MOV ESP,EBP
POP EBP
RET

_nosign:
PUSH EBP
MOV EBP,ESP
ADD ESP,-4
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,8
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
OR EAX,EAX
JE _598
JMP _594
_598:
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,12
ADD EAX,EBX
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX,17
CALL __eq
OR EAX,EAX
JE _599
JMP _594
_599:
LEA EAX,[EBP-4]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV [EBX],EAX
OR EAX,EAX
JNE _600
JMP _595
_600:
LEA EAX,[EBP-4]
MOV EBX,EAX
MOV EAX, [EBX]
MOV EBX,1
ADD EAX,EBX
MOV EBX,EAX
MOVSX EAX,BYTE [EBX]
MOV EBX,EAX
MOV EAX,1
AND EAX,EBX
OR EAX,EAX
JNE _601
JMP _595
_601:
MOV EAX,1
JMP _596
_595:
XOR EAX,EAX
_596:
OR EAX,EAX
JE _602
JMP _594
_602:
XOR EAX,EAX
JMP _597
_594:
MOV EAX,1
_597:
OR EAX,EAX
JNE _603
JMP _593
_603:
MOV EAX,1
MOV ESP,EBP
POP EBP
RET
_593:
XOR EAX,EAX
MOV ESP,EBP
POP EBP
RET

_calc:
PUSH EBP
MOV EBP,ESP
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
JMP _607
_608:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
ADD EAX,EBX
POP EBP
RET
_609:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
XCHG EAX,EBX
SUB EAX,EBX
POP EBP
RET
_610:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
IMUL EBX
POP EBP
RET
_611:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
XCHG EAX,EBX
CDQ
IDIV EBX
POP EBP
RET
_612:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
XCHG EAX,EBX
CDQ
IDIV EBX
MOV EAX,EDX
POP EBP
RET
_613:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
CALL __eq
POP EBP
RET
_614:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
CALL __ne
POP EBP
RET
_615:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
CALL __le
POP EBP
RET
_616:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
CALL __ge
POP EBP
RET
_617:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
CALL __lt
POP EBP
RET
_618:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
CALL __gt
POP EBP
RET
_619:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
AND EAX,EBX
POP EBP
RET
_620:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
OR EAX,EBX
POP EBP
RET
_621:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
XOR EAX,EBX
POP EBP
RET
_622:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV ECX,EAX
MOV EAX,EBX
SAR EAX,CL
POP EBP
RET
_623:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MOV ECX,EAX
MOV EAX,EBX
SAL EAX,CL
POP EBP
RET
JMP _606
_607:
CALL __switch
 DD _608
 DD 1
 DD _609
 DD 69
 DD _610
 DD 52
 DD _611
 DD 16
 DD _612
 DD 49
 DD _613
 DD 20
 DD _614
 DD 55
 DD _615
 DD 43
 DD _616
 DD 22
 DD _617
 DD 47
 DD _618
 DD 35
 DD _619
 DD 3
 DD _620
 DD 57
 DD _621
 DD 73
 DD _622
 DD 7
 DD _623
 DD 6
 DD 0
_606:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
MOV CL,3
CALL _calc2
ADD ESP,12
POP EBP
RET

_calc2:
PUSH EBP
MOV EBP,ESP
LEA EAX,[EBP+12]
MOV EBX,EAX
MOV EAX, [EBX]
JMP _627
_628:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
MUL EBX
POP EBP
RET
_629:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
XCHG EAX,EBX
XOR EDX,EDX
DIV EBX
POP EBP
RET
_630:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
XCHG EAX,EBX
XOR EDX,EDX
DIV EBX
MOV EAX,EDX
POP EBP
RET
_631:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
CALL __ule
POP EBP
RET
_632:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
CALL __uge
POP EBP
RET
_633:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
CALL __ult
POP EBP
RET
_634:
LEA EAX,[EBP+16]
MOV EBX,EAX
MOV EAX, [EBX]
PUSH EAX
LEA EAX,[EBP+8]
MOV EBX,EAX
MOV EAX, [EBX]
POP EBX
CALL __ugt
POP EBP
RET
JMP _626
_627:
CALL __switch
 DD _628
 DD 53
 DD _629
 DD 17
 DD _630
 DD 50
 DD _631
 DD 44
 DD _632
 DD 23
 DD _633
 DD 48
 DD _634
 DD 36
 DD 0
_626:
XOR EAX,EAX
POP EBP
RET
